<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lshare手札</title>
  <icon>https://www.gravatar.com/avatar/67398ac80b713195e4e6faee10834ea3</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://linlshare.github.io/"/>
  <updated>2018-10-26T14:58:13.583Z</updated>
  <id>http://linlshare.github.io/</id>
  
  <author>
    <name>Lshare</name>
    <email>Lshare@outlook.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>绕口令大全</title>
    <link href="http://linlshare.github.io/2016/04/11/%E7%BB%95%E5%8F%A3%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
    <id>http://linlshare.github.io/2016/04/11/绕口令大全/</id>
    <published>2016-04-11T01:00:17.000Z</published>
    <updated>2018-10-26T14:58:13.583Z</updated>
    
    <content type="html"><![CDATA[<h3 id="单韵母练习"><a href="#单韵母练习" class="headerlink" title="单韵母练习"></a>单韵母练习</h3><p>1．坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅？<br>2．山上五棵树，架上五壶醋，林中五只鹿，箱里五条裤。伐了山上树，搬下架上的醋，射死林中的鹿，取出箱中的裤。<br>3．山前有只虎，山下有只猴。虎撵猴，猴斗虎；虎撵不上猴，猴斗不了虎。</p><h3 id="鼻韵母练习"><a href="#鼻韵母练习" class="headerlink" title="鼻韵母练习"></a>鼻韵母练习</h3><p>1．扁担长，板凳宽，扁担没有板凳宽，板凳没有扁担长。扁担绑在板凳上，板凳不让扁担绑在板凳上。<br>2．一平盆面，烙一平盆饼，饼碰盆，盆碰饼。<br>3．任命是任命，人名是人名，任命不能说成人名，人名也不能说成任命。<br>4．山前有个严圆眼，山后有个严眼圆，二人山前来比眼，不知是严圆眼的眼圆，还是严眼圆比严圆眼的眼圆？</p><h3 id="复韵母练习"><a href="#复韵母练习" class="headerlink" title="复韵母练习"></a>复韵母练习</h3><p>1．磨房磨墨，墨碎磨房一磨墨；梅香添煤，煤爆梅香两眉灰。<br>2．出南门，走六步，见着六叔和六舅，叫声六叔和六舅，借我六斗六升好绿豆；过了秋，打了豆，还我六叔六舅六十六斗六升好绿豆。<br>3．哥挎瓜筐过宽沟，过沟筐漏瓜滚沟。隔沟挎筐瓜筐扣，瓜滚筐空哥怪沟。<br>4．山前有个崔粗腿，山后有个崔腿粗。二人山前来比腿，不知是崔粗腿比崔腿粗的腿粗，还是崔腿粗比崔粗腿的腿粗？</p><h3 id="唇音练习"><a href="#唇音练习" class="headerlink" title="唇音练习"></a>唇音练习</h3><p>1．老方扛着黄幌子，老黄扛着方幌子。老方要拿老黄的方幌子，老黄要拿老方的黄幌子，末了儿方幌子碰破了黄幌子，黄幌子碰破了方幌子。<br>2．粉红墙上画凤凰，红凤凰，粉凤凰，粉红凤凰，花凤凰。<br>3．吃葡萄不吐葡萄皮儿，不吃葡萄倒吐葡萄皮儿。<br>4．八百标兵奔北坡，北坡炮兵并排跑，炮兵怕把标兵碰，标兵怕碰炮兵炮。</p><h3 id="舌尖中音练习"><a href="#舌尖中音练习" class="headerlink" title="舌尖中音练习"></a>舌尖中音练习</h3><p>1．你会炖炖冻豆腐，你来炖我的炖冻豆腐；你不会炖炖冻豆腐，别胡炖乱炖炖坏了我的炖冻豆腐。<br>2．老罗拉了一车梨，老李拉了一车栗。老罗人称大力罗，老李人称李大力。老罗拉梨做梨酒，老李拉栗去换梨。<br>3．有个面铺门朝南，门上挂着蓝布棉门帘，摘了蓝布棉门帘，面铺门朝南；挂上蓝布棉门帘，面铺还是门朝南。<br>4．大刀对单刀，单刀对大刀，大刀斗单刀，单刀夺大刀。</p><h3 id="舌根音、舌面音练习"><a href="#舌根音、舌面音练习" class="headerlink" title="舌根音、舌面音练习"></a>舌根音、舌面音练习</h3><p>1．七加一，再减一，加完减完等于几？七加一，再减一，加完减完还是七。</p><p>2．你也勤来我也勤，生产同心土变金。工人农民亲兄弟，心心相印团结紧。<br>3．一班有个黄贺，二班有个王克，黄贺、王克二人搞创作，黄贺搞木刻，王克写诗歌。黄贺帮助王克写诗歌，王克帮助黄贺搞木刻。由于二人搞协作，黄贺完成了木刻，王克写好了诗歌。<br>4．小郭画了朵红花，小葛画了朵黄花，小郭想拿他的红花换小葛的黄花，小葛把他的黄花换了小郭的红花。</p><h3 id="翘舌音、平舌音、练习-1"><a href="#翘舌音、平舌音、练习-1" class="headerlink" title="翘舌音、平舌音、练习(1)"></a>翘舌音、平舌音、练习(1)</h3><p>1．天上有个日头，地下有块石头，嘴里有个舌头，手上有五个手指头。不管是天上的热日头，地下的硬石头，嘴里的软舌头，手上的手指头，还是热日头，硬石头，软舌头，手指头，反正都是练舌头。<br>2．三山屹四水，四水绕三山；三山四水春常在，四水三山四时春。<br>3．长虫围着砖堆转，转完砖堆钻砖堆。<br>4．师部司令部指示：四团十连石连长带四十人在十日四时四十四分按时到达师部司令部，师长召开誓师大会。<br>5．早招租，晚招租，总找周邹郑曾朱。</p><h3 id="翘舌音、平舌音、练习-2"><a href="#翘舌音、平舌音、练习-2" class="headerlink" title="翘舌音、平舌音、练习(2)"></a>翘舌音、平舌音、练习(2)</h3><p>1．紫瓷盘，盛鱼翅，一盘熟鱼翅，一盘生鱼翅。迟小池拿了一把瓷汤匙，要吃清蒸美鱼翅。一口鱼翅刚到嘴，鱼刺刺进齿缝里，疼得小池拍腿挠牙齿。<br>2．字纸里裹着细银丝，细银丝上趴着四千四百四十四个似死似不死的小死虱子皮。<br>3．石、斯、施、史四老师，天天和我在一起。石老师教我大公无私，斯老师给我精神食粮，施老师叫我遇事三思，史老师送我知识钥匙。我感谢石、斯、施史四老师。<br>4．石狮寺前有四十四个石狮子，寺前树上结了四十四个涩柿子，四十四个石狮子不吃四十四个涩柿子，四十四个涩柿子倒吃四十四个石狮子。</p><h3 id="喇嘛和哑吧"><a href="#喇嘛和哑吧" class="headerlink" title="喇嘛和哑吧"></a>喇嘛和哑吧</h3><p>从南边来了个喇嘛，提拉着五斤塔嘛。从北边来个哑吧，腰里别着个喇叭，<br>提拉塔嘛的喇嘛，要拿塔嘛换别喇叭哑巴的喇叭，<br>别喇叭的哑巴，不愿意拿喇叭换提拉塔嘛喇嘛的塔嘛。<br>提拉塔嘛的喇嘛拿塔嘛打了别喇叭的哑巴一塔嘛，<br>别喇叭的哑巴，拿喇叭打了提拉塔嘛的喇嘛一喇叭。<br>也不知提拉塔嘛的喇嘛拿塔嘛打坏了别喇叭哑巴的喇叭。<br>也不知别喇叭的哑巴拿喇巴打坏了提拉塔嘛喇嘛的塔嘛。<br>提拉塔嘛的喇嘛敦塔嘛，别喇叭的哑巴吹喇叭。</p><h3 id="枣、卖卵"><a href="#枣、卖卵" class="headerlink" title="枣、卖卵"></a>枣、卖卵</h3><p>1．出东门，过大桥，大桥前面一树枣，拿着竿子去打枣，青的多，红的少，一个枣，两个枣，三个枣，四个枣，五个枣，六个枣，七个枣，八个枣，九个枣，十个枣；十个枣，九个枣，八个枣，七个枣，六个枣，五个枣，四个枣，三个枣，两个枣，一个枣，这是一个绕口呤，一口气说完才算好。<br>2．有个懒汉本姓阮，提个篮子卖鸡卵，“卖卵”“卖卵”使劲喊，谁都不来买鸡卵，不是鸡卵品种乱，而是鸡卵皮太软。卖不出鸡卵难买饭，回家吃饭路又远，胡乱烧把烂草取取暖，再吃掉篮子里几个软鸡卵。</p><h3 id="师父四十四、铜勺舀热油"><a href="#师父四十四、铜勺舀热油" class="headerlink" title="师父四十四、铜勺舀热油"></a>师父四十四、铜勺舀热油</h3><p>1．山里有个寺，山外有个市，弟子三十三，师父四十四。三十三的弟子在寺里练写字，四十四的师父到市里去办事。三十三的弟子用了四十四小时，四十四的师父走了三十三里地。走了三十三里地就办了四十四件事，用了四十四小时才写了三十三个字。<br>2．铜勺舀热油，铁勺舀凉油，铜勺舀了热油舀凉油，铁勺舀了凉油舀热油。舀油入炒勺，月月有佳肴。先炖鱿鱼块，后扒羊肉条。火在炉下燃，油在勺中熬，满锅同炎热，管它铜勺与铁勺。 </p><h3 id="河边两只鹅、婆婆和嬷嬷"><a href="#河边两只鹅、婆婆和嬷嬷" class="headerlink" title="河边两只鹅、婆婆和嬷嬷"></a>河边两只鹅、婆婆和嬷嬷</h3><p>1．婆婆和嬷嬷，来到山坡坡，婆婆默默采蘑菇，嬷嬷默默拔萝卜。婆婆拿了一个破簸箕，嬷嬷带了一个薄笸箩，婆婆采了半簸箕小蘑菇，嬷嬷拔了一笸箩大萝卜。婆婆采了蘑菇换饽饽，嬷嬷卖了萝卜买馍馍。<br>2．河边两只鹅，白鹅与灰鹅，哦哦爱唱歌，唱得渴又饿，昂首吸飞蛾，飞蛾啄不住岸边去找窝。草窝暗又矮，只得去过河，河里真暖和，有吃又有喝，不能再挨饿，遨游真快活，安心唱爱歌。</p><h3 id="化肥会挥发"><a href="#化肥会挥发" class="headerlink" title="化肥会挥发"></a>化肥会挥发</h3><ol><li>初入江湖：化肥会挥发</li><li>小有名气：黑化肥发灰，灰化肥发黑</li><li>名动一方：黑化肥发灰会挥发；灰化肥挥发会发黑</li><li>天下闻名：黑化肥挥发发灰会花飞；灰化肥挥发发黑会飞花</li><li>一代宗师：黑灰化肥会挥发发灰黑讳为花飞；灰黑化肥会挥发发黑灰为讳飞花</li><li>超凡入圣：黑灰化肥灰会挥发发灰黑讳为黑灰花会飞；灰黑化肥会会挥发发黑灰为讳飞花化为灰</li><li>天外飞仙：黑化黑灰化肥灰会挥发发灰黑讳为黑灰花会回飞；灰化灰黑化肥会会挥发发黑灰为讳飞花回化为灰<h3 id="喇嘛和哑巴"><a href="#喇嘛和哑巴" class="headerlink" title="喇嘛和哑巴"></a>喇嘛和哑巴</h3>打南边来了个喇嘛，手里提拉着五斤鳎(tǎ) 目。打北边来了个哑巴，腰里别着个喇叭。 南边提拉着鳎目的喇嘛要拿鳎目换北边别喇叭哑巴的喇叭。<br>哑巴不愿意拿喇叭换喇嘛的鳎目，喇嘛非要换别喇叭哑巴的喇叭。<br>喇嘛抡起鳎目抽了别喇叭哑巴一鳎目，哑巴摘下喇叭打了提拉着鳎目的喇嘛一喇叭。也不知是提拉着鳎目的喇嘛抽了别喇叭哑巴一鳎目，还是别喇叭哑巴打了提拉着鳎目的喇嘛一喇叭。 喇嘛炖鳎目，哑巴嘀嘀哒哒吹喇叭。<h3 id="司小四和史小世"><a href="#司小四和史小世" class="headerlink" title="司小四和史小世"></a>司小四和史小世</h3>司小四和史小世，四月十四日十四时四十上集市，司小四买了四十四斤四两西红柿，史小世买了十四斤四两细蚕丝。<br>司小四要拿四十四斤四两西红柿换史小世十四斤四两细蚕丝。<br>史小世十四斤四两细蚕丝不换司小四四十四斤四两西红柿。<br>司小四说我四十四斤四两西红柿可以增加营养防近视，<br>史小世说我十四斤四两细蚕丝可以织绸织缎又抽丝。<h3 id="牛郎恋刘娘"><a href="#牛郎恋刘娘" class="headerlink" title="牛郎恋刘娘"></a>牛郎恋刘娘</h3>牛郎恋刘娘，<br>刘娘念牛郎，<br>牛郎年年恋刘娘，<br>刘娘连连念牛郎，<br>牛郎恋刘娘，<br>刘娘念牛郎，<br>郎恋娘来娘念郎。<h3 id="嘴说腿腿说嘴"><a href="#嘴说腿腿说嘴" class="headerlink" title="嘴说腿腿说嘴"></a>嘴说腿腿说嘴</h3>嘴说腿腿说嘴<br>嘴说腿爱跑腿<br>腿说嘴爱卖嘴<br>光动嘴不动腿<br>动腿不动嘴<br>不如不长腿和嘴<br>到底是那嘴说腿还是腿说嘴<h3 id="红凤凰"><a href="#红凤凰" class="headerlink" title="红凤凰"></a>红凤凰</h3>红凤凰，粉凤凰，红粉凤凰，粉红凤凰。<h3 id="撕字纸"><a href="#撕字纸" class="headerlink" title="撕字纸"></a>撕字纸</h3>隔着窗户撕字纸，一次撕下横字纸，一次撕下竖字纸，是字纸撕字纸，不是字纸，不要胡乱撕一地纸（《撕字纸》）。<h3 id="满，懒，难"><a href="#满，懒，难" class="headerlink" title="满，懒，难"></a>满，懒，难</h3>学习就怕满，懒，难，<br>心里有了满，懒，难，不看不钻就不前。<br>心里去掉满，懒，难，边学边干，蚂蚁也能爬泰山<h3 id="红饭碗，黄饭碗"><a href="#红饭碗，黄饭碗" class="headerlink" title="红饭碗，黄饭碗"></a>红饭碗，黄饭碗</h3>红饭碗，黄饭碗，红饭碗盛满饭碗，黄饭碗盛饭半碗。<br>黄饭碗添了半碗饭，红饭碗减了饭半碗。<br>黄饭碗比红饭碗又多半碗饭。<h3 id="出南门，面正南"><a href="#出南门，面正南" class="headerlink" title="出南门，面正南"></a>出南门，面正南</h3>出南门，面正南，有一个面铺面冲南。面铺门口挂着一个蓝布棉门帘。摘了蓝布棉门帘，看了看面铺面冲南，挂上蓝布棉门帘，瞧了瞧，哟，嗬！面铺还是面冲南。出西门走七步，拾到鸡皮补皮裤。是鸡皮补皮裤，不是鸡皮不必补皮裤。<h3 id="闲来没事我出城西"><a href="#闲来没事我出城西" class="headerlink" title="闲来没事我出城西"></a>闲来没事我出城西</h3>闲来没事我出城西，树木琳琅我数不齐，一二三四五六七，七六五四三二一，六五四，三二一，五四三二一，四三二一三二一，二一一，一个一，数了半天一棵树，一棵树上七个枝，七个枝结了七样果，结的是槟子、橙子、桔子、柿子、李子、栗子、梨！”<h3 id="报菜名"><a href="#报菜名" class="headerlink" title="报菜名"></a>报菜名</h3>蒸羊羔、蒸熊掌、蒸鹿尾儿、烧花鸭、烧雏鸡儿、烧子鹅、卤煮咸鸭、酱鸡、腊肉、松花、小肚儿、晾肉、香肠、什锦苏盘、熏鸡、白肚儿、清蒸八宝猪、江米酿鸭子、罐儿野鸡、罐儿鹌鹑、卤什锦、卤子鹅、卤虾、烩虾、炝虾仁儿、山鸡、兔脯、菜蟒、银鱼、清蒸哈什蚂、烩鸭腰儿、烩鸭条儿、清拌鸭丝儿、黄心管儿、焖白鳝、焖黄鳝、豆鼓鲇鱼、锅烧鲇鱼、烀皮甲鱼、锅烧鲤鱼、抓炒鲤鱼、软炸里脊、软炸鸡、什锦套肠、麻酥油卷儿、熘鲜蘑、熘鱼脯儿、熘鱼片儿、熘鱼肚儿、醋熘肉片儿、熘白蘑、烩三鲜、炒银鱼、烩鳗鱼、清蒸火腿、炒白虾、炝青蛤、炒面鱼、炝芦笋、芙蓉燕菜、炒肝尖儿、南炒肝关儿、油爆肚仁儿、汤爆肚领儿、炒金丝、烩银丝、糖熘饹炸儿、糖熘荸荠、蜜丝山药、拔丝鲜桃、熘南贝、炒南贝、烩鸭丝、烩散丹、清蒸鸡、黄焖鸡、大炒鸡、熘碎鸡、香酥鸡，炒鸡丁儿、熘鸡块儿、三鲜丁儿、八宝丁儿、清蒸玉兰片、炒虾仁儿、炒腰花儿、炒蹄筋儿、锅烧海参、锅烧白菜、炸海耳、浇田鸡、桂花翅子、清蒸翅子、炸飞禽、炸葱、炸排骨、烩鸡肠肚儿、烩南荠、盐水肘花儿，拌瓤子、燉吊子、锅烧猪蹄儿、烧鸳鸯、烧百合、烧苹果、酿果藕、酿江米、炒螃蟹„„„„„„„„„„„„„„„„„„„<h3 id="打南边来了个瘸子"><a href="#打南边来了个瘸子" class="headerlink" title="打南边来了个瘸子"></a>打南边来了个瘸子</h3>打南边来了个瘸子，担了一挑子茄子，手里拿着个碟子，地下钉着木头橛子。没留神那橛子绊倒了瘸子，弄撒了瘸子的茄子，砸了瘸子的碟子，瘸子毛腰拾茄子。打北边来了个醉老爷子，腰里掖着个烟袋别子，过来要买瘸子的茄子，瘸子不卖给醉老爷子茄子，老爷子一生气抢了瘸子的茄子，瘸子毛腰捡茄子拾碟子，拔橛子，追老爷子，老爷子一生气，不给瘸子茄子，拿起烟袋别子，也不知是老爷子的烟袋别子打了瘸子的茄子，还是瘸子用橛子打了老爷子烟袋别子。<h3 id="什么上山吱扭扭？"><a href="#什么上山吱扭扭？" class="headerlink" title="什么上山吱扭扭？"></a>什么上山吱扭扭？</h3>什么上山吱扭扭？什么下山乱点头？什么有头无有尾？什么有尾无有头？什么有腿家中坐？什么没腿游九州？赵州桥什么人修？玉石栏杆什么人留？什么骑驴桥上走？什么人推车轧了一道沟？什么人扛刀桥上站？什么人勒马看春秋？什么人白？什么人黑？什么人胡子一大堆？什么圆圆在天边？什么圆圆在眼前？什么圆圆长街卖？什么圆圆道两边？什么开花节节高？什么开花毛着个腰？什么开花无人见？什么开花一嘴毛？什么鸟穿青又穿白？什么鸟穿出皂靴来？什么鸟身披十样锦？什么鸟身披麻布口袋？双扇门，单扇开，我破的闷儿我自己猜。车子上山吱扭扭，瘸子下山乱点头，哈蟆有头无有尾，蝎子有尾无有头。板登有腿儿家中坐，小船没腿儿游九州，赵州桥，鲁班修，玉石栏杆儿圣人留。张果老骑驴桥上走，柴王推车轧了一道沟。周仓扛刀桥上站，关公勒马看春秋。罗成白，敬德黑，张飞胡子一大堆。月亮圆圆在天边，眼镜圆圆在眼前，烧饼圆圆长街卖，车轱辘圆圆道两边。芝麻开花节节高，棉花开花毛着腰，藤子开花无人见，玉米开花一嘴毛。喜鹊穿青又穿白，乌鸦穿出皂靴来，野鸡身披十样锦，鹗丽儿身披麻布口袋。 <h3 id="十道黑"><a href="#十道黑" class="headerlink" title="十道黑"></a>十道黑</h3>一道黑，两道黑，三四五六七道黑，八九道黑十道黑。我买了个烟袋乌木杆儿，我是掐着它的两头那么一道黑。二姑娘描眉去演戏，照着她的镜子那么两道黑。粉皮儿墙，写川字儿，横瞧竖瞧三道黑。象牙桌子乌木腿儿，把它放着在那炕上那么四道黑。我买了个母鸡不下蛋，把它圈在那个笼里捂到（五道）黑。挺好的骡子不吃草，把它拉到在那街上遛到（六道）黑。买了头小驴儿不拉磨，背上它的鞍韂骑（七）到（道）黑。姐俩南洼去割麦，丢了她的镰刀拔到（八道）黑。月窠儿的小孩儿子得了病，团几个艾球灸到（九道）黑。卖瓜籽的打瞌睡，哗啦啦啦撒了那么一 大堆，他的扫帚簸箕不凑手，那么一个一个拾到（十道）黑。</li></ol><hr><blockquote><p><span style="font-size:12px">标题: <a href="http://linlshare.github.io/2016/04/11/绕口令大全/">绕口令大全</a><br>作者: <a href="http://linlshare.github.io/">Lshare</a><br>许可: <a rel="noopener" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">©署名-非商用-相同方式共享 4.0</a></span></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;单韵母练习&quot;&gt;&lt;a href=&quot;#单韵母练习&quot; class=&quot;headerlink&quot; title=&quot;单韵母练习&quot;&gt;&lt;/a&gt;单韵母练习&lt;/h3&gt;&lt;p&gt;1．坡上立着一只鹅，坡下就是一条河。宽宽的河，肥肥的鹅，鹅要过河，河要渡鹅不知是鹅过河，还是河渡鹅？&lt;br&gt;2．山上
      
    
    </summary>
    
    
      <category term="绕口令" scheme="http://linlshare.github.io/tags/%E7%BB%95%E5%8F%A3%E4%BB%A4/"/>
    
      <category term="普通话" scheme="http://linlshare.github.io/tags/%E6%99%AE%E9%80%9A%E8%AF%9D/"/>
    
  </entry>
  
  <entry>
    <title>回归常识</title>
    <link href="http://linlshare.github.io/2016/04/10/%E5%9B%9E%E5%BD%92%E5%B8%B8%E8%AF%86/"/>
    <id>http://linlshare.github.io/2016/04/10/回归常识/</id>
    <published>2016-04-10T04:03:18.000Z</published>
    <updated>2018-10-26T14:58:13.582Z</updated>
    
    <content type="html"><![CDATA[<p>“世界并不是一个三段论法或一个论据，而是一个生物；宇宙不做声，只是生活着；它并不做什么辨认，只是进行着。”   – 林语堂《生活的艺术》</p><a id="more"></a><hr><blockquote><p><span style="font-size:12px">标题: <a href="http://linlshare.github.io/2016/04/10/回归常识/">回归常识</a><br>作者: <a href="http://linlshare.github.io/">Lshare</a><br>许可: <a rel="noopener" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">©署名-非商用-相同方式共享 4.0</a></span></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;“世界并不是一个三段论法或一个论据，而是一个生物；宇宙不做声，只是生活着；它并不做什么辨认，只是进行着。”   – 林语堂《生活的艺术》&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活" scheme="http://linlshare.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="哲学" scheme="http://linlshare.github.io/tags/%E5%93%B2%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>干支纪年与六十进制</title>
    <link href="http://linlshare.github.io/2016/04/06/%E5%B9%B2%E6%94%AF%E7%BA%AA%E5%B9%B4%E4%B8%8E%E5%85%AD%E5%8D%81%E8%BF%9B%E5%88%B6/"/>
    <id>http://linlshare.github.io/2016/04/06/干支纪年与六十进制/</id>
    <published>2016-04-06T08:56:41.000Z</published>
    <updated>2018-10-26T14:58:13.582Z</updated>
    
    <content type="html"><![CDATA[<p>借着对数字系统的研究兴致，我又研究了下我中华干支纪年法的奥妙。当然，这里说的只是冰山一角，并不能透彻地呈现干支纪年的奥义。</p><h3 id="什么是干支？"><a href="#什么是干支？" class="headerlink" title="什么是干支？"></a>什么是干支？</h3><p>所谓干支，是由十天干和十二地支组合而成，共六十对，称为六十甲子。看下面的表格。</p><table><thead><tr><th>天干</th><th style="text-align:center">甲</th><th>乙</th><th>丙</th><th>丁</th><th>戊</th><th>己</th><th>庚</th><th>辛</th><th>壬</th><th>癸</th><th>甲</th><th>乙</th><th>…</th></tr></thead><tbody><tr><td>地支</td><td style="text-align:center">子</td><td>丑</td><td>寅</td><td>卯</td><td>辰</td><td>巳</td><td>午</td><td>未</td><td>申</td><td>酉</td><td>戌</td><td>亥</td><td>…</td></tr></tbody></table><p>不会读的，看下面：</p><ul><li><p><strong>十天干</strong>：甲(jiǎ)、乙(yǐ) 、丙(bǐng)、丁(dīng)、戊(wù)、己(jǐ)、庚(gēng)、辛(xīn)、壬(rén)、癸(guǐ )</p></li><li><p><strong>十二地支</strong>：子(zì)、丑(chǒu)、寅(yín)、卯(mǎo)、辰(chén)、巳(sì)、 午(wǔ)、未(wèi)、申(shēn)、酉(yǒu)、戌(xū)、亥(hài)</p></li></ul><p>10 天干和 12 地支按顺序搭配，天干按天干的顺序循环走下去，地支按照地支的顺序循环走下去。并由此产生了 60 个干支对。</p><table><thead><tr><th>甲子</th><th>乙丑</th><th>丙寅</th><th>丁卯</th><th>戊辰</th><th>己巳</th><th>庚午</th><th>辛未</th><th>壬申</th><th>癸酉</th></tr></thead><tbody><tr><td>甲戌</td><td>乙亥</td><td>丙子</td><td>丁丑</td><td>戊寅</td><td>己卯</td><td>庚辰</td><td>辛巳</td><td>壬午</td><td>癸未</td></tr><tr><td>甲申</td><td>乙酉</td><td>丙戌</td><td>丁亥</td><td>戊子</td><td>己丑</td><td>庚寅</td><td>辛卯</td><td>壬辰</td><td>癸巳</td></tr><tr><td>甲午</td><td>乙未</td><td>丙申</td><td>丁酉</td><td>戊戌</td><td>己亥</td><td>庚子</td><td>辛丑</td><td>壬寅</td><td>癸卯</td></tr><tr><td>甲辰</td><td>乙巳</td><td>丙午</td><td>丁未</td><td>戊申</td><td>己酉</td><td>庚戌</td><td>辛亥</td><td>壬子</td><td>癸丑</td></tr><tr><td>甲寅</td><td>乙卯</td><td>丙辰</td><td>丁巳</td><td>戊午</td><td>己未</td><td>庚申</td><td>辛酉</td><td>壬戌</td><td>癸亥</td></tr></tbody></table><h3 id="为什么是60呢？"><a href="#为什么是60呢？" class="headerlink" title="为什么是60呢？"></a>为什么是60呢？</h3><p>这其实是一个算术问题：用数字0-9代表天干，字母A-L代表地支，数字和字母各自按自己的顺序循环排列结成对，刚开始时是0A，1B，…，问经历多少对后再次回到0A？答案很简单，求10和12的最小公倍数即可，就是60。</p><p>经历 60 对后再次回到甲子，这就是六十甲子的含义。其中天干经历了6次循环（$60\div10$），而地支经历了5次循环（$60\div12$）。</p><p>第一个甲子年据说是始于黄帝纪年，约公元前 2697 年。近点说，上一个甲子年就是 1984 年。今年则是 丙申猴年。</p><h3 id="补充一点：为什么丙申年是猴年呢？"><a href="#补充一点：为什么丙申年是猴年呢？" class="headerlink" title="补充一点：为什么丙申年是猴年呢？"></a>补充一点：为什么丙申年是猴年呢？</h3><p>因为十二生肖跟十二地支是对应的，它们的关系如下：</p><table><thead><tr><th>地支</th><th>子</th><th>丑</th><th>寅</th><th>卯</th><th>辰</th><th>巳</th><th>午</th><th>未</th><th>申</th><th>酉</th><th>戌</th><th>亥</th></tr></thead><tbody><tr><td>生肖</td><td>鼠</td><td>牛</td><td>虎</td><td>兔</td><td>龙</td><td>蛇</td><td>马</td><td>羊</td><td>猴</td><td>鸡</td><td>狗</td><td>猪</td></tr></tbody></table><h3 id="如果用六十进制的角度看问题？"><a href="#如果用六十进制的角度看问题？" class="headerlink" title="如果用六十进制的角度看问题？"></a>如果用六十进制的角度看问题？</h3><p>根据上一篇的博文，我们可以给出60进制的定义：底为60的60个符号表示一个数。还没看的可以点击看看：<a href="http://linlshare.github.io/2016/04/04/%E4%BB%8E%E5%8D%81%E8%BF%9B%E5%88%B6%E6%95%B0%E8%B0%88%E5%88%B0%E5%B7%B4%E6%AF%94%E4%BC%A6%E6%95%B0%E5%AD%97%E7%B3%BB%E7%BB%9F/">从十进制数谈到巴比伦数字系统</a>。</p><p>在干支纪年法中，有10天干和12地支，共22个基本符号，组合成60个字符。我们现在使用的公元纪年法是10进制的，以耶稣诞生为元年。</p><p>我们现在要探讨的是这两种历法中的数学联系。但问题是这两种历法的元年不一样，干支纪年法早在黄帝那时就有了，比公元历法多了 2697 年。$2697\div60 = 44\cdots57$，也就是说公元1年开始再过3年（即公元4年），公元历法第一次看到了干支历法的甲子年。换句话说，公元 4 年是甲子年。又或者说，公元历法后退 3 年就可以看作跟干支历法同一元年了。（仅仅是为了计算方便）</p><p>这给我们一种计算上的技巧，把我们要计算的公元年份减去 3 ，所得的数再用这种特殊的 60 进制表示，看个位就可以看出是干支历法种对应的年了。</p><p>比如：2016 - 3 = 2013。将2013转换成60进制，为：</p><p>$$(2013)_{10} = 33\times60^{1}+33\times60^{0} = （丙申.丙申）_{60}$$</p><p>注：$33\div10$ 余 3 代表天干的丙，$33\div12$余 9 代表申。这里仿照 IP地址的点分记法。</p><p>分隔符（.）前表示 60 的倍数来着，这里表示从公元4年开始经过了丙申（33）个甲子年，分隔符后面的丙申就是该年份（2016）的干支历法表示。</p><p>那么，问题来了，2020年你可以用点分记法写出它的干支历法表示吗？</p><hr><blockquote><p><span style="font-size:12px">本文标题: <a href="http://linlshare.github.io/2016/04/06/干支纪年与六十进制/">干支纪年与六十进制</a><br>文章作者: <a href="http://linlshare.github.io/">Lshare</a><br>许可协议: <a rel="noopener" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">©署名-非商用-相同方式共享 4.0</a></span></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;借着对数字系统的研究兴致，我又研究了下我中华干支纪年法的奥妙。当然，这里说的只是冰山一角，并不能透彻地呈现干支纪年的奥义。&lt;/p&gt;
&lt;h3 id=&quot;什么是干支？&quot;&gt;&lt;a href=&quot;#什么是干支？&quot; class=&quot;headerlink&quot; title=&quot;什么是干支？&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="进制" scheme="http://linlshare.github.io/tags/%E8%BF%9B%E5%88%B6/"/>
    
      <category term="干支" scheme="http://linlshare.github.io/tags/%E5%B9%B2%E6%94%AF/"/>
    
      <category term="历法" scheme="http://linlshare.github.io/tags/%E5%8E%86%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>从十进制数谈到巴比伦数字系统</title>
    <link href="http://linlshare.github.io/2016/04/04/%E4%BB%8E%E5%8D%81%E8%BF%9B%E5%88%B6%E6%95%B0%E8%B0%88%E5%88%B0%E5%B7%B4%E6%AF%94%E4%BC%A6%E6%95%B0%E5%AD%97%E7%B3%BB%E7%BB%9F/"/>
    <id>http://linlshare.github.io/2016/04/04/从十进制数谈到巴比伦数字系统/</id>
    <published>2016-04-04T11:12:40.000Z</published>
    <updated>2018-10-26T14:58:13.582Z</updated>
    
    <content type="html"><![CDATA[<h2 id="我们的计数方式"><a href="#我们的计数方式" class="headerlink" title="我们的计数方式"></a>我们的计数方式</h2><p>生活中我们普遍使用十进制进行计数。我们生下来不久就被老妈教着数手指头。没错，我们刚好十根手指头，用来计算方便极了。十进制很早就刻入了我们的脑海，以至于我们不需要知道这是十进制就可以计算早上买了一个面包，老板要找我多少钱。为什么用这个例子呢？聪明的你一定可以想到最早的计数就是用于交易的。早期的物物交换也得有个数吧，不然就乱了。</p><p>嗯，除了这种用10个符号（0到9）计数的，我们还接触过12生肖，接触过1天24小时，1分钟60秒，1 兆 1024 个。这些可不是十进制哦。那这些算是什么呢？这得从数字系统讲起。</p><h2 id="数字系统"><a href="#数字系统" class="headerlink" title="数字系统"></a>数字系统</h2><p>所谓数字系统就是确定如何用有限的符号来表示一个数字。数字或者说数量是现实存在的且不会因为所用的数字系统不同而改变，你可以用十进制的 2 来表示两个苹果，也可以用二进制的 10 来表示，这丝毫不会影响苹果的数量。这里的”2”和”10”都只是符号而已，只是为了描述的方便而产生。</p><p>数字系统有两种，一种是位置化数字系统，另一种是非位置化数字系统。我们常用的是位置化数字系统，这里主要阐述的也是位置化数字系统。<br>所谓位置化，是指符号因所处的位置不同所表示的值也不同。你想啊，把 2 放在个位它就是 2 ，但是放在十位不就是 20 吗？这里的 20 后面有个 “0” ！！！这太重要了，如果没有 “0” ，位置化数字系统会变得有点尴尬，这点后面讨论就会感受到。</p><h2 id="先谈谈十进制"><a href="#先谈谈十进制" class="headerlink" title="先谈谈十进制"></a>先谈谈十进制</h2><p>十进位是古印度人的发明，他们在公元前3世纪就有了这种计数方法。但是那时候还没有用阿拉伯数字表示，也没有 “0”。直到传入阿拉伯，善于经商的阿拉伯人改造了它，从此贸易就变得简单多了。再后来传入欧洲，而欧洲人误以为这是阿拉伯人的发明，就称之为 “阿拉伯计数法” 了，我们现在通常说的阿拉伯数字，其实就是欧化了的阿拉伯数字。</p><p>“0” 的发明太重要了，要单独谈谈。零最初是印度人发明的，公元8世纪左右就有了用点表示的零，而圆形的零出现于公元13世纪。【世界古文明，张新国】其实公元6世纪，印度天文学家瓦拉哈就对零进行了加减运算。此后传入阿拉伯才有了真正的十进制数字系统。为什么等到公元6世纪才有零的发明呢？明明十进位计数法在公元前3世纪就有了！据说是因为那时候印度大乘佛法倡导”空”的思想，在这个背景下，才有了零的含义和表示。然而，印度人并不只是认为零是空无，还承认它是一个数。这很重要，承认它是一个数，它才有资格参与运算，而不是作为填补空格的记号。</p><p>说回十进制，十进制的科学定义是：10为底的用10个字符表示一个数的系统，字符集是S={0,1,2,3,4,5,6,7,8,9}。</p><p>一个数可以表示成 $\pm(S_{k-1}\cdots{S_{2}}{S_{1}}{S_{0}}{S_{-1}}{S_{-2}}\cdots{S_{-l})_{10}}$</p><p>但是为了方便我们通常省略+号、括号和底。</p><p>其值得计算方式是：</p><p>$N = \pm(S_{k-1}\times10^{k-1}+S_{k-2}\times10^{k-2}+\cdots+S_{2}\times10^{2}+S_{1}\times10^{1}+S_{0}\times10^{0})$</p><p>嗯，$233 = 2\times10_{2}+3\times10^{1}+3\times10^{2}$</p><p>这就是十进制的故事。然而十进制对于计算机来说是不理想的，虽然对人类来说是友好的，因为人类有十根手指头，而计算机中只有电路的开关两种状态，让它用十进制计算似乎不科学。</p><h2 id="二进制登场"><a href="#二进制登场" class="headerlink" title="二进制登场"></a>二进制登场</h2><p>于是乎二进制登场了。据说将二进制利用于计算机的人是借鉴了中国的阴阳学说。中国人用阴阳表示了世间万物，而计算机用”0”、”1”表示了所有的数据，这其中的奥妙值得细细体味。</p><p>仿造十进制的定义，我们给出了二进制的科学定义：使用2为底的2个字符表示一个数，字符集S = {0,1}。其计算方式与上面的可类比，其实就是把10换成了2。比如 $(101)_{2} = 1\times2^{2}+0\times2^{1}+1\times1^{0} = (5)_{10}$</p><p>你看一个十进制的5，用二进制表示就用了3位。想想要是十进制的100呢？岂不是一长串的01组合。聪明的人类肯定不喜欢这样，于是发明了八进制和十六进制来简化二进制的书写。</p><p>所谓的八进制是这样的：使用8为底的8个字符来表示一个数，字符集S = {0,1,2,3,4,5,6,7}。注意：只能使用字符集里面的字符来表示数，”8”，”9”在这里是没有意义的。$(8)_{10} = (10)_{8}$ ， $(9)_{10} = (11)_{8}$。</p><p>所谓的十六进制是这样的：使用16为底的16个字符来表示一个数，字符集S = {0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F}。后面之所以用字母表示，是因为十进制的字符不够用了，如果你由你来定义，你也可以使用a、o、e、i、u 、v来表示，但这是国际通用的，不能随便改。<br>嗯，$(16)_{10} = (10)_{16}$ ， $(11)_{16} = (17)_{10}$</p><h2 id="IP地址的表示"><a href="#IP地址的表示" class="headerlink" title="IP地址的表示"></a>IP地址的表示</h2><p>我们知道IP地址是用点分十进制表示的，在教材中我们学到的是：IP地址用4组，每组8位的二进制数点分组成，但由于二进制数对人类不友好，所以用十进制表示。但其实我们可以换一个角度思考：它是256进制数，即使用256为底的256个字符来表示一个数，字符集 S = {1,2,3,…,255}；在这个数字系统下，</p><p>$(192.168.0.1)_{256}$<br>$= (192\times(256)^{3}+168\times(256)^{2}+0\times(256)^1+1\times(256)^{0})_{10}$<br>$= 3232235521$</p><p>这数字是十亿级别的。</p><p>我们知道在将八进制转化为二进制时，每1位八进制数表示3位二进制数，因为  $2^{3} = 8$；将十六进制转化为二进制时，每1位十六进制表示4位二进制数，因为 $2^{4} = 16$；自然，将256进制数转化为二进制数时，每1位256进制数表示8位二进制数，因为 $2^{8}=256$。这样： </p><p>$(192.168.0.1)_{256}$<br>$= (01000000.00100000.00000000.00000001)_{2}$</p><p>显然使用256进制数表达十亿级别的数简洁些。</p><h2 id="还有两个有趣的数字系统"><a href="#还有两个有趣的数字系统" class="headerlink" title="还有两个有趣的数字系统"></a>还有两个有趣的数字系统</h2><h3 id="玛雅数字系统"><a href="#玛雅数字系统" class="headerlink" title="玛雅数字系统"></a>玛雅数字系统</h3><p>玛雅文明发明了一种二十进制的数字系统。他们使用贝壳、鹅卵石和木棍这三样东西来计数。看看下面的图片，贝壳代表”0”，鹅卵石代表”1”，而木棍代表”5”，通过鹅卵石和木棍组合出了其它的17个数。符合二十进制的定义：20为底的20个符号表示一个数。</p><p><img src="http://7xskuq.com2.z0.glb.clouddn.com/16-4-5/99649547.jpg" alt=""></p><p>这些字符确定后，所有的数都由它们的位置组合确定。<br>比如：$(233)_{10} = 11\times(20)^1+13\times(20)^0$<br>对应于玛雅数字系统中的：<br><img src="http://7xskuq.com2.z0.glb.clouddn.com/16-4-5/37673663.jpg" alt=""></p><h3 id="巴比伦数字系统"><a href="#巴比伦数字系统" class="headerlink" title="巴比伦数字系统"></a>巴比伦数字系统</h3><p>巴比伦文明发明了一种六十进位的数字系统。他们使用两个碶形<br>符号：<br><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Babylonian_1.svg/20px-Babylonian_1.svg.png" alt=""><br>和<br> <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/5/56/Babylonian_10.svg/20px-Babylonian_10.svg.png" alt="">）。<br> <strong>Y</strong>表示 “1”，而 <strong>&lt;</strong> 表示 “10”。并由此组合出其它的57个符号。但是偏偏<strong>没有零</strong>。所以说他们的数字系统是不完善的，他们仅仅使用了59个符号，并通过空格和上下文来区别没有零可能造成的歧义。</p><p><img src="http://7xskuq.com2.z0.glb.clouddn.com/16-4-5/74882334.jpg" alt=""></p><p>在这个系统中 $(233)_{10} = 3\times(60)^1+53\times(60)^0$<br>用他们的符号表示是：<br><img src="http://7xskuq.com2.z0.glb.clouddn.com/16-4-5/84746396.jpg" alt=""><br>这真有趣(￣▽￣)~*</p><hr><blockquote><p><span style="font-size:12px">本文标题: <a href="http://linlshare.github.io/2016/04/04/从十进制数谈到巴比伦数字系统/">从十进制数谈到巴比伦数字系统</a><br>文章作者: <a href="http://linlshare.github.io/">Lshare</a><br>许可协议: <a rel="noopener" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">©署名-非商用-相同方式共享 4.0</a></span></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;我们的计数方式&quot;&gt;&lt;a href=&quot;#我们的计数方式&quot; class=&quot;headerlink&quot; title=&quot;我们的计数方式&quot;&gt;&lt;/a&gt;我们的计数方式&lt;/h2&gt;&lt;p&gt;生活中我们普遍使用十进制进行计数。我们生下来不久就被老妈教着数手指头。没错，我们刚好十根手指头，用来
      
    
    </summary>
    
    
      <category term="基础" scheme="http://linlshare.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="数字系统" scheme="http://linlshare.github.io/tags/%E6%95%B0%E5%AD%97%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="进制" scheme="http://linlshare.github.io/tags/%E8%BF%9B%E5%88%B6/"/>
    
      <category term="IP地址" scheme="http://linlshare.github.io/tags/IP%E5%9C%B0%E5%9D%80/"/>
    
      <category term="巴比伦数字系统" scheme="http://linlshare.github.io/tags/%E5%B7%B4%E6%AF%94%E4%BC%A6%E6%95%B0%E5%AD%97%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="玛雅数字系统" scheme="http://linlshare.github.io/tags/%E7%8E%9B%E9%9B%85%E6%95%B0%E5%AD%97%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>OkHttp学习系列一：入门和简单使用</title>
    <link href="http://linlshare.github.io/2016/04/03/OkHttp%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E5%85%A5%E9%97%A8%E5%92%8C%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <id>http://linlshare.github.io/2016/04/03/OkHttp学习系列一：入门和简单使用/</id>
    <published>2016-04-03T08:29:14.000Z</published>
    <updated>2018-10-26T14:58:13.581Z</updated>
    
    <content type="html"><![CDATA[<p>参考并有选择地翻译了：<a href="http://square.github.io/okhttp/" target="_blank" rel="noopener">http://square.github.io/okhttp/</a></p><h2 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h2><p>HTTP是是现代应用访问网络的方式。它是现在我们交换数据和媒体的方式。高效地使用HTTP可以让数据加载更快和节省带宽（bandwidth）。</p><p>OkHttp是一个适用于Android和Java的HTTP 和 HTTP/2的客户端。它很高效，默认支持：</p><ul><li>HTTP/2支持允许到同一个主机（host）的所有的请求共享一个socket</li><li>连接池技术减少了请求延迟（如果HTTP/2不可用）</li><li>悄无声息的GZIP支持减少了下载的体积</li><li>响应缓存完全避免了网络服务于重复的请求</li></ul><p>当网络出错时，OkHttp坚持：默默地从普通的连接问题中恢复网络。如果你的服务中有多个IP地址，OkHttp会在第一次连接失败后尝试可选的地址。这对于IPv4+IPv6和拥有冗余数据中心的服务来说是很必须的。OkHttp采用现代的TLS（Transport Layer Security，传输层安全）（SNI和ALPN）初始化新的连接，当握手失败时会退回TLS1.0。</p><p>使用OkHttp相当easy。它的请求/响应的API是用流畅的建造者模式构建并且具有不变性（？）。它同时支持同步阻塞调用和使用回调异步调用。</p><p>OkHttp支持Android 2.3和以上版本。对应Java，最小的要求是1.7版本。</p><blockquote><p>小知识：OkHttp是Square这家移动支付公司开发并贡献到开源社区的开发库。<a href="[http://square.github.io](http://square.github.io/">Square Open Source主页</a>)展示了该公司开源的一些产品，诸如dagger、picasso、retrofit等都是出自该公司，该公司的开源团队由25人组成，其中最出名的是<a href="https://github.com/JakeWharton" target="_blank" rel="noopener">Jake Wharton</a>，他是ActionBarSherlock、butterknife、ViewPagerIndicator、NineOldAndroids等开源库的作者</p></blockquote><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h4 id="GET请求"><a href="#GET请求" class="headerlink" title="GET请求"></a>GET请求</h4><p>下面的代码展示了如何从一个URL中获取内容数据并以字符串形式打印出来。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetExample</span> </span>&#123;</span><br><span class="line">  OkHttpClient client = <span class="keyword">new</span> OkHttpClient();</span><br><span class="line">  <span class="function">String <span class="title">run</span><span class="params">(String url)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">        .url(url)</span><br><span class="line">        .build();</span><br><span class="line">    Response response = client.newCall(request).execute();</span><br><span class="line">    <span class="keyword">return</span> response.body().string();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    GetExample example = <span class="keyword">new</span> GetExample();</span><br><span class="line">    String response = example.run(<span class="string">"https://raw.github.com/square/okhttp/master/README.md"</span>);</span><br><span class="line">    System.out.println(response);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="POST请求"><a href="#POST请求" class="headerlink" title="POST请求"></a>POST请求</h4><p>下面的例子演示了如何POST数据到服务器中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PostExample</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> MediaType JSON</span><br><span class="line">      = MediaType.parse(<span class="string">"application/json; charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">  OkHttpClient client = <span class="keyword">new</span> OkHttpClient();</span><br><span class="line"></span><br><span class="line">  <span class="function">String <span class="title">post</span><span class="params">(String url, String json)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    RequestBody body = RequestBody.create(JSON, json);</span><br><span class="line">    Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">        .url(url)</span><br><span class="line">        .post(body)</span><br><span class="line">        .build();</span><br><span class="line">    Response response = client.newCall(request).execute();</span><br><span class="line">    <span class="keyword">return</span> response.body().string();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">String <span class="title">bowlingJson</span><span class="params">(String player1, String player2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"&#123;'winCondition':'HIGH_SCORE',"</span></span><br><span class="line">        + <span class="string">"'name':'Bowling',"</span></span><br><span class="line">        + <span class="string">"'round':4,"</span></span><br><span class="line">        + <span class="string">"'lastSaved':1367702411696,"</span></span><br><span class="line">        + <span class="string">"'dateStarted':1367702378785,"</span></span><br><span class="line">        + <span class="string">"'players':["</span></span><br><span class="line">        + <span class="string">"&#123;'name':'"</span> + player1 + <span class="string">"','history':[10,8,6,7,8],'color':-13388315,'total':39&#125;,"</span></span><br><span class="line">        + <span class="string">"&#123;'name':'"</span> + player2 + <span class="string">"','history':[6,10,5,10,10],'color':-48060,'total':41&#125;"</span></span><br><span class="line">        + <span class="string">"]&#125;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    PostExample example = <span class="keyword">new</span> PostExample();</span><br><span class="line">    String json = example.bowlingJson(<span class="string">"Jesse"</span>, <span class="string">"Jake"</span>);</span><br><span class="line">    String response = example.post(<span class="string">"http://www.roundsapp.com/post"</span>, json);</span><br><span class="line">    System.out.println(response);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><ul><li><a href="http://repo1.maven.org/maven2/com/squareup/okhttp3/okhttp/3.2.0/okhttp-3.2.0.jar" target="_blank" rel="noopener">okhttp-3.2.2.jar</a></li><li><a href="https://search.maven.org/remote_content?g=com.squareup.okio&amp;a=okio&amp;v=LATEST" target="_blank" rel="noopener">okio-1.6.0.jar</a></li></ul><p>Okio用于给OkHttp提供快速的I/O和可调整大小的缓存池。<br>OkHttp的源代码，示例可以在<a href="http://github.com/square/okhttp" target="_blank" rel="noopener">GitHub</a>中取得。</p><h4 id="Meven配置"><a href="#Meven配置" class="headerlink" title="Meven配置"></a>Meven配置</h4><pre class="lang:default decode:true ">&lt;dependency&gt;  &lt;groupId&gt;com.squareup.okhttp3&lt;/groupId&gt;  &lt;artifactId&gt;okhttp&lt;/artifactId&gt;  &lt;version&gt;3.2.0&lt;/version&gt;&lt;/dependency&gt;</pre> <h4 id="Gradle配置"><a href="#Gradle配置" class="headerlink" title="Gradle配置"></a>Gradle配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile &apos;com.squareup.okhttp3:okhttp:3.2.0&apos;</span><br></pre></td></tr></table></figure><hr><blockquote><p><span style="font-size:12px">本文标题: <a href="http://linlshare.github.io/2016/04/03/OkHttp学习系列一：入门和简单使用/">OkHttp学习系列一：入门和简单使用</a><br>文章作者: <a href="http://linlshare.github.io/">Lshare</a><br>许可协议: <a rel="noopener" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">©署名-非商用-相同方式共享 4.0</a></span></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;参考并有选择地翻译了：&lt;a href=&quot;http://square.github.io/okhttp/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://square.github.io/okhttp/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;综述&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="编程" scheme="http://linlshare.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="Android" scheme="http://linlshare.github.io/tags/Android/"/>
    
      <category term="HTTP" scheme="http://linlshare.github.io/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>【译】一款强大的Android调试工具：Stetho</title>
    <link href="http://linlshare.github.io/2016/03/30/%E3%80%90%E8%AF%91%E3%80%91%E4%B8%80%E6%AC%BE%E5%BC%BA%E5%A4%A7%E7%9A%84Android%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7%EF%BC%9AStetho/"/>
    <id>http://linlshare.github.io/2016/03/30/【译】一款强大的Android调试工具：Stetho/</id>
    <published>2016-03-30T06:25:24.000Z</published>
    <updated>2018-10-26T14:58:13.581Z</updated>
    
    <content type="html"><![CDATA[<p>本文翻译自：<a href="http://facebook.github.io/stetho/" target="_blank" rel="noopener">http://facebook.github.io/stetho/</a>。没错，Facebook出品，必属精品！</p><blockquote><p>一个专门给Android应用使用的调试桥工具</p></blockquote><p>Stetho是一个给Android应用使用的高级调试桥工具。当启用后，开发者可以使用Chrome桌面浏览器的Chrome开发者工具特性。开发者也可以选择启用可选的dumpapp工具，它提供了一个强大的触及应用程序内部的命令行界面。<br><a id="more"></a></p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://github.com/facebook/stetho/releases/download/v1.3.1/stetho-1.3.1-fatjar.jar" target="_blank" rel="noopener">Download v1.3.1</a></p><p>或者你也可以通过Gradle或者Maven，从Maven中心仓库中下载Stetho到你的项目中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Gradle</span></span><br><span class="line">dependencies &#123; </span><br><span class="line">    compile <span class="string">'com.facebook.stetho:stetho:1.3.1'</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Maven--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupid</span>&gt;</span>com.facebook.stetho<span class="tag">&lt;/<span class="name">groupid</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactid</span>&gt;</span>stetho<span class="tag">&lt;/<span class="name">artifactid</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>只有stetho核心是必须的，你也可以同时包含进网络库，如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123; </span><br><span class="line">  compile <span class="string">'com.facebook.stetho:stetho-okhttp3:1.3.1'</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123; </span><br><span class="line">  compile <span class="string">'com.facebook.stetho:stetho-okhttp:1.3.1'</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123; </span><br><span class="line">  compile <span class="string">'com.facebook.stetho:stetho-urlconnection:1.3.1'</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><h4 id="Chrome开发者工具"><a href="#Chrome开发者工具" class="headerlink" title="Chrome开发者工具"></a>Chrome开发者工具</h4><p><img src="http://7xsf09.com1.z0.glb.clouddn.com/16-3-30/15721059.jpg" alt="inspector-discovery"></p><p>Stetho软件通过使用客户端/服务器协议实现了在Chrome开发者工具前端的集成。一旦你的应用集成了Stetho，只要在地址栏上输入<code>chrome://inspect</code>并点击<code>Inspect</code>就可以开始玩了。</p><h4 id="网络监视"><a href="#网络监视" class="headerlink" title="网络监视"></a>网络监视</h4><p><img src="http://7xsf09.com1.z0.glb.clouddn.com/16-3-30/66293422.jpg" alt="inspector-network"></p><p>可以使用Chrome开发者工具的全套功能来进行网络监视，包括图片预览、JSON响应协助，甚至是输出HAR格式的追踪信息。</p><h4 id="数据库监视"><a href="#数据库监视" class="headerlink" title="数据库监视"></a>数据库监视</h4><p><img src="http://7xsf09.com1.z0.glb.clouddn.com/16-3-30/47307653.jpg" alt="inspector-sqlite"><br>SQLite数据库可以被可视化和交互式地浏览，并且具备完全的读写能力。</p><h4 id="视图层级"><a href="#视图层级" class="headerlink" title="视图层级"></a>视图层级</h4><p><img src="http://7xsf09.com1.z0.glb.clouddn.com/16-3-30/27240811.jpg" alt="inspector-elements"></p><p>视图层级功能支持ICS（API 15）以及更高版本的Android系统。有很多很棒的功能，比如说View实例被可视化地放置在视图层级中、视图高亮和点击view就可以跳到它在层级中的位置。</p><h4 id="Dumpapp"><a href="#Dumpapp" class="headerlink" title="Dumpapp"></a>Dumpapp</h4><p><img src="http://7xsf09.com1.z0.glb.clouddn.com/16-3-30/13927583.jpg" alt="dumpapp-prefs"></p><p>Dumpapp扩展超出了Chrome开发者工具所能显示的，它给应用组件提供了一个更具扩展性的命令行界面。它提供了一套默认的插件集，但是dumpapp真正强大之处是你可以创建你自己的插件。</p><h4 id="JavaScript控制台"><a href="#JavaScript控制台" class="headerlink" title="JavaScript控制台"></a>JavaScript控制台</h4><p><img src="http://7xsf09.com1.z0.glb.clouddn.com/16-3-30/43030945.jpg" alt="inspector-js"></p><p>JavaScript控制台允许你执行JavaScript代码，来跟应用甚至是Android SDK交互。</p><h2 id="集成"><a href="#集成" class="headerlink" title="集成"></a>集成</h2><h4 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h4><p>集成Stetho对现在的大多数Android应用来说，是无缝和直接的。下面的例子展示了在你的Application中初始化Stetho。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自定义Application并在清单文件的&lt;application&gt;的name属性中配置</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate();</span><br><span class="line">    <span class="comment">//使用默认配置初始化Stetho</span></span><br><span class="line">    Stetho.initializeWithDefaults(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样子会启用许多默认的设置，但是没有启用一些额外的钩子功能（hook）（特别是网络监视）。</p><p>接着看下面如何在自己的子系统中指定详细的设置。</p><h4 id="启用网络监视"><a href="#启用网络监视" class="headerlink" title="启用网络监视"></a>启用网络监视</h4><p>如果你使用流行的2.2.x+或者3.x发布版的OkHttp库，你可以使用监视器系统来自动hook进已存在的栈。目前启用网络监视最简单的最直接的方法是：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">OkHttpClient client = <span class="keyword">new</span> OkHttpClient();</span><br><span class="line">client.networkInterceptors().add(<span class="keyword">new</span> StethoInterceptor());</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> OkHttpClient.Builder()</span><br><span class="line">    .addNetworkInterceptor(<span class="keyword">new</span> StethoInterceptor())</span><br><span class="line">    .build();</span><br></pre></td></tr></table></figure><p>如果你使用<code>HttpURLConnection</code>，那么你可以使用<code>StethoURLConnectionManager</code>来帮助你进行网络监视，虽然用这个方法时要留意下一些警告信息。值得一提的是，你必须显示添加<code>Accept-Encoding: gzip</code>到请求头中，并手动处理压缩后的响应，以便Stetho报告压缩载荷大小。</p><p>查看<a href="https://github.com/facebook/stetho/tree/master/stetho-sample" target="_blank" rel="noopener">stetho-sample</a>项目来获取更多信息。</p><h4 id="定制dumpapp插件"><a href="#定制dumpapp插件" class="headerlink" title="定制dumpapp插件"></a>定制dumpapp插件</h4><p>定制插件是一个继承dumpapp系统的绝好方法，它还可以在配置中很方便的。简单地替换下你的配置，如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Stetho.initialize(Stetho.newInitializerBuilder(context)</span><br><span class="line">    .enableDumpapp(<span class="keyword">new</span> DumperPluginsProvider() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> Iterable&lt;DumperPlugin&gt; <span class="title">get</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Stetho.DefaultDumperPluginsBuilder(context)</span><br><span class="line">            .provide(<span class="keyword">new</span> MyDumperPlugin())</span><br><span class="line">            .finish();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .enableWebKitInspector(Stetho.defaultInspectorModulesProvider(context))</span><br><span class="line">    .build());</span><br></pre></td></tr></table></figure><p>查看<a href="https://github.com/facebook/stetho/tree/master/stetho-sample" target="_blank" rel="noopener">stetho-sample</a>项目来获取更多信息。</p><p><img src="http://7xsf09.com1.z0.glb.clouddn.com/16-3-30/96983497.jpg" alt="PS：倒骑驴的农民公众号开通啦"></p><hr><blockquote><p><span style="font-size:12px">本文标题: <a href="http://linlshare.github.io/2016/03/30/【译】一款强大的Android调试工具：Stetho/">【译】一款强大的Android调试工具：Stetho</a><br>文章作者: <a href="http://itxiehui.github.io/" target="_blank" rel="noopener">IT协会知识库</a><br>许可协议: <img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/80x15.png"><a rel="noopener" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">©署名-非商用-相同方式共享 4.0</a></span></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文翻译自：&lt;a href=&quot;http://facebook.github.io/stetho/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://facebook.github.io/stetho/&lt;/a&gt;。没错，Facebook出品，必属精品！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个专门给Android应用使用的调试桥工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Stetho是一个给Android应用使用的高级调试桥工具。当启用后，开发者可以使用Chrome桌面浏览器的Chrome开发者工具特性。开发者也可以选择启用可选的dumpapp工具，它提供了一个强大的触及应用程序内部的命令行界面。&lt;br&gt;
    
    </summary>
    
    
      <category term="编程" scheme="http://linlshare.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="Android" scheme="http://linlshare.github.io/tags/Android/"/>
    
  </entry>
  
</feed>
