<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>覽月維基</title>
  <icon>https://www.gravatar.com/avatar/67398ac80b713195e4e6faee10834ea3</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://linlshare.github.io/"/>
  <updated>2018-12-25T15:20:04.179Z</updated>
  <id>https://linlshare.github.io/</id>
  
  <author>
    <name>Lshare</name>
    <email>Lshare@outlook.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>金剛般若波羅蜜經</title>
    <link href="https://linlshare.github.io/2018/12/25/philosophy/%E9%87%91%E5%89%9B%E8%88%AC%E8%8B%A5%E6%B3%A2%E7%BE%85%E8%9C%9C%E7%B6%93/"/>
    <id>https://linlshare.github.io/2018/12/25/philosophy/金剛般若波羅蜜經/</id>
    <published>2018-12-25T15:04:16.000Z</published>
    <updated>2018-12-25T15:20:04.179Z</updated>
    
    <content type="html"><![CDATA[<h2 id="姚秦天竺三藏鳩摩羅什譯本"><a href="#姚秦天竺三藏鳩摩羅什譯本" class="headerlink" title="姚秦天竺三藏鳩摩羅什譯本"></a>姚秦天竺三藏鳩摩羅什譯本</h2><p>如是我聞：<br>一時，佛在舍衛國祇樹給孤獨園，與大比丘眾千二百五十人俱。爾時，世尊食時，著衣持鉢，入舍衛大城乞食。於其城中，次第乞已，還至本處。飯食訖，收衣鉢，洗足已，敷座而坐。<br>時，長老須菩提在大眾中即從座起，偏袒右肩，右膝著地，合掌恭敬而白佛言：「希有世尊！如來善護念諸菩薩，善付囑諸菩薩。世尊！善男子、善女人，發阿耨多羅三藐三菩提心，應云何住？云何降伏其心？」<br>佛言：「善哉，善哉！須菩提！如汝所說：『如來善護念諸菩薩，善付囑諸菩薩。』汝今諦聽，當為汝說。善男子、善女人，發阿耨多羅三藐三菩提心，應如是住，如是降伏其心。」<br>「唯然。世尊！願樂欲聞。」<br>佛告須菩提：「諸菩薩摩訶薩應如是降伏其心：『所有一切眾生之類，若卵生、若胎生、若濕生、若化生，若有色、若無色，若有想、若無想、若非有想非無想，我皆令入無餘涅槃而滅度之。』如是滅度無量、無數、無邊眾生，實無眾生得滅度者。何以故？須菩提！若菩薩有我相、人相、眾生相、壽者相，即非菩薩。<br>「復次，須菩提！菩薩於法應無所住行於布施，所謂不住色布施，不住聲、香、味、觸、法布施。須菩提！菩薩應如是布施，不住於相。何以故？若菩薩不住相布施，其福德不可思量。<br>「須菩提！於意云何？東方虛空可思量不？」<br>「不也，世尊！」<br>「須菩提！南、西、北方，四維、上、下虛空可思量不？」<br>「不也，世尊！」<br>「須菩提！菩薩無住相布施，福德亦復如是不可思量。須菩提！菩薩但應如所教住。<br>「須菩提！於意云何？可以身相見如來不？」<br>「不也，世尊！不可以身相得見如來。何以故？如來所說身相，即非身相。」<br>佛告須菩提：「凡所有相，皆是虛妄；若見諸相非相，則見如來。」<br>須菩提白佛言：「世尊！頗有眾生，得聞如是言說章句，生實信不？」<br>佛告須菩提：「莫作是說。如來滅後後五百歲，有持戒修福者，於此章句能生信心，以此為實，當知是人不於一佛二佛、三、四、五佛而種善根，已於無量千萬佛所種諸善根。聞是章句，乃至一念生淨信者，須菩提！如來悉知悉見，是諸眾生得如是無量福德。何以故？是諸眾生無復我相、人相、眾生相、壽者相。<br>「無法相，亦無非法相。何以故？是諸眾生若心取相，則為著我、人、眾生、壽者。<br>「若取法相，即著我、人、眾生、壽者。何以故？若取非法相，即著我、人、眾生、壽者。是故不應取法，不應取非法。以是義故，如來常說：『汝等比丘，知我說法，如筏喻者，法尚應捨，何況非法。』<br>「須菩提！於意云何？如來得阿耨多羅三藐三菩提耶？如來有所說法耶？」<br>須菩提言：「如我解佛所說義，無有定法名阿耨多羅三藐三菩提，亦無有定法如來可說。何以故？如來所說法，皆不可取、不可說、非法、非非法。所以者何？一切賢聖皆以無為法而有差別。」<br>「須菩提！於意云何？若人滿三千大千世界七寶以用布施，是人所得福德，寧為多不？」<br>須菩提言：「甚多，世尊！何以故？是福德即非福德性，是故如來說福德多。」<br>「若復有人，於此經中受持乃至四句偈等，為他人說，其福勝彼。何以故？須菩提！一切諸佛及諸佛阿耨多羅三藐三菩提法，皆從此經出。須菩提！所謂佛法者，即非佛法。<br>「須菩提！於意云何？須陀洹能作是念，『我得須陀洹果』不？」<br>須菩提言：「不也，世尊！何以故？須陀洹名為入流，而無所入，不入色、聲、香、味、觸、法，是名須陀洹。」<br>「須菩提！於意云何？斯陀含能作是念，『我得斯陀含果』不？」<br>須菩提言：「不也，世尊！何以故？斯陀含名一往來，而實無往來，是名斯陀含。」<br>「須菩提！於意云何？阿那含能作是念，『我得阿那含果』不？」<br>須菩提言：「不也，世尊！何以故？阿那含名為不來，而實無來，是故名阿那含。」<br>「須菩提！於意云何？阿羅漢能作是念，『我得阿羅漢道』不？」<br>須菩提言：「不也，世尊！何以故？實無有法名阿羅漢。世尊！若阿羅漢作是念『我得阿羅漢道』，即為著我、人、眾生、壽者。世尊！佛說我得無諍三昧，人中最為第一，是第一離欲阿羅漢。我不作是念：『我是離欲阿羅漢。』世尊！我若作是念『我得阿羅漢道』，世尊則不說須菩提是樂阿蘭那行者。以須菩提實無所行，而名須菩提是樂阿蘭那行。」<br>佛告須菩提：「於意云何？如來昔在然燈佛所，於法有所得不？」<br>「世尊！如來在然燈佛所，於法實無所得。」<br>「須菩提！於意云何？菩薩莊嚴佛土不？」<br>「不也，世尊！何以故？莊嚴佛土者，則非莊嚴，是名莊嚴。」<br>「是故須菩提，諸菩薩摩訶薩應如是生清淨心，不應住色生心，不應住聲、香、味、觸、法生心，應無所住而生其心。<br>「須菩提！譬如有人，身如須彌山王，於意云何？是身為大不？」<br>須菩提言：「甚大，世尊！何以故？佛說非身，是名大身。」<br>「須菩提！如恒河中所有沙數，如是沙等恒河，於意云何？是諸恒河沙寧為多不？」<br>須菩提言：「甚多，世尊！但諸恒河尚多無數，何況其沙。」<br>「須菩提！我今實言告汝，若有善男子、善女人，以七寶滿爾所恒河沙數三千大千世界以用布施，得福多不？」<br>須菩提言：「甚多，世尊！」<br>佛告須菩提：「若善男子、善女人於此經中，乃至受持四句偈等，為他人說，而此福德勝前福德。<br>「復次，須菩提！隨說是經，乃至四句偈等，當知此處，一切世間天、人、阿修羅皆應供養，如佛塔廟，何況有人盡能受持讀誦？須菩提！當知是人成就最上、第一、希有之法，若是經典所在之處，則為有佛，若尊重弟子。」<br>爾時，須菩提白佛言：「世尊！當何名此經？我等云何奉持？」<br>佛告須菩提：「是經名為『金剛般若波羅蜜』。以是名字，汝當奉持。所以者何？須菩提！佛說般若波羅蜜，則非般若波羅蜜。須菩提！於意云何？如來有所說法不？」<br>須菩提白佛言：「世尊！如來無所說。」<br>「須菩提！於意云何？三千大千世界所有微塵是為多不？」<br>須菩提言：「甚多，世尊！」<br>「須菩提！諸微塵，如來說非微塵，是名微塵。如來說世界，非世界，是名世界。<br>「須菩提！於意云何？可以三十二相見如來不？」<br>「不也，世尊！不可以三十二相得見如來。何以故？如來說三十二相，即是非相，是名三十二相。」<br>「須菩提！若有善男子、善女人，以恒河沙等身命布施；若復有人，於此經中，乃至受持四句偈等，為他人說，其福甚多。」<br>爾時，須菩提聞說是經，深解義趣，涕淚悲泣，而白佛言：「希有世尊！佛說如是甚深經典，我從昔來所得慧眼，未曾得聞如是之經。世尊！若復有人得聞是經，信心清淨，則生實相，當知是人，成就第一希有功德。世尊！是實相者，則是非相，是故如來說名實相。世尊！我今得聞如是經典，信解、受持不足為難，若當來世後五百歲，其有眾生得聞是經，信解、受持，是人則為第一希有。何以故？此人無我相、人相、眾生相、壽者相。所以者何？我相即是非相，人相、眾生相、壽者相即是非相。何以故？離一切諸相，則名諸佛。」<br>佛告須菩提：「如是，如是！若復有人得聞是經，不驚、不怖、不畏，當知是人甚為希有。何以故？須菩提！如來說第一波羅蜜，非第一波羅蜜，是名第一波羅蜜。須菩提！忍辱波羅蜜，如來說非忍辱波羅蜜。何以故？須菩提！如我昔為歌利王割截身體，我於爾時，無我相、無人相、無眾生相、無壽者相。何以故？我於往昔節節支解時，若有我相、人相、眾生相、壽者相，應生瞋恨。須菩提！又念過去於五百世作忍辱仙人，於爾所世，無我相、無人相、無眾生相、無壽者相。是故，須菩提！菩薩應離一切相，發阿耨多羅三藐三菩提心，不應住色生心，不應住聲、香、味、觸、法生心，應生無所住心。若心有住，則為非住。是故，佛說菩薩心不應住色布施。<br>「須菩提！菩薩為利益一切眾生，應如是布施。如來說：『一切諸相，即是非相。』又說：『一切眾生，則非眾生。』<br>「須菩提！如來是真語者、實語者、如語者、不誑語者、不異語者。<br>「須菩提！如來所得法，此法無實無虛。須菩提！若菩薩心住於法而行布施，如人入闇，則無所見；若菩薩心不住法而行布施，如人有目，日光明照，見種種色。<br>「須菩提！當來之世，若有善男子、善女人，能於此經受持、讀誦，則為如來以佛智慧悉知是人，悉見是人，皆得成就無量無邊功德。<br>「須菩提！若有善男子、善女人，初日分以恒河沙等身布施，中日分復以恒河沙等身布施，後日分亦以恒河沙等身布施，如是無量百千萬億劫以身布施；若復有人，聞此經典，信心不逆，其福勝彼，何況書寫、受持、讀誦、為人解說。<br>「須菩提！以要言之，是經有不可思議、不可稱量、無邊功德。如來為發大乘者說，為發最上乘者說。若有人能受持、讀誦、廣為人說，如來悉知是人，悉見是人，皆得成就不可量、不可稱、無有邊、不可思議功德，如是人等，則為荷擔如來阿耨多羅三藐三菩提。何以故？須菩提！若樂小法者，著我見、人見、眾生見、壽者見，則於此經，不能聽受、讀誦、為人解說。<br>「須菩提！在在處處若有此經，一切世間天、人、阿修羅所應供養；當知此處則為是塔，皆應恭敬、作禮、圍繞，以諸華香而散其處。<br>「復次，須菩提！善男子、善女人受持、讀誦此經，若為人輕賤，是人先世罪業應墮惡道，以今世人輕賤故，先世罪業則為消滅，當得阿耨多羅三藐三菩提。<br>「須菩提！我念過去無量阿僧祇劫，於然燈佛前，得值八百四千萬億那由他諸佛，悉皆供養承事，無空過者；若復有人，於後末世，能受持、讀誦此經，所得功德，於我所供養諸佛功德，百分不及一，千萬億分、乃至算數、譬喻所不能及。<br>「須菩提！若善男子、善女人於後末世，有受持、讀誦此經所得功德，我若具說者，或有人聞，心則狂亂，狐疑不信。須菩提！當知是經義不可思議，果報亦不可思議。」<br>爾時，須菩提白佛言：「世尊！善男子、善女人發阿耨多羅三藐三菩提心，云何應住？云何降伏其心？」<br>佛告須菩提：「善男子、善女人發阿耨多羅三藐三菩提者，當生如是心：『我應滅度一切眾生。滅度一切眾生已，而無有一眾生實滅度者。』何以故？須菩提！若菩薩有我相、人相、眾生相、壽者相，則非菩薩。所以者何？須菩提！實無有法發阿耨多羅三藐三菩提者。<br>「須菩提！於意云何？如來於然燈佛所，有法得阿耨多羅三藐三菩提不？」<br>「不也，世尊！如我解佛所說義，佛於然燈佛所，無有法得阿耨多羅三藐三菩提。」<br>佛言：「如是，如是！須菩提！實無有法如來得阿耨多羅三藐三菩提。須菩提！若有法如來得阿耨多羅三藐三菩提者，然燈佛則不與我受記：『汝於來世當得作佛，號釋迦牟尼。』以實無有法得阿耨多羅三藐三菩提，是故然燈佛與我受記，作是言：『汝於來世當得作佛，號釋迦牟尼。』何以故？如來者，即諸法如義。<br>「若有人言『如來得阿耨多羅三藐三菩提』，須菩提！實無有法，佛得阿耨多羅三藐三菩提。須菩提！如來所得阿耨多羅三藐三菩提，於是中無實無虛，是故如來說：『一切法皆是佛法。』須菩提！所言一切法者，即非一切法，是故名一切法。<br>「須菩提！譬如人身長、大。」<br>須菩提言：「世尊！如來說人身長、大，則為非大身，是名大身。」<br>「須菩提！菩薩亦如是，若作是言『我當滅度無量眾生』，則不名菩薩。何以故？須菩提！實無有法名為菩薩。是故，佛說：『一切法無我、無人、無眾生、無壽者。』須菩提！若菩薩作是言『我當莊嚴佛土』，是不名菩薩。何以故？如來說莊嚴佛土者，即非莊嚴，是名莊嚴。須菩提！若菩薩通達無我、法者，如來說名真是菩薩。<br>「須菩提！於意云何？如來有肉眼不？」<br>「如是，世尊！如來有肉眼。」<br>「須菩提！於意云何？如來有天眼不？」<br>「如是，世尊！如來有天眼。」<br>「須菩提！於意云何？如來有慧眼不？」<br>「如是，世尊！如來有慧眼。」<br>「須菩提！於意云何？如來有法眼不？」<br>「如是，世尊！如來有法眼。」<br>「須菩提！於意云何？如來有佛眼不？」<br>「如是，世尊！如來有佛眼。」<br>「須菩提！於意云何？恒河中所有沙，佛說是沙不？」<br>「如是，世尊！如來說是沙。」<br>「須菩提！於意云何？如一恒河中所有沙，有如是等恒河，是諸恒河所有沙數佛世界，如是寧為多不？」<br>「甚多，世尊！」<br>佛告須菩提：「爾所國土中，所有眾生若干種心，如來悉知。何以故？如來說諸心，皆為非心，是名為心。所以者何？須菩提！過去心不可得，現在心不可得，未來心不可得。<br>「須菩提！於意云何？若有人滿三千大千世界七寶以用布施，是人以是因緣得福多不？」<br>「如是，世尊！此人以是因緣得福甚多。」<br>「須菩提！若福德有實，如來不說得福德多；以福德無故，如來說得福德多。<br>「須菩提！於意云何？佛可以具足色身見不？」<br>「不也，世尊！如來不應以具足色身見。何以故？如來說具足色身，即非具足色身，是名具足色身。」<br>「須菩提！於意云何？如來可以具足諸相見不？」<br>「不也，世尊！如來不應以具足諸相見。何以故？如來說諸相具足，即非具足，是名諸相具足。」<br>「須菩提！汝勿謂如來作是念，『我當有所說法』。莫作是念，何以故？若人言『如來有所說法』，即為謗佛，不能解我所說故。須菩提！說法者，無法可說，是名說法。」<br>爾時，慧命須菩提白佛言：「世尊！頗有眾生於未來世，聞說是法生信心不？」<br>佛言：「須菩提！彼非眾生，非不眾生。何以故？須菩提！眾生、眾生者，如來說非眾生，是名眾生。」<br>須菩提白佛言：「世尊！佛得阿耨多羅三藐三菩提，為無所得耶？」<br>「如是，如是！須菩提！我於阿耨多羅三藐三菩提乃至無有少法可得，是名阿耨多羅三藐三菩提。<br>「復次，須菩提！是法平等，無有高下，是名阿耨多羅三藐三菩提；以無我、無人、無眾生、無壽者，修一切善法，則得阿耨多羅三藐三菩提。須菩提！所言善法者，如來說非善法，是名善法。<br>「須菩提！若三千大千世界中所有諸須彌山王，如是等七寶聚，有人持用布施；若人以此《般若波羅蜜經》，乃至四句偈等，受持、讀誦、為他人說，於前福德百分不及一，百千萬億分，乃至算數、譬喻所不能及。<br>「須菩提！於意云何？汝等勿謂如來作是念：『我當度眾生。』須菩提！莫作是念。何以故？實無有眾生如來度者，若有眾生如來度者，如來則有我、人、眾生、壽者。須菩提！如來說有我者，則非有我，而凡夫之人以為有我。須菩提！凡夫者，如來說則非凡夫。<br>「須菩提！於意云何？可以三十二相觀如來不？」<br>須菩提言：「如是，如是！以三十二相觀如來。」<br>佛言：「須菩提！若以三十二相觀如來者，轉輪聖王則是如來。」<br>須菩提白佛言：「世尊！如我解佛所說義，不應以三十二相觀如來。」<br>爾時，世尊而說偈言：<br>「若以色見我，<br>以音聲求我，<br>是人行邪道，<br>不能見如來。<br>「須菩提！汝若作是念：『如來不以具足相故，得阿耨多羅三藐三菩提。』須菩提！莫作是念。如來不以具足相故，得阿耨多羅三藐三菩提。<br>「須菩提！汝若作是念『發阿耨多羅三藐三菩提者，說諸法斷滅相』，莫作是念。何以故？發阿耨多羅三藐三菩提心者，於法不說斷滅相。<br>「須菩提！若菩薩以滿恒河沙等世界七寶布施；若復有人知一切法無我，得成於忍，此菩薩勝前菩薩所得功德。須菩提！以諸菩薩不受福德故。」<br>須菩提白佛言：「世尊！云何菩薩不受福德？」<br>「須菩提！菩薩所作福德，不應貪著，是故說不受福德。<br>「須菩提！若有人言『如來若來若去、若坐若臥』，是人不解我所說義。何以故？如來者，無所從來，亦無所去，故名如來。<br>「須菩提！若善男子、善女人以三千大千世界碎為微塵，於意云何？是微塵眾寧為多不？」<br>「甚多，世尊！何以故？若是微塵眾實有者，佛則不說是微塵眾。所以者何？佛說微塵眾，則非微塵眾，是名微塵眾。世尊！如來所說三千大千世界，則非世界，是名世界。何以故？若世界實有者，則是一合相。如來說一合相，則非一合相，是名一合相。」<br>「須菩提！一合相者，則是不可說，但凡夫之人貪著其事。<br>「須菩提！若人言『佛說我見、人見、眾生見、壽者見』，須菩提！於意云何？是人解我所說義不？」<br>「世尊！是人不解如來所說義。何以故？世尊說我見、人見、眾生見、壽者見，即非我見、人見、眾生見、壽者見，是名我見、人見、眾生見、壽者見。」<br>「須菩提！發阿耨多羅三藐三菩提心者，於一切法，應如是知，如是見，如是信解，不生法相。須菩提！所言法相者，如來說即非法相，是名法相。<br>「須菩提！若有人以滿無量阿僧祇世界七寶持用布施，若有善男子、善女人發菩薩心者，持於此經乃至四句偈等，受持、讀誦、為人演說，其福勝彼。云何為人演說？不取於相，如如不動。何以故？<br>「<br>一切有為法，<br>如夢、幻、泡、影，<br>如露亦如電，<br>應作如是觀。」<br>佛說是經已，長老須菩提及諸比丘、比丘尼、優婆塞、優婆夷，一切世間天、人、阿修羅，聞佛所說，皆大歡喜，信受奉行。</p><h2 id="唐三藏法師玄奘譯本"><a href="#唐三藏法師玄奘譯本" class="headerlink" title="唐三藏法師玄奘譯本"></a>唐三藏法師玄奘譯本</h2><p>如是我聞一時薄伽梵在室羅筏住誓多林給孤獨園與大苾蒭眾千二百五十人俱尒時世尊於日初分整理常服執持衣鉢入室羅筏大城乞食時薄伽梵於其城中行乞食已出還本處飯食訖收衣鉢洗足已於食後時敷如常座結加趺坐端身正願住對面念時諸苾蒭來詣佛所到已頂禮世尊雙足右遶三匝退坐一面具壽善現亦於如是眾會中坐。</p><p>尒時眾中具壽善現從座而起偏袒一肩右膝著地合掌恭敬而白佛言希有世尊乃至如來應正等覺能以㝡勝攝受攝受諸菩薩摩訶薩乃至如來應正等覺能以㝡勝付囑付囑諸菩薩摩訶薩世尊諸有發趣菩薩乘者應云何住云何修行云何攝伏其心作是語已。</p><p>尒時世尊告具壽善現曰善哉善哉善現如是如是如汝所說乃至如來應正等覺能以㝡勝攝受攝受諸菩薩摩訶薩乃至如來應正等覺能以㝡勝付囑付囑諸菩薩摩訶薩是故善現汝應諦聽極善作意吾當為汝分別解說諸有發趣菩薩乘者應如是住如是修行如是攝伏其心具壽善現白佛言如是世尊願樂欲聞。</p><p>佛言善現諸有發趣菩薩乘者應當發起如是之心所有諸有情有情攝所攝若卵生若胎生若濕生若化生若有色若無色若有想若無想若非有想非無想乃至有情界施設所施設如是一切我當皆令於無餘依妙涅槃界而般涅槃雖度如是無量有情令滅度已而無有情得滅度者何以故善現若諸菩薩摩訶薩有情想轉不應說名菩薩摩訶薩所以者何善現若諸菩薩摩訶薩不應說言有情想轉如是命者想士夫想補特伽羅想意生想摩納婆想作者想受者想轉當知亦尒何以故善現無有少法名為發趣菩薩乘者。</p><p>復次善現菩薩摩訶薩不住於事應行布施都無所住應行布施不住於色應行布施不住聲香味觸法應行布施善現如是菩薩摩訶薩如不住相想應行布施何以故善現若菩薩摩訶薩都無所住而行布施其福德聚不可取量佛告善現於汝意云何東方虛空可取量不善現答言不也世尊善現如是南西北方四維上下周遍十方一切世界虛空可取量不善現答言不也世尊佛言善現如是如是若菩薩摩訶薩都無所住而行布施其福德聚不可取量亦復如是善現菩薩如是如不住相想應行布施。</p><p>佛告善現於汝意云何可以諸相具足觀如來不善現答言不也世尊不應以諸相具足觀於如來何以故如來說諸相具足即非諸相具足說是語已佛復告具壽善現言善現乃至諸相具足皆是虛妄乃至非相具足皆非虛妄如是以相非相應觀如來說是語已具壽善現復白佛言世尊頗有有情於當來世後時後分後五百歲正法將滅時分轉時聞說如是色經典句生實想不佛告善現勿作是說頗有有情於當來世後時後分後五百歲正法將滅時分轉時聞說如是色經典句生實想不然復善現有菩薩摩訶薩於當來世後時後分後五百歲正法將滅時分轉時具足尸羅具德具慧復次善現彼菩薩摩訶薩非於一佛所承事供養非於一佛所種諸善根然復善現彼菩薩摩訶薩於其非一百千佛所承事供養於其非一百千佛所種諸善根乃能聞說如是色經典句當得一淨信心善現如來以其佛智悉已知彼如來以其佛眼悉已見彼善現如來悉已覺彼一切有情當生無量無數福聚當攝無量無數福聚何以故善現彼菩薩摩訶薩無我想轉無有情想無命者想無士夫想無補特伽羅想无意生想無摩納婆想無作者想無受者想轉善現彼菩薩摩訶薩無法想轉無非法想轉無想轉亦無非想轉所以者何善現若菩薩摩訶薩有法想轉彼即應有我執有情執命者執補特伽羅等執若有非法想轉彼亦應有我執有情執命者執補特伽羅等執何以故善現不應取法不應取非法是故如來密意而說筏喻法門諸有智者法尚應断何况非法。</p><p>佛復告具壽善現言善現於汝意云何頗有少法如來應正等覺證得阿耨多羅三藐三菩提耶頗有少法如來應正等覺是所說耶善現答言世尊如我解佛所說義者無有少法如來應正等覺證得阿耨多羅三藐三菩提亦無有少法是如來應正等覺所說何以故世尊如來應正等覺所證所說所思惟法皆不可取不可宣說非法非非法何以故以諸賢聖補特伽羅皆是無為之所顯故。</p><p>佛告善現於汝意云何若善男子或善女人以此三千大千世界盛滿七寶持用布施是善男子或善女人由此因緣所生福聚寧為多不善現答言甚多世尊甚多善逝是善男子或善女人由此因緣所生福聚其量甚多何以故世尊福德聚福德聚者如來說為非福德聚是故如來說名福德聚福德聚。</p><p>佛復告善現言善現若善男子或善女人以此三千大千世界盛滿七寶持用布施若善男子或善女人於此法門乃至四句伽他受持讀誦究竟通利及廣為他宣說開示如理作意由是因緣所生福聚甚多於前無量無數何以故一切如來應正等覺阿耨多羅三藐三菩提皆從此經出諸佛世尊皆從此經生所以者何善現諸佛法諸佛法者如來說為非諸佛法是故如來說名諸佛法諸佛法。</p><p>佛告善現於汝意云何諸預流者頗作是念我能證得預流果不善現答言不也世尊諸預流者不作是念我能證得預流之果何以故世尊諸預流者無少所預故名預流不預色聲香味觸法故名預流世尊若預流者作如是念我能證得預流之果即為執我有情命者士夫補特伽羅等佛告善現於汝意云何諸一來者頗作是念我能證得一來果不善現答言不也世尊諸一來者不作是念我能證得一來之果何以故世尊以無少法證一來性故名一來佛告善現於汝意云何諸不還者頗作是念我能證得不還果不善現答言不也世尊諸不還者不作是念我能證得不還之果何以故世尊以無少法證不還性故名不還佛告善現於汝意云何諸阿羅漢頗作是念我能證得阿羅漢不善現答言不也世尊諸阿羅漢不作是念我能證得阿羅漢性何以故世尊以無少法名阿羅漢由是因緣名阿羅漢世尊若阿羅漢作如是念我能證得阿羅漢性即為執我有情命者士夫補特伽羅等所以者何世尊如來應正等覺說我得無諍住㝡為第一世尊我雖是阿羅漢永離貪欲而我未曾作如是念我得阿羅漢永離貪欲世尊我若作如是念我得阿羅漢永離貪欲者如來不應記說我言善現善男子得無諍住㝡為第一以都無所住是故如來說名無諍住無諍住。</p><p>佛告善現於汝意云何如來昔在然燈如來應正等覺所頗於少法有所取不善現答言不也世尊如來昔在然燈如來應正等覺所都無少法而有所取佛告善現若有菩薩作如是言我當成辦佛土功德莊嚴如是菩薩非真實語何以故善現佛土功德莊嚴佛土功德莊嚴者如來說非莊嚴是故如來說名佛土功德莊嚴佛土功德莊嚴是故善現菩薩如是都無所住應生其心不住於色應生其心不住非色應生其心不住聲香味觸法應生其心不住非聲香味觸法應生其心都無所住應生其心。</p><p>佛告善現如有士夫具身大身其色自體假使譬如妙高山王善現於汝意云何彼之自體為廣大不善現答言彼之自體廣大世尊廣大善逝何以故世尊彼之自體如來說非彼體故名自體非以彼體故名自體。</p><p>佛告善現於汝意云何乃至殑伽河中所有沙數假使有如是沙等殑伽河是諸殑伽河沙寧為多不善現答言甚多世尊甚多善逝諸殑伽河尚多無數何况其沙佛言善現吾今告汝開覺於汝假使若善男子或善女人以妙七寶盛滿尒所殑伽河沙等世界奉施如來應正等覺善現於汝意云何是善男子或善女人由此因緣所生福聚寧為多不善現答言甚多世尊甚多善逝是善男子或善女人由此因緣所生福聚其量甚多。</p><p>佛復告善現若以七寶盛滿尒所沙等世界奉施如來應正等覺若善男子或善女人於此法門乃至四句伽他受持讀誦究竟通利及廣為他宣說開示如理作意由此因緣所生福聚甚多於前無量無數。</p><p>復次善現若地方所於此法門乃至為他宣說開示四句伽他此地方所尚為世間諸天及人阿素洛等之所供養如佛靈廟何况有能於此法門具足究竟書寫受持讀誦究竟通利及廣為他宣說開示如理作意如是有情成就㝡勝希有功德此地方所大師所住或隨一一尊重處所若諸有智同梵行者說是語已。</p><p>具壽善現復白佛言世尊當何名此法門我當云何奉持作是語已佛告善現言具壽今此法門名為能断般若波羅蜜多如是名字汝當奉持何以故善現如是般若波羅蜜多如來說為非般若波羅蜜多是故如來說名般若波羅蜜多。</p><p>佛告善現於汝意云何頗有少法如來可說不善現答言不也世尊無有少法如來可說佛告善現乃至三千大千世界大地微塵寧為多不善現答言此地微塵甚多世尊甚多善逝。</p><p>佛言善現大地微塵如來說非微塵是故如來說名大地微塵諸世界如來說非世界是故如來說名世界。</p><p>佛告善現於汝意云何應以三十二大士夫相觀於如來應正等覺不善現答言不也世尊不應以三十二大士夫相觀於如來應正等覺何以故世尊三十二大士夫相如來說為非相是故如來說名三十二大士夫相。</p><p>佛復告善現言假使若有善男子或善女人於日日分捨施殑伽河沙等自體如是經殑伽河沙等劫數捨施自體復有善男子或善女人於此法門乃至四句伽他受持讀誦究竟通利及廣為他宣說開示如理作意由是因緣所生福聚甚多於前无量無數。</p><p>尒時具壽善現聞法威力悲泣墮淚俛仰捫淚而白佛言甚奇希有世尊㝡極希有善逝如來今者所說法門普為發趣㝡上乘者作諸義利普為發趣㝡勝乘者作諸義利世尊我昔生智以來未曾得聞如是法門世尊若諸有情聞說如是甚深經典生真實想當知成就㝡勝希有何以故世尊諸真實想真實想者如來說為非想是故如來說名真實想真實想世尊我今聞說如是法門領悟信解未為希有若諸有情於當來世後時後分後五百歲正法將滅時分轉時當於如是甚深法門領悟信解受持讀誦究竟通利及廣為他宣說開示如理作意當知成就㝡勝希有何以故世尊彼諸有情無我想轉無有情想無命者想無士夫想無補特伽羅想無意生想無摩納婆想無作者想無受者想轉所以者何世尊諸我想即是非想諸有情想命者想士夫想補特伽羅想意生想摩納婆想作者想受者想即是非想何以故諸佛世尊離一切想作是語已。</p><p>尒時世尊告具壽善現言如是如是善現若諸有情聞說如是甚深經典不驚不懼無有怖畏當知成就㝡勝希有何以故善現如來說㝡勝波羅蜜多謂般若波羅蜜多善現如來所說㝡勝波羅蜜多無量諸佛世尊所共宣說故名㝡勝波羅蜜多如來說㝡勝波羅蜜多即非波羅蜜多是故如來說名㝡勝波羅蜜多。</p><p>復次善現如來說忍辱波羅蜜多即非波羅蜜多是故如來說名忍辱波羅蜜多何以故善現我昔過去世曾為羯利王断支節肉我於尒時都無我想或有情想或命者想或士夫想或補特伽羅想或意生想或摩納婆想或作者想或受者想我於尒時都無有想亦非無想何以故善現我於尒時若有我想即於尒時應有恚想我於尒時若有有情想命者想士夫想補特伽羅想意生想摩納婆想作者想受者想即於尒時應有恚想何以故善現我憶過去五百生中曾為自號忍辱仙人我於尒時都无我想無有情想無命者想無士夫想无補特伽羅想無意生想無摩納婆想無作者想無受者想我於尒時都無有想亦非無想是故善現菩薩摩訶薩遠離一切想應發阿耨多羅三藐三菩提心不住於色應生其心不住非色應生其心不住聲香味觸法應生其心不住非聲香味觸法應生其心都無所住應生其心何以故善現諸有所住則為非住是故如來說諸菩薩應無所住而行布施不應住色聲香味觸法而行布施。</p><p>復次善現菩薩摩訶薩為諸有情作義利故應當如是棄捨布施何以故善現諸有情想即是非想一切有情如來即說為非有情善現如來是實語者諦語者如語者不異語者。</p><p>復次善現如來現前等所證法或所說法或所思法即於其中非諦非妄善現譬如士夫入於闇室都無所見當知菩薩若墮於事謂墮於事而行布施亦復如是善現譬如明眼士夫過夜曉已日光出時見種種色當知菩薩不墮於事謂不墮事而行布施亦復如是。</p><p>復次善現若善男子或善女人於此法門受持讀誦究竟通利及廣為他宣說開示如理作意則為如來以其佛智悉知是人則為如來以其佛眼悉見是人則為如來悉覺是人如是有情一切當生無量福聚。</p><p>復次善現假使善男子或善女人日初時分以殑伽河沙等自體布施日中時分復以殑伽河沙等自體布施日後時分亦以殑伽河沙等自體布施由此異門經於俱𦙁𨚗𢈔多百千劫以自體布施若有聞說如是法門不生誹謗由此因緣所生福聚尚多於前無量無數何况能於如是法門具足畢竟書寫受持讀誦究竟通利及廣為他宣說開示如理作意復次善現如是法門不可思議不可稱量應當悕冀不可思議所感異熟善現如來宣說如是法門為欲饒益趣㝡上乘諸有情故為欲饒益趣㝡勝乘諸有情故善現若有於此法門受持讀誦究竟通利及廣為他宣說開示如理作意即為如來以其佛智悉知是人即為如來以其佛眼悉見是人則為如來悉覺是人如是有情一切成就無量福聚皆當成就不可思議不可稱量无邊福聚善現如是一切有情其肩荷擔如來無上正等菩提何以故善現如是法門非諸下劣信解有情所能聽聞非諸我見非諸有情見非諸命者見非諸士夫見非諸補特伽羅見非諸意生見非諸摩納婆見非諸作者見非諸受者見所能聽聞此等若能受持讀誦究竟通利及廣為他宣說開示如理作意無有是處。</p><p>復次善現若地方所開此經典此地方所當為世間諸天及人阿素洛等之所供養禮敬右遶如佛靈廟。</p><p>復次善現若善男子或善女人於此經典受持讀誦究竟通利及廣為他宣說開示如理作意若遭輕毀極遭輕毀所以者何善現是諸有情宿生所造諸不淨業應感惡趣以現法中遭輕毀故宿生所造諸不淨業皆悉消盡當得無上正等菩提何以故善現我憶過去於無數劫復過無數於然燈如來應正等覺先復過先曾值八十四俱𦙁𨚗𢈔多百千諸佛我皆承事既承事已皆無違犯善現我於如是諸佛世尊皆得承事既承事已皆無違犯若諸有情後時後分後五百歲正法將滅時分轉時於此經典受持讀誦究竟通利及廣為他宣說開示如理作意善現我先福聚於此福聚百分計之所不能及如是千分若百千分若俱𦙁百千分若俱𦙁𨚗𢈔多百千分若數分若計分若筭分若喻分若鄔波尼煞曇分亦不能及善現我若具說當於尒時是善男子或善女人所生福聚乃至是善男子是善女人所攝福聚有諸有情則便迷悶心或狂亂是故善現如來宣說如是法門不可思議不可稱量應當悕冀不可思議所感異熟尒時具壽善現復白佛言世尊諸有發趣菩薩乘者應云何住云何修行云何攝伏其心。</p><p>佛告善現諸有發趣菩薩乘者應當發起如是之心我當皆令一切有情於無餘依妙涅槃界而般涅槃雖度如是一切有情令滅度已而無有情得滅度者何以故善現若諸菩薩摩訶薩有情想轉不應說名菩薩摩訶薩所以者何若諸菩薩摩訶薩不應說言有情想轉如是命者想士夫想補特伽羅想意生想摩納婆想作者想受者想轉當知亦尒何以故善現無有少法名為發趣菩薩乘者。</p><p>佛告善現於汝意云何如來昔於然燈如來應正等覺所頗有少法能證阿耨多羅三藐三菩提不作是語已具壽善現白佛言世尊如我解佛所說義者如來昔於然燈如來應正等覺所無有少法能證阿耨多羅三藐三菩提說是語已佛告具壽善現言如是如是善現如來昔於然燈如來應正等覺所無有少法能證阿耨多羅三藐三菩提何以故善現如來昔於然燈如來應正等覺所若有少法能證阿耨多羅三藐三菩提者然燈如來應正等覺不應授我記言汝摩納婆於當來世名釋迦牟尼如來應正等覺善現以如來無有少法能證阿耨多羅三藐三菩提是故然燈如來應正等覺授我記言汝摩納婆於當來世名釋迦牟尼如來應正等覺所以者何善現言如來者即是真實真如增語言如來者即是無生法性增語言如來者即是永断道路增語言如來者即是畢竟不生增語何以故善現若實無生即㝡勝義善現若如是說如來應正等覺能證阿耨多羅三藐三菩提者當知此言為不真實所以者何善現由彼謗我起不實執何以故善現無有少法如來應正等覺能證阿耨多羅三藐三菩提善現如來現前等所證法或所說法或所思法即於其中非諦非妄是故如來說一切法皆是佛法善現一切法一切法者如來說非一切法是故如來說名一切法一切法佛告善現譬如士夫具身大身具壽善現即白佛言世尊如來所說士夫具身大身如來說為非身是故說名具身大身佛言善現如是如是若諸菩薩作如是言我當滅度無量有情是則不應說名菩薩何以故善現頗有少法名菩薩不善現答言不也世尊無有少法名為菩薩佛告善現有情有情者如來說非有情故名有情是故如來說一切法無有有情无有命者無有士夫无有補特伽羅等善現若諸菩薩作如是言我當成辦佛土功德莊嚴亦如是說何以故善現佛土功德莊嚴佛土功德莊嚴者如來說非莊嚴是故如來說名佛土功德莊嚴佛土功德莊嚴善現若諸菩薩於無我法無我法深信解者如來應正等覺說為菩薩菩薩。</p><p>佛告善現於汝意云何如來等現有肉眼不善現答言如是世尊如來等現有肉眼佛言善現於汝意云何如來等現有天眼不善現答言如是世尊如來等現有天眼佛言善現於汝意云何如來等現有慧眼不善現答言如是世尊如來等現有慧眼佛言善現於汝意云何如來等現有法眼不善現答言如是世尊如來等現有法眼佛言善現於汝意云何如來等現有佛眼不善現答言如是世尊如來等現有佛眼。</p><p>佛告善現於汝意云何乃至殑伽河中所有諸沙如來說是沙不善現答言如是世尊如是善逝如來說是沙。</p><p>佛言善現於汝意云何乃至殑伽河中所有沙數假使有如是等殑伽河乃至是諸殑伽河中所有沙數假使有如是等世界是諸世界寧為多不善現答言如是世尊如是善逝是諸世界其數甚多佛言善現乃至尒所諸世界中所有有情彼諸有情各有種種其心流注我悉能知何以故善現心流注心流注者如來說非流注是故如來說名心流注心流注所以者何善現過去心不可得未來心不可得現在心不可得。</p><p>佛告善現於汝意云何若善男子或善女人以此三千大千世界盛滿七寶奉施如來應正等覺是善男子或善女人由是因緣所生福聚寧為多不善現答言甚多世尊甚多善逝佛言善現如是如是彼善男子或善女人由此因緣所生福聚其量甚多何以故善現若有福聚如來不說福聚福聚。</p><p>佛告善現於汝意云何可以色身圓實觀如來不善現答言不也世尊不可以色身圓實觀於如來何以故世尊色身圓實色身圓實者如來說非圓實是故如來說名色身圓實色身圓實。</p><p>佛告善現於汝意云何可以諸相具足觀如來不善現答言不也世尊不可以諸相具足觀於如來何以故世尊諸相具足諸相具足者如來說為非相具足是故如來說名諸相具足諸相具足。</p><p>佛告善現於汝意云何如來頗作是念我當有所說法耶善現汝今勿當作如是觀何以故善現若言如來有所說法即為謗我為非善取何以故善現說法說法者無法可說是名說法。</p><p>尒時具壽善現白佛言世尊於當來世後時後分後五百歲正法將滅時分轉時頗有有情聞說如是色類法已能深信不佛言善現彼非有情非不有情何以故善現一切有情者如來說非有情故名一切有情。</p><p>佛告善現於汝意云何頗有少法如來應正等覺現證無上正等菩提耶具壽善現白佛言世尊如我解佛所說義者無有少法如來應正等覺現證無上正等菩提佛言善現如是如是於中少法無有無得故名無上正等菩提復次善現是法平等於其中間無不平等故名無上正等菩提以無我性無有情性無命者性無士夫性無補特伽羅等性平等故名無上正等菩提一切善法無不現證一切善法無不妙覺善現善法善法者如來一切說為非法是故如來說名善法善法。</p><p>復次善現若善男子或善女人集七寶聚量等三千大千世界其中所有妙高山王持用布施若善男子或善女人於此般若波羅蜜多經中乃至四句伽他受持讀誦究竟通利及廣為他宣說開示如理作意善現前說福聚於此福聚百分計之所不能及如是千分若百千分若俱𦙁百千分若俱𦙁𨚗𢈔多百千分若數分若計分若筭分若喻分若鄔波尼煞曇分亦不能及。</p><p>佛告善現於意云何如來頗作是念我當度脫諸有情耶善現汝今勿當作如是觀何以故善現無少有情如來度者善現若有有情如來度者如來即應有其我執有有情執有命者執有士夫執有補特伽羅等執善現我等執者如來說為非執故名我等執而諸愚夫異生強有此執善現愚夫異生者如來說為非生故名愚夫異生。</p><p>佛告善現於汝意云何可以諸相具足觀如來不善現答言如我解佛所說義者不應以諸相具足觀於如來。</p><p>佛言善現善哉善哉如是如是如汝所說不應以諸相具足觀於如來善現若以諸相具足觀如來者轉輪聖王應是如來是故不應以諸相具足觀於如來如是應以諸相非相觀於如來尒時世尊而說頌曰。</p><p>諸以色觀我　以音聲尋我　彼生履邪断不能當見我　應觀佛法性　即導師法身法性非所識　故彼不能了<br>佛告善現於汝意云何如來應正等覺以諸相具足現證無上正等覺耶善現汝今勿當作如是觀何以故善現如來應正等覺不以諸相具足現證無上正等菩提。</p><p>復次善現如是發趣菩薩乘者頗施設少法若壞若断耶善現汝今勿當作如是觀諸有發趣菩薩乘者終不施設少法若壞若断。</p><p>復次善現若善男子或善女人以殑伽河沙等世界盛滿七寶奉施如來應正等覺若有菩薩於諸無我無生法中獲得堪忍由是因緣所生福聚甚多於彼。</p><p>復次善現菩薩不應攝受福聚具壽善現即白佛言世尊云何菩薩不應攝受福聚佛言善現所應攝受不應攝受是故說名所應攝受。</p><p>復次善現若有說言如來若去若來若住若坐若臥是人不解我所說義何以故善現言如來者即是真實真如增語都無所去無所從來故名如來應正等覺。</p><p>復次善現若善男子或善女人乃至三千大千世界大地極微塵量等世界即以如是無數世界色像為墨如極微聚善現於汝意云何是極微聚寧為多不善現答言是極微聚甚多世尊甚多善逝何以故世尊若極微聚是實有者佛不應說為極微聚所以者何如來說極微聚即為非聚故名極微聚如來說三千大千世界即非世界故名三千大千世界何以故世尊若世界是實有者即為一合執如來說一合執即為非執故名一合執佛言善現此一合執不可言說不可戲論然彼一切愚夫異生強執是法何以故善現若作是言如來宣說我見有情見命者見士夫見補特伽羅見意生見摩納婆見作者見受者見於汝意云何如是所說為正語不善現答言不也世尊不也善逝如是所說非為正語所以者何如來所說我見有情見命者見士夫見補特伽羅見意生見摩納婆見作者見受者見即為非見故名我見乃至受者見。</p><p>佛告善現諸有發趣菩薩乘者於一切法應如是知應如是見應如是信解如是不住法想何以故善現法想法想者如來說為非想是故如來說名法想法想。</p><p>復次善現若菩薩摩訶薩以無量无數世界盛滿七寶奉施如來應正等覺若善男子或善女人於此般若波羅蜜多經中乃至四句伽他受持讀誦究竟通利如理作意及廣為他宣說開示由此因緣所生福聚甚多於前無量無數云何為他宣說開示如不為他宣說開示故名為他宣說開示尒時世尊而說頌曰。</p><p>諸和合所為　如星翳燈幻　露泡夢電雲應作如是觀<br>時薄伽梵說是經已尊者善現及諸苾蒭苾蒭尼鄔波索迦鄔波斯迦并諸世間天人阿素洛健達縛等聞薄伽梵所說經已皆大歡喜信受奉行。</p><h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ol><li><a href="http://cbetaonline.dila.edu.tw/zh/T0235_001" target="_blank" rel="noopener">T0235 金剛般若波羅蜜經 - CBETA</a></li><li><a href="http://cbetaonline.dila.edu.tw/zh/K0016_001" target="_blank" rel="noopener">K0016 能斷金剛般若波羅蜜多經 - CBETA</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;姚秦天竺三藏鳩摩羅什譯本&quot;&gt;&lt;a href=&quot;#姚秦天竺三藏鳩摩羅什譯本&quot; class=&quot;headerlink&quot; title=&quot;姚秦天竺三藏鳩摩羅什譯本&quot;&gt;&lt;/a&gt;姚秦天竺三藏鳩摩羅什譯本&lt;/h2&gt;&lt;p&gt;如是我聞：&lt;br&gt;一時，佛在舍衛國祇樹給孤獨園，與大比丘眾千
      
    
    </summary>
    
      <category term="philosophy" scheme="https://linlshare.github.io/categories/philosophy/"/>
    
    
      <category term="Philosophy" scheme="https://linlshare.github.io/tags/Philosophy/"/>
    
      <category term="佛經" scheme="https://linlshare.github.io/tags/%E4%BD%9B%E7%B6%93/"/>
    
  </entry>
  
  <entry>
    <title>复合任务及其状态</title>
    <link href="https://linlshare.github.io/2018/12/24/it/concept/%E5%A4%8D%E5%90%88%E4%BB%BB%E5%8A%A1%E5%8F%8A%E5%85%B6%E7%8A%B6%E6%80%81/"/>
    <id>https://linlshare.github.io/2018/12/24/it/concept/复合任务及其状态/</id>
    <published>2018-12-24T09:49:56.000Z</published>
    <updated>2018-12-24T14:28:06.455Z</updated>
    
    <content type="html"><![CDATA[<p>在代码设计字段时我们经常会碰到需要加状态字段的场景。状态即此刻的情况、形态。从一个状态到另个状态是质变，而质变是由量变累积而成，譬如年老的状态，是时间累积、内分泌系统渐衰，而从年轻到年老的质变。代码中的状态字段亦复如是。</p><p><strong>原子任务</strong>的状态转移是单一操作的，该任务只有 TODO 和 DONE 两种状态，该任务无法被部分完成，只能整体完成或没完成。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Task</span></span>&#123;</span><br><span class="line">    <span class="comment">// 状态可取值：["TODO","DONE"]</span></span><br><span class="line">    <span class="keyword">private</span> String status;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然而现实世界中的任务大多是复合任务，据我所知有以下几种简单复合方式：</p><ol><li>多个平行原子任务复合，且称之为<strong>平行复合任务</strong>；</li><li>多个链状原子任务复合，且称之为<strong>链状复合任务</strong>；</li><li>多个树状原子任务复合，且称之为<strong>树状复合任务</strong>；</li></ol><p>上面复合方式还可以嵌套，产生更复杂的复合方式，即<strong>多重复合</strong>。</p><p>这时，我们面临一个挑战，我们该如何定义这些复合任务的状态呢？</p><p>我们说是量的积累导致了状态的质变，那么可不可以从过程量入手呢？</p><p>答案是明确的，我认为这应该是绝妙而又充满哲学意味的手段。现以最简单的平行复合任务为例，试编码如下：</p><p>（1）首先我们需要一个计数器，用来统计总数和已完成的任务数量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Counter</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> total;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> done;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTotal</span><span class="params">(<span class="keyword">int</span> total)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.total = total;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">increaseTotal</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.total ++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">increaseDone</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.done ++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">totallyDone</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> total == done;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（2）再者，我们在复合任务内部刷新状态，每当一个子任务完成时检查并刷新内部状态。这样，<strong>状态的刷新就内聚了，外部量变，内部质变</strong>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CompoundTask</span></span>&#123;</span><br><span class="line">    <span class="comment">// 状态可取值：["TODO", "DONE", "PARTIALLY_DONE"]</span></span><br><span class="line">    <span class="keyword">private</span> String status = <span class="string">"TODO"</span>;</span><br><span class="line">    <span class="keyword">private</span> Counter counter = <span class="keyword">new</span> Counter();</span><br><span class="line">    <span class="keyword">private</span> List&lt;Task&gt; tasks = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addTask</span><span class="params">(Task task)</span></span>&#123;</span><br><span class="line">        tasks.add(task);</span><br><span class="line">        counter.increaseTotal();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">increaseTaskDone</span><span class="params">()</span></span>&#123;</span><br><span class="line">        counter.increaseDone();</span><br><span class="line">        refreshStatus();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">refreshStatus</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(counter.totallyDone())&#123;</span><br><span class="line">            status = <span class="string">"DONE"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">status = <span class="string">"PARTIALLY_DONE"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上是基础实现，旨在探求一种通用的描述复合任务状态的解决方案。多重复合任务可以通过同类归并压平成一个计数器，不同类的任务建议使用不同的计数器。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在代码设计字段时我们经常会碰到需要加状态字段的场景。状态即此刻的情况、形态。从一个状态到另个状态是质变，而质变是由量变累积而成，譬如年老的状态，是时间累积、内分泌系统渐衰，而从年轻到年老的质变。代码中的状态字段亦复如是。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原子任务&lt;/stron
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="concept" scheme="https://linlshare.github.io/categories/it/concept/"/>
    
    
      <category term="复合任务" scheme="https://linlshare.github.io/tags/%E5%A4%8D%E5%90%88%E4%BB%BB%E5%8A%A1/"/>
    
      <category term="状态" scheme="https://linlshare.github.io/tags/%E7%8A%B6%E6%80%81/"/>
    
  </entry>
  
  <entry>
    <title>Proxy</title>
    <link href="https://linlshare.github.io/2018/12/20/it/robot/Proxy/"/>
    <id>https://linlshare.github.io/2018/12/20/it/robot/Proxy/</id>
    <published>2018-12-20T08:33:35.000Z</published>
    <updated>2018-12-21T02:22:12.836Z</updated>
    
    <content type="html"><![CDATA[<h2 id="代理（Proxy）"><a href="#代理（Proxy）" class="headerlink" title="代理（Proxy）"></a>代理（Proxy）</h2><p>代理是一种提供客户端与服务器进行非直接链接的服务。提供代理服务的服务器称之为<strong>代理服务器</strong>（Proxy Server）。而持有资源实体的服务器称之为<strong>源服务器</strong>。</p><h2 id="代理服务器分类"><a href="#代理服务器分类" class="headerlink" title="代理服务器分类"></a>代理服务器分类</h2><h3 id="按代理协议"><a href="#按代理协议" class="headerlink" title="按代理协议"></a>按代理协议</h3><ul><li>HTTP 代理：应用层协议代理，支持访问未加密站点</li><li>SOCKS 4/5 代理：会话层协议代理，SOCKS 5 支持所有底层使用 TCP 和 UDP 的网络应用代理，SOCKS 4 仅支持 TCP 代理。另外 SOCKS 5 还支持 IPv6。</li><li>TLS / SSL 代理：应用层协议代理，支持访问加密站点</li><li>POP3 / SMTP 代理：邮件服务代理</li><li>FTP 代理：文件传输代理</li><li>…</li></ul><h3 id="按匿名程度"><a href="#按匿名程度" class="headerlink" title="按匿名程度"></a>按匿名程度</h3><p>以下四种代理的区别是由于代理服务器配置的 <code>REMOTE_ADDR</code>、<code>HTTP_VIA</code> 和 <code>HTTP_X_FORWARDED_FOR</code> 值不同导致。当没有使用代理时仅  <code>REMOTE_ADDR</code> 是有值的。</p><ul><li><p>高度匿名代理（Elite proxy或High Anonymity Proxy）</p><p>高匿代理其实就是修改请求头，将 <code>HTTP_VIA</code> 与 <code>HTTP_X_FORWARDED_FOR</code> 属性删除，服务器由此误认为客户端没有使用代理。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">REMOTE_ADDR = Proxy IP</span><br><span class="line">HTTP_VIA = not determined</span><br><span class="line">HTTP_X_FORWARDED_FOR = not determined</span><br></pre></td></tr></table></figure></li><li><p>匿名代理（Anonymous Proxy）</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">REMOTE_ADDR = proxy IP</span><br><span class="line">HTTP_VIA = proxy IP</span><br><span class="line">HTTP_X_FORWARDED_FOR = proxy IP</span><br></pre></td></tr></table></figure></li><li><p>透明代理（Transparent Proxy）</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">REMOTE_ADDR = Proxy IP</span><br><span class="line">HTTP_VIA = Proxy IP</span><br><span class="line">HTTP_X_FORWARDED_FOR = Your IP</span><br></pre></td></tr></table></figure></li><li><p>混淆代理（Distorting Proxy）</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">REMOTE_ADDR = Proxy IP</span><br><span class="line">HTTP_VIA = Proxy IP</span><br><span class="line">HTTP_X_FORWARDED_FOR = Random IP address</span><br></pre></td></tr></table></figure></li></ul><p>安全性上：高匿 &gt; 混淆 &gt; 匿名 &gt; 透明。</p><h2 id="抓包工具"><a href="#抓包工具" class="headerlink" title="抓包工具"></a>抓包工具</h2><h3 id="Charles"><a href="#Charles" class="headerlink" title="Charles"></a>Charles</h3><h4 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h4><ol><li>安装 JDK 环境；</li><li>前往<a href="https://www.charlesproxy.com/download/" target="_blank" rel="noopener">官网</a>下载安装适合操作系统的 Charles；</li><li>如系统使用了 VPN 等软件，先暂时关闭。</li></ol><h4 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h4><ol><li><p>启用 HTTP 代理</p><p>在菜单栏选择 <code>Proxy -&gt; Mac OS X Proxy</code> 启动 HTTP 代理，如无效，可以直接打开 <code>系统偏好设置 -&gt; 网络 -&gt; 进阶 -&gt; 代理服务器</code>，然后设置为 <code>127.0.0.1:8888</code> 即可。</p></li><li><p>启用 SSL 代理</p><ul><li>在菜单栏选择 <code>Help -&gt; SSL Proxying -&gt; Install Charles Root Certificate</code> 然后在系统的<strong>钥匙串访问</strong>中，<strong>双击这个证书</strong>，然后展开<strong>信任</strong>一栏，在 SSL 一栏选择<strong>始终信任</strong>；</li><li>然后在 <code>Proxy -&gt; SSL Proxying Settings -&gt; add</code> 添加 Host 为 <code>*</code>，Port 为 <code>443</code>，这样就可以针对所有站点进行 SSL 代理了。 </li></ul></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://zh.wikipedia.org/wiki/%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8" target="_blank" rel="noopener">代理服务器 - 维基百科</a></li><li><a href="http://gohom.win/2016/01/20/proxy-type/" target="_blank" rel="noopener">proxy代理类型:透明代理 匿名代理 混淆代理和高匿代理 - gohom.win</a></li><li><a href="https://www.cnblogs.com/sanler/p/7250660.html" target="_blank" rel="noopener">透明代理和匿名代理的区别 - cnblogs.com</a></li><li><a href="https://www.cnblogs.com/season-huang/p/6269841.html" target="_blank" rel="noopener">Mac下使用charles遇到的问题以及解决办法 - cnblogs.com</a></li><li><a href="https://blog.devtang.com/2015/11/14/charles-introduction/" target="_blank" rel="noopener">Charles 从入门到精通 - devtang.com</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;代理（Proxy）&quot;&gt;&lt;a href=&quot;#代理（Proxy）&quot; class=&quot;headerlink&quot; title=&quot;代理（Proxy）&quot;&gt;&lt;/a&gt;代理（Proxy）&lt;/h2&gt;&lt;p&gt;代理是一种提供客户端与服务器进行非直接链接的服务。提供代理服务的服务器称之为&lt;str
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="robot" scheme="https://linlshare.github.io/categories/it/robot/"/>
    
    
      <category term="Proxy" scheme="https://linlshare.github.io/tags/Proxy/"/>
    
      <category term="Charles" scheme="https://linlshare.github.io/tags/Charles/"/>
    
  </entry>
  
  <entry>
    <title>Beatles</title>
    <link href="https://linlshare.github.io/2018/12/19/music/Beatles/"/>
    <id>https://linlshare.github.io/2018/12/19/music/Beatles/</id>
    <published>2018-12-19T13:44:42.000Z</published>
    <updated>2018-12-21T13:04:24.045Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>KEY</th><th>VALUE</th></tr></thead><tbody><tr><td>原名</td><td>The Beatles</td></tr><tr><td>译名</td><td>甲壳虫乐队 \</td><td>披头士乐队（大陆）、披頭四樂團（台灣）、披頭士樂隊 \</td><td>狂人樂隊（港澳）</td></tr><tr><td>出生地</td><td>英国英格兰利物浦</td></tr><tr><td>活跃年代</td><td>1960年–1970年</td></tr><tr><td>风格</td><td>摇滚、流行、民谣</td></tr><tr><td>成员</td><td>约翰·列侬（John Lennon）、保罗·麦卡特尼（Paul McCartney）、乔治·哈里森（George Harrison）和林戈·斯塔尔（Ringo Starr）</td></tr><tr><td>代表专辑</td><td>《Rubber Soul》（1965）、《Revolver》（1966）、《Sgt. Pepper’s Lonely Hearts Club Band》（1967）、《The Beatles (White Album)》（1968）以及《Abbey Road》（1969）</td></tr><tr><td>流行单曲</td><td>《Yesterday》、《Let it be》、《Hey Jude》、《Something》、《Blackbird》、《A Day in the Life》、《Come Together》、《Here Comes the Sun》 等等</td></tr><tr><td>影响力</td><td>披头士是史上最畅销的乐队，全球总销售量估算为6亿到10亿间。2004年，《滚石杂志》把披头士列历史上最伟大的艺人。2008年，披头士在《公告牌》的“史上最成功音乐人Hot 100”榜单上登顶。</td></tr></tbody></table><h2 id="作品目录（原版英国录音室专辑）"><a href="#作品目录（原版英国录音室专辑）" class="headerlink" title="作品目录（原版英国录音室专辑）"></a>作品目录（原版英国录音室专辑）</h2><ul><li>《Please Please Me》（1963年3月22日）</li><li>《With the Beatles》（1963年11月22日）</li><li>《A Hard Day’s Night》（1964年7月10日）</li><li>《Beatles for Sale》（1964年12月4日）</li><li>《Help!》（1965年8月6日）</li><li>《Rubber Soul》（1965年12月3日）</li><li>《Revolver》（1966年8月5日）</li><li>《Sgt. Pepper’s Lonely Hearts Club Band》（1967年6月1日）</li><li>《The Beatles》（1968年11月22日）</li><li>《Yellow Submarine》（1969年1月17日）</li><li>《Abbey Road》（1969年9月26日）</li><li>《Let It Be》（1970年5月8日）</li></ul><h3 id="《Rubber-Soul》"><a href="#《Rubber-Soul》" class="headerlink" title="《Rubber Soul》"></a>《Rubber Soul》</h3><h4 id="In-My-Life"><a href="#In-My-Life" class="headerlink" title="In My Life"></a>In My Life</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[Verse 1]</span><br><span class="line">There are places I&apos;ll remember</span><br><span class="line">All my life though some have changed</span><br><span class="line">Some forever not for better</span><br><span class="line">Some have gone and some remain</span><br><span class="line">All these places had their moments</span><br><span class="line">With lovers and friends I still can recall</span><br><span class="line">Some are dead and some are living</span><br><span class="line">In my life I&apos;ve loved them all</span><br><span class="line"></span><br><span class="line">[Verse 2]</span><br><span class="line">But of all these friends and lovers</span><br><span class="line">There is no one compares with you</span><br><span class="line">And these memories lose their meaning</span><br><span class="line">When I think of love as something new</span><br><span class="line">Though I know I&apos;ll never lose affection</span><br><span class="line">For people and things that went before</span><br><span class="line">I know I&apos;ll often stop and think about them</span><br><span class="line">In my life I love you more</span><br><span class="line"></span><br><span class="line">[Piano Solo]</span><br><span class="line"></span><br><span class="line">[Verse 3]</span><br><span class="line">Though I know I&apos;ll never lose affection</span><br><span class="line">For people and things that went before</span><br><span class="line">I know I&apos;ll often stop and think about them</span><br><span class="line">In my life I love you more</span><br><span class="line"></span><br><span class="line">In my life I love you more</span><br></pre></td></tr></table></figure><h3 id="《Revolver》"><a href="#《Revolver》" class="headerlink" title="《Revolver》"></a>《Revolver》</h3><h4 id="Yellow-Submarine"><a href="#Yellow-Submarine" class="headerlink" title="Yellow Submarine"></a>Yellow Submarine</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">[Verse 1]</span><br><span class="line">In the town where I was born</span><br><span class="line">Lived a man who sailed to sea</span><br><span class="line">And he told us of his life</span><br><span class="line">In the land of submarines</span><br><span class="line"></span><br><span class="line">[Verse 2]</span><br><span class="line">So we sailed up to the sun</span><br><span class="line">Till we found the sea of green</span><br><span class="line">And we lived beneath the waves</span><br><span class="line">In our yellow submarine</span><br><span class="line"></span><br><span class="line">[Chorus]</span><br><span class="line">We all live in a yellow submarine</span><br><span class="line">Yellow submarine, yellow submarine</span><br><span class="line">We all live in a yellow submarine</span><br><span class="line">Yellow submarine, yellow submarine</span><br><span class="line"></span><br><span class="line">[Verse 3]</span><br><span class="line">And our friends are all aboard</span><br><span class="line">Many more of them live next door</span><br><span class="line">And the band begins to play</span><br><span class="line"></span><br><span class="line">[Chorus]</span><br><span class="line">We all live in a yellow submarine</span><br><span class="line">Yellow submarine, yellow submarine</span><br><span class="line">We all live in a yellow submarine</span><br><span class="line">Yellow submarine, yellow submarine</span><br><span class="line"></span><br><span class="line">[Bridge]</span><br><span class="line">Full speed ahead, Mr. Parker, full speed ahead</span><br><span class="line">Full speed over here, sir</span><br><span class="line">Action station, action station</span><br><span class="line">Aye, aye, sir, fire</span><br><span class="line">Heaven, heaven</span><br><span class="line"></span><br><span class="line">[Verse 4]</span><br><span class="line">As we live a life of ease</span><br><span class="line">Everyone of us has all we need (has all we need)</span><br><span class="line">Sky of blue (sky of blue) and sea of green (and sea of green)</span><br><span class="line">In our (In our) yellow submarine (yellow submarine, ha-ha!)</span><br><span class="line"></span><br><span class="line">[Chorus]</span><br><span class="line">We all live in a yellow submarine</span><br><span class="line">Yellow submarine, yellow submarine</span><br><span class="line">We all live in a yellow submarine</span><br><span class="line">Yellow submarine, yellow submarine</span><br><span class="line">We all live in a yellow submarine</span><br><span class="line">Yellow submarine, yellow submarine</span><br><span class="line">We all live in a yellow submarine</span><br><span class="line">Yellow submarine, yellow submarine</span><br></pre></td></tr></table></figure><h3 id="《Abbey-Road》"><a href="#《Abbey-Road》" class="headerlink" title="《Abbey Road》"></a>《Abbey Road》</h3><h4 id="Come-Together"><a href="#Come-Together" class="headerlink" title="Come Together"></a>Come Together</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">[Intro: John Lennon]</span><br><span class="line">Shoot me, shoot me, shoot me, shoot me</span><br><span class="line"></span><br><span class="line">[Verse 1: John Lennon]</span><br><span class="line">Here come old flat-top, he come groovin&apos; up slowly</span><br><span class="line">He got ju-ju eyeballs, he one holy roller</span><br><span class="line">He got hair down to his knee</span><br><span class="line">Got to be a joker, he just do what he please</span><br><span class="line"></span><br><span class="line">[Interlude: John Lennon]</span><br><span class="line">Shoot me, shoot me, shoot me, shoot me</span><br><span class="line"></span><br><span class="line">[Verse 2: John Lennon]</span><br><span class="line">He wear no shoeshine, he got toe-jam football</span><br><span class="line">He got monkey finger, he shoot Coca-Cola</span><br><span class="line">He say, &quot;I know you, you know me&quot;</span><br><span class="line">One thing I can tell you is you got to be free</span><br><span class="line"></span><br><span class="line">[Chorus: John Lennon]</span><br><span class="line">Come together, right now</span><br><span class="line">Over me</span><br><span class="line"></span><br><span class="line">[Verse 3: John Lennon]</span><br><span class="line">He bag production, he got walrus gumboot</span><br><span class="line">He got Ono sideboard, he one spinal cracker</span><br><span class="line">He got feet down below his knee</span><br><span class="line">Hold you in his armchair, you can feel his disease</span><br><span class="line"></span><br><span class="line">[Chorus: John Lennon]</span><br><span class="line">Come together, right now</span><br><span class="line">Over me</span><br><span class="line"></span><br><span class="line">[Interlude: John Lennon]</span><br><span class="line">Shoot me, shoot me</span><br><span class="line">Right!</span><br><span class="line"></span><br><span class="line">[Guitar Solo]</span><br><span class="line"></span><br><span class="line">[Verse 4: John Lennon]</span><br><span class="line">He roller-coaster, he got early warnin&apos;</span><br><span class="line">He got muddy water, he one mojo filter</span><br><span class="line">He say, &quot;One and one and one is three&quot;</span><br><span class="line">Got to be good-lookin&apos; &apos;cause he&apos;s so hard to see</span><br><span class="line"></span><br><span class="line">[Chorus: John Lennon]</span><br><span class="line">Come together, right now</span><br><span class="line">Over me</span><br><span class="line"></span><br><span class="line">[Interlude: John Lennon]</span><br><span class="line">Shoot me, shoot me, shoot me, shoot me</span><br><span class="line">Ugh!</span><br><span class="line"></span><br><span class="line">[Outro: John Lennon]</span><br><span class="line">Come together, yeah</span><br><span class="line">Come together, yeah</span><br><span class="line">Come together, yeah</span><br><span class="line">Come together, yeah</span><br><span class="line">Come together, yeah</span><br><span class="line">Come together, yeah</span><br><span class="line">Come together, yeah</span><br><span class="line">Come together, yeah</span><br><span class="line">[Fade-out]</span><br><span class="line">Come together, yeah</span><br><span class="line">Come together...</span><br></pre></td></tr></table></figure><h4 id="Something"><a href="#Something" class="headerlink" title="Something"></a>Something</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[Verse 1]</span><br><span class="line">Something in the way she moves</span><br><span class="line">Attracts me like no other lover</span><br><span class="line">Something in the way she woos me</span><br><span class="line">I don&apos;t want to leave her now</span><br><span class="line">You know I believe and how</span><br><span class="line"></span><br><span class="line">[Verse 2]</span><br><span class="line">Somewhere in her smile she knows</span><br><span class="line">That I don&apos;t need no other lover</span><br><span class="line">Something in her style that shows me</span><br><span class="line">I don&apos;t want to leave her now</span><br><span class="line">You know I believe and how</span><br><span class="line"></span><br><span class="line">[Bridge]</span><br><span class="line">You&apos;re asking me will my love grow</span><br><span class="line">I don&apos;t know, I don&apos;t know</span><br><span class="line">You stick around and it may show</span><br><span class="line">I don&apos;t know, I don&apos;t know</span><br><span class="line"></span><br><span class="line">[Solo]</span><br><span class="line"></span><br><span class="line">[Verse 3]</span><br><span class="line">Something in the way she knows</span><br><span class="line">And all I have to do is think of her</span><br><span class="line">Something in the things she shows me</span><br><span class="line">I don&apos;t want to leave her now</span><br><span class="line">You know I believe and how</span><br></pre></td></tr></table></figure><h4 id="Here-Comes-the-Sun"><a href="#Here-Comes-the-Sun" class="headerlink" title="Here Comes the Sun"></a>Here Comes the Sun</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[Intro]</span><br><span class="line">Here comes the sun (doo doo doo doo)</span><br><span class="line">Here comes the sun, and I say</span><br><span class="line">It&apos;s all right</span><br><span class="line"></span><br><span class="line">[Verse 1]</span><br><span class="line">Little darling, it&apos;s been a long cold lonely winter</span><br><span class="line">Little darling, it feels like years since it&apos;s been here</span><br><span class="line">Here comes the sun</span><br><span class="line">Here comes the sun, and I say</span><br><span class="line">It&apos;s all right</span><br><span class="line"></span><br><span class="line">[Verse 2]</span><br><span class="line">Little darling, the smiles returning to the faces</span><br><span class="line">Little darling, it seems like years since it&apos;s been here</span><br><span class="line">Here comes the sun</span><br><span class="line">Here comes the sun, and I say</span><br><span class="line">It&apos;s all right</span><br><span class="line"></span><br><span class="line">[Bridge]</span><br><span class="line">Sun, sun, sun, here it comes</span><br><span class="line">Sun, sun, sun, here it comes</span><br><span class="line">Sun, sun, sun, here it comes</span><br><span class="line">Sun, sun, sun, here it comes</span><br><span class="line">Sun, sun, sun, here it comes</span><br><span class="line"></span><br><span class="line">[Verse 3]</span><br><span class="line">Little darling, I feel that ice is slowly melting</span><br><span class="line">Little darling, it seems like years since it&apos;s been clear</span><br><span class="line">Here comes the sun</span><br><span class="line">Here comes the sun, and I say</span><br><span class="line">It&apos;s all right</span><br><span class="line"></span><br><span class="line">[Outro]</span><br><span class="line">Here comes the sun</span><br><span class="line">Here comes the sun</span><br><span class="line">It&apos;s all right</span><br><span class="line">It&apos;s all right</span><br></pre></td></tr></table></figure><h3 id="《Let-It-Be》"><a href="#《Let-It-Be》" class="headerlink" title="《Let It Be》"></a>《Let It Be》</h3><h4 id="Across-the-Universe"><a href="#Across-the-Universe" class="headerlink" title="Across the Universe"></a>Across the Universe</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">[Verse 1: John Lennon]</span><br><span class="line">Words are flowing out like endless rain into a paper cup</span><br><span class="line">They slither while they pass, they slip away across the universe</span><br><span class="line">Pools of sorrow, waves of joy are drifting through my opened mind</span><br><span class="line">Possessing and caressing me</span><br><span class="line"></span><br><span class="line">[Chorus: John Lennon]</span><br><span class="line">Jai Guru Deva, Om</span><br><span class="line">Nothing&apos;s going to change my world</span><br><span class="line">Nothing&apos;s going to change my world</span><br><span class="line">Nothing&apos;s going to change my world</span><br><span class="line">Nothing&apos;s going to change my world</span><br><span class="line"></span><br><span class="line">[Verse 2: John Lennon]</span><br><span class="line">Images of broken light which dance before me like a million eyes</span><br><span class="line">They call me on and on across the universe</span><br><span class="line">Thoughts meander like a restless wind inside a letter box</span><br><span class="line">They tumble blindly as they make their way across the universe</span><br><span class="line"></span><br><span class="line">[Chorus: John Lennon]</span><br><span class="line">Jai Guru Deva, Om</span><br><span class="line">Nothing&apos;s going to change my world</span><br><span class="line">Nothing&apos;s going to change my world</span><br><span class="line">Nothing&apos;s going to change my world</span><br><span class="line">Nothing&apos;s going to change my world</span><br><span class="line"></span><br><span class="line">[Verse 3: John Lennon]</span><br><span class="line">Sounds of laughter, shades of life are ringing through my open ears</span><br><span class="line">Inciting and inviting me</span><br><span class="line">Limitless undying love which shines around me like a million suns</span><br><span class="line">It calls me on and on, across the universe</span><br><span class="line"></span><br><span class="line">[Chorus: John Lennon]</span><br><span class="line">Jai Guru Deva, Om</span><br><span class="line">Nothing&apos;s going to change my world</span><br><span class="line">Nothing&apos;s going to change my world</span><br><span class="line">Nothing&apos;s going to change my world</span><br><span class="line">Nothing&apos;s going to change my world</span><br><span class="line"></span><br><span class="line">[Outro: John Lennon]</span><br><span class="line">Jai Guru Deva</span><br><span class="line">Jai Guru Deva</span><br><span class="line">Jai Guru Deva</span><br><span class="line">Jai Guru Deva</span><br><span class="line">Jai Guru Deva</span><br><span class="line">Jai Guru Deva</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://zh.wikipedia.org/wiki/%E6%8A%AB%E9%A0%AD%E5%9B%9B%E6%A8%82%E9%9A%8A" target="_blank" rel="noopener">披头士乐队 - 维基百科</a></li><li><a href="https://music.youtube.com/browse/UC2XdaAVUannpujzv32jcouQ" target="_blank" rel="noopener">The Beatles - YouTube Music</a></li><li><a href="https://genius.com/artists/The-beatles" target="_blank" rel="noopener">The Beatles - genius.com</a></li><li><a href="http://digitalk7.com/mus/Pop/Beatles/" target="_blank" rel="noopener">The Beatles complete and original digital discography in stereo - digitalk7.com</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;KEY&lt;/th&gt;
&lt;th&gt;VALUE&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;原名&lt;/td&gt;
&lt;td&gt;The Beatles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;译名&lt;/td&gt;
&lt;td&gt;甲壳虫
      
    
    </summary>
    
      <category term="music" scheme="https://linlshare.github.io/categories/music/"/>
    
    
      <category term="Music" scheme="https://linlshare.github.io/tags/Music/"/>
    
      <category term="Beatles" scheme="https://linlshare.github.io/tags/Beatles/"/>
    
  </entry>
  
  <entry>
    <title>Port</title>
    <link href="https://linlshare.github.io/2018/12/19/it/net/Port/"/>
    <id>https://linlshare.github.io/2018/12/19/it/net/Port/</id>
    <published>2018-12-19T02:33:02.000Z</published>
    <updated>2018-12-19T02:54:28.656Z</updated>
    
    <content type="html"><![CDATA[<h2 id="端口的概念"><a href="#端口的概念" class="headerlink" title="端口的概念"></a>端口的概念</h2><p>端口有两种含义需要仔细区分：</p><ol><li>物理端口，指用于连接其他网络设备的接口，比如 RJ-45端口；</li><li>协议端口，指 TCP/IP 协议中的定义的逻辑端口，用于标识，比如 80 端口。</li></ol><h2 id="协议端口"><a href="#协议端口" class="headerlink" title="协议端口"></a>协议端口</h2><p>TCP/IP 协议中的协议端口用于解决远程主机进程定位的问题。<code>IP + Port</code> 才能真正定位想要访问的远程服务。</p><p>其工作流程如下：</p><ol><li>进程请求主机系统分配端口；</li><li>主机系统分配端口；</li><li>主机收到数据包，根据数据包报文首部的端口号，发送到相应的端口队列；</li><li>进程取用端口队列中的数据包。</li></ol><blockquote><p>端口其实就是队，操作系统为各个进程分配了不同的队，数据包按照目的端口被推入相应的队中，等待被进程取用，在极特殊的情况下，这个队也是有可能溢出的，不过操作系统允许各进程指定和调整自己的队的大小。  — <a href="https://baike.baidu.com/item/%E7%AB%AF%E5%8F%A3" target="_blank" rel="noopener">端口 - 百度百科</a></p></blockquote><p>一些常见的端口号：</p><table><thead><tr><th>应用程序</th><th>FTP</th><th>TELNET</th><th>SMTP</th><th>DNS</th><th>TFTP</th><th>HTTP</th><th>HTTPS</th><th>SNMP</th></tr></thead><tbody><tr><td>熟知端口号</td><td><strong>21</strong></td><td>23</td><td>25</td><td>53</td><td>69</td><td><strong>80</strong></td><td><strong>443</strong></td><td>161</td></tr></tbody></table><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://jerryc8080.gitbooks.io/understand-tcp-and-udp/chapter1.html" target="_blank" rel="noopener">理解 TCP 和 UDP - gitbook.com</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;端口的概念&quot;&gt;&lt;a href=&quot;#端口的概念&quot; class=&quot;headerlink&quot; title=&quot;端口的概念&quot;&gt;&lt;/a&gt;端口的概念&lt;/h2&gt;&lt;p&gt;端口有两种含义需要仔细区分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;物理端口，指用于连接其他网络设备的接口，比如 RJ-45端口
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="net" scheme="https://linlshare.github.io/categories/it/net/"/>
    
    
      <category term="Port" scheme="https://linlshare.github.io/tags/Port/"/>
    
      <category term="端口" scheme="https://linlshare.github.io/tags/%E7%AB%AF%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>RESTful API</title>
    <link href="https://linlshare.github.io/2018/12/18/it/design/RESTful%20API/"/>
    <id>https://linlshare.github.io/2018/12/18/it/design/RESTful API/</id>
    <published>2018-12-18T03:24:29.000Z</published>
    <updated>2018-12-18T03:29:50.083Z</updated>
    
    <content type="html"><![CDATA[<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ol><li>API 版本号放入到 URL 中；</li><li>更新信息时仅返回被更新的字段。</li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://www.ruanyifeng.com/blog/2014/05/restful_api.html" target="_blank" rel="noopener">RESTful API 设计指南 - ruanyifeng.com</a></li><li><a href="https://blog.philipphauer.de/restful-api-design-best-practices/" target="_blank" rel="noopener">RESTful API Design. Best Practices in a Nutshell. - philipphauer.de</a></li><li><a href="https://leancloud.cn/docs/rest_api.html" target="_blank" rel="noopener">REST API 使用详解 - leancloud.cn</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;注意&quot;&gt;&lt;a href=&quot;#注意&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;API 版本号放入到 URL 中；&lt;/li&gt;
&lt;li&gt;更新信息时仅返回被更新的字段。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;参考
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="design" scheme="https://linlshare.github.io/categories/it/design/"/>
    
    
      <category term="RESTful" scheme="https://linlshare.github.io/tags/RESTful/"/>
    
      <category term="API" scheme="https://linlshare.github.io/tags/API/"/>
    
  </entry>
  
  <entry>
    <title>Node.js</title>
    <link href="https://linlshare.github.io/2018/12/18/it/node/Node.js/"/>
    <id>https://linlshare.github.io/2018/12/18/it/node/Node.js/</id>
    <published>2018-12-18T01:47:20.000Z</published>
    <updated>2018-12-18T02:10:42.400Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="使用-nvm-安装（可以自由切换-node-版本）"><a href="#使用-nvm-安装（可以自由切换-node-版本）" class="headerlink" title="使用 nvm 安装（可以自由切换 node 版本）"></a>使用 nvm 安装（可以自由切换 node 版本）</h3><p>（1）下载并执行安装脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> curl </span><br><span class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br><span class="line"><span class="meta">#</span> 或者 wget</span><br><span class="line">wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br></pre></td></tr></table></figure><p>（2）下载并使用指定版本的 node.js</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 列出仓库中所有的 node 版本</span><br><span class="line"><span class="meta">$</span> nvm ls-remote</span><br><span class="line"><span class="meta">#</span> 安装指定版本</span><br><span class="line"><span class="meta">$</span> nvm install 8.11.1</span><br><span class="line"><span class="meta">#</span> 使用已安装的某个版本</span><br><span class="line"><span class="meta">$</span> nvm use 8.11.1</span><br><span class="line"><span class="meta">#</span> 查看当前使用的 node 版本</span><br><span class="line"><span class="meta">$</span> nvm -v</span><br></pre></td></tr></table></figure><p>（3）卸载指定版本的 node.js</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 如果要卸载的版本是当前使用的版本，那么需要先停用它</span><br><span class="line"><span class="meta">$</span> nvm deactivate</span><br><span class="line"><span class="meta">$</span> nvm uninstall 8.11.1</span><br></pre></td></tr></table></figure><h2 id="排错"><a href="#排错" class="headerlink" title="排错"></a>排错</h2><h3 id="usr-bin-env-node-No-such-file-or-directory"><a href="#usr-bin-env-node-No-such-file-or-directory" class="headerlink" title="/usr/bin/env: node: No such file or directory"></a>/usr/bin/env: node: No such file or directory</h3><p>（1）背景：执行 <code>npm start</code> 命令时出现上述错误。</p><p>（2）原因：<code>npm</code> 执行时默认使用 <code>/usr/bin/node</code>  去执行，而通过 <code>sudo apt install nodejs</code> 安装的位置是在 <code>/usr/bin/nodejs</code> 。</p><p>（3）解决方案：</p><ul><li><p>方案一：使用<code>nvm</code> 安装 node，并统一管理 node.js 版本，这是最佳方案；</p></li><li><p>方案二：创建 node 执行文件到 <code>/usr/bin/node</code> 的软连接，如 <code>ln -s /usr/local/NODEJS_HOME/bin/node /usr/bin/node</code></p></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-18-04" target="_blank" rel="noopener">How To Install Node.js on Ubuntu 18.04 - digitalocean.com</a></li><li><a href="creationix/nvm - github.com">creationix/nvm - github.com</a></li><li><a href="https://cloud.tencent.com/developer/article/1028166" target="_blank" rel="noopener">【node错误】/usr/bin/env: node: No such file or directory - tencent.com</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;h3 id=&quot;使用-nvm-安装（可以自由切换-node-版本）&quot;&gt;&lt;a href=&quot;#使用-nvm-安装（可以自由切换-node-版本）&quot; c
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="node" scheme="https://linlshare.github.io/categories/it/node/"/>
    
    
      <category term="Node.js" scheme="https://linlshare.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Package &amp; Deploy</title>
    <link href="https://linlshare.github.io/2018/12/15/it/java/base/Package%20&amp;%20Deploy/"/>
    <id>https://linlshare.github.io/2018/12/15/it/java/base/Package &amp; Deploy/</id>
    <published>2018-12-15T06:37:41.000Z</published>
    <updated>2018-12-17T03:27:51.321Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开发测试阶段的打包部署"><a href="#开发测试阶段的打包部署" class="headerlink" title="开发测试阶段的打包部署"></a>开发测试阶段的打包部署</h2><ul><li>[ ] 配置登录远程机器的 SSH config</li><li>[ ] 本地使用 Gradle 或者 Maven 打包</li><li>[ ] 使用 scp 安全拷贝 jar 包到远程机器</li><li>[ ] 使用 <code>sudo apt install openjdk-8-jre-headless</code> 安装 JDK 环境</li><li>[ ] 使用 <code>java -jar</code> 完成部署</li></ul><h2 id="分布式打包部署"><a href="#分布式打包部署" class="headerlink" title="分布式打包部署"></a>分布式打包部署</h2><ul><li>[ ] 部署 docker 环境</li><li>[ ] 在 docker 中部署 etcd</li><li>[ ] 部署 kafka</li><li>[ ] 部署应用服务</li></ul><h2 id="排错"><a href="#排错" class="headerlink" title="排错"></a>排错</h2><h3 id="Can’t-execute-jar-file-“no-main-manifest-attribute”"><a href="#Can’t-execute-jar-file-“no-main-manifest-attribute”" class="headerlink" title="Can’t execute jar- file: “no main manifest attribute”"></a><a href="https://stackoverflow.com/questions/9689793/cant-execute-jar-file-no-main-manifest-attribute" target="_blank" rel="noopener">Can’t execute jar- file: “no main manifest attribute”</a></h3><p>在 Linux 上运行 jar 包时出现无法执行的错误，原来是没有配置主类，解决方案如下：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apply <span class="string">plugin:</span> <span class="string">'java'</span></span><br><span class="line"></span><br><span class="line">jar &#123;</span><br><span class="line">    manifest &#123;</span><br><span class="line">        attributes <span class="string">'Main-Class'</span>: <span class="string">'com.package.app.Class'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打出的包不包含任何第三方依赖"><a href="#打出的包不包含任何第三方依赖" class="headerlink" title="打出的包不包含任何第三方依赖"></a>打出的包不包含任何第三方依赖</h3><p>解压打出来的 jar 包发现里面没有第三方依赖无法运行，这时候有两种解决方案：</p><p>（1）把第三方的 jar 包收集放到一个 class path 目录，然后就可以正常启动了。不过这种方法很笨，因为现在的依赖都是通过 gradle 或者 maven 引入，手动去找这些 jar 包并放到服务器上的 class path 目录，这很费劲，不过好处是打出的包很小，上传很快。</p><p>（2）使用 <a href="https://imperceptiblethoughts.com/shadow/" target="_blank" rel="noopener">shadow</a> 将所有依赖合并成一个 jar 包，这很神奇。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">  repositories &#123;</span><br><span class="line">    maven &#123;</span><br><span class="line">      url <span class="string">"https://plugins.gradle.org/m2/"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  dependencies &#123;</span><br><span class="line">    classpath <span class="string">"com.github.jengelman.gradle.plugins:shadow:4.0.3"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'java'</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">"com.github.johnrengelman.shadow"</span></span><br><span class="line"></span><br><span class="line">shadowJar &#123;</span><br><span class="line">  manifest &#123;</span><br><span class="line">    attributes <span class="string">'Main-Class'</span>: <span class="string">'com.example.Main'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改完 gradle 脚本之后打包命令不再是  <code>./gradlew assemble</code>  而是用 <code>./gradlew shadowJar</code>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;开发测试阶段的打包部署&quot;&gt;&lt;a href=&quot;#开发测试阶段的打包部署&quot; class=&quot;headerlink&quot; title=&quot;开发测试阶段的打包部署&quot;&gt;&lt;/a&gt;开发测试阶段的打包部署&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;[ ] 配置登录远程机器的 SSH config&lt;/li
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="java" scheme="https://linlshare.github.io/categories/it/java/"/>
    
      <category term="base" scheme="https://linlshare.github.io/categories/it/java/base/"/>
    
    
      <category term="Java" scheme="https://linlshare.github.io/tags/Java/"/>
    
      <category term="JavaEE" scheme="https://linlshare.github.io/tags/JavaEE/"/>
    
      <category term="Package" scheme="https://linlshare.github.io/tags/Package/"/>
    
      <category term="Deploy" scheme="https://linlshare.github.io/tags/Deploy/"/>
    
  </entry>
  
  <entry>
    <title>CSV</title>
    <link href="https://linlshare.github.io/2018/12/15/it/media/CSV/"/>
    <id>https://linlshare.github.io/2018/12/15/it/media/CSV/</id>
    <published>2018-12-15T02:51:47.000Z</published>
    <updated>2018-12-15T03:08:30.221Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CSV-是什么格式？"><a href="#CSV-是什么格式？" class="headerlink" title="CSV 是什么格式？"></a>CSV 是什么格式？</h2><p>CSV，全称 Comma-Separated Value，即逗号分隔值，使用逗号（或者自定义的分隔符）分隔并以纯文本形式存储表格数据。通常使用第一行作为表头。</p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><p>（1）打开编辑器，粘贴以下内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Brand,Product,Desc</span><br><span class="line">Apple,IPhone,Expensive</span><br><span class="line">Samsung,S9,Nice</span><br></pre></td></tr></table></figure><p>（2） 存储为 <code>.csv</code> 结尾的文件。</p><p>（3）使用 Excel 或者 Number 打开，就会以表格形式呈现内容。</p><h2 id="内容中含有逗号？"><a href="#内容中含有逗号？" class="headerlink" title="内容中含有逗号？"></a>内容中含有逗号？</h2><p>（1）自定义分隔符如下，并保存文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Brand`Product`Desc</span><br><span class="line">Apple`IPhone,Mac`Expensive</span><br><span class="line">Samsung`S8,Galaxy Watch`Nice</span><br></pre></td></tr></table></figure><p>（2）打开 Excel 新建文档，然后点击 <code>文档 --&gt; 导入</code>，选取刚才保存的 <code>csv</code> 文件。在弹出的提示框中选择 <code>分隔符号 --&gt; 下一步 --&gt; 其他</code>， 输入自定义的分隔符号，点击 <code>完成</code> 即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CSV-是什么格式？&quot;&gt;&lt;a href=&quot;#CSV-是什么格式？&quot; class=&quot;headerlink&quot; title=&quot;CSV 是什么格式？&quot;&gt;&lt;/a&gt;CSV 是什么格式？&lt;/h2&gt;&lt;p&gt;CSV，全称 Comma-Separated Value，即逗号分隔值，使用
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="media" scheme="https://linlshare.github.io/categories/it/media/"/>
    
    
      <category term="CSV" scheme="https://linlshare.github.io/tags/CSV/"/>
    
  </entry>
  
  <entry>
    <title>Amazon S3</title>
    <link href="https://linlshare.github.io/2018/12/14/it/java/aws/Amazon%20S3/"/>
    <id>https://linlshare.github.io/2018/12/14/it/java/aws/Amazon S3/</id>
    <published>2018-12-14T04:02:45.000Z</published>
    <updated>2018-12-14T08:32:15.532Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Amazon-S3-是什么？"><a href="#Amazon-S3-是什么？" class="headerlink" title="Amazon S3 是什么？"></a>Amazon S3 是什么？</h2><p>Amazon S3 是亚马逊推出的一款存储服务，名为 Amazon Simple Storage Service，即亚马逊简单存储服务。</p><p>有些 S3 的概念需要了解一下：</p><ol><li>存储桶（Buckets）：S3 中用于存储对象的容器，相当于文件系统中的目录（Directory）的概念。</li><li>对象（Objects）：S3 中存储的基本实体，由对象数据和元数据组成，元数据是描述对象的一组键值对。在存储中的对象由键和版本 ID 唯一标识。</li><li>键（Keys）：存储桶中对象的唯一标识符。</li><li>区域（Regions）：地理区域。</li></ol><blockquote><p>S3 中的对象映射：存储桶 + 键 + 版本 –&gt; 对象</p></blockquote><h2 id="API-1-0"><a href="#API-1-0" class="headerlink" title="API 1.0"></a>API 1.0</h2><h2 id="排错"><a href="#排错" class="headerlink" title="排错"></a>排错</h2><h3 id="身份验证错误"><a href="#身份验证错误" class="headerlink" title="身份验证错误"></a>身份验证错误</h3><p>BasicProfileConfigLoader - Your profile name includes a ‘profile ‘ prefix. This is considered part of the profile name in the Java SDK, so you will need to include this prefix in your profile name when you reference this profile from your Java code.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Amazon-S3-是什么？&quot;&gt;&lt;a href=&quot;#Amazon-S3-是什么？&quot; class=&quot;headerlink&quot; title=&quot;Amazon S3 是什么？&quot;&gt;&lt;/a&gt;Amazon S3 是什么？&lt;/h2&gt;&lt;p&gt;Amazon S3 是亚马逊推出的一款存储服
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="java" scheme="https://linlshare.github.io/categories/it/java/"/>
    
      <category term="aws" scheme="https://linlshare.github.io/categories/it/java/aws/"/>
    
    
      <category term="Java" scheme="https://linlshare.github.io/tags/Java/"/>
    
      <category term="S3" scheme="https://linlshare.github.io/tags/S3/"/>
    
      <category term="aws" scheme="https://linlshare.github.io/tags/aws/"/>
    
  </entry>
  
  <entry>
    <title>日語漢字</title>
    <link href="https://linlshare.github.io/2018/12/14/language/%E6%97%A5%E8%AA%9E/%E6%97%A5%E8%AA%9E%E6%BC%A2%E5%AD%97/"/>
    <id>https://linlshare.github.io/2018/12/14/language/日語/日語漢字/</id>
    <published>2018-12-14T00:48:25.000Z</published>
    <updated>2018-12-22T00:56:38.040Z</updated>
    
    <content type="html"><![CDATA[<p>日語漢字源自中國中古漢字，由於地理、貿易和政治的隔絕，中日獨立發展了漢字，使得日語漢字在音、形及意上與中國漢字有所差異。</p><h2 id="簡化方式不同"><a href="#簡化方式不同" class="headerlink" title="簡化方式不同"></a>簡化方式不同</h2><p>中國大陸以及日本都獨立地進行了漢字簡化運動，繁體字的部件被簡化了。下面來看看哪些部件被簡化了，簡化成什麼樣了？</p><table><thead><tr><th>日語漢字</th><th>中文繁體</th><th>中文簡體</th></tr></thead><tbody><tr><td>売、読</td><td>賣、讀</td><td>卖、读</td></tr><tr><td>済</td><td>齊、濟</td><td>齐、济</td></tr></tbody></table><h2 id="採用了古字形"><a href="#採用了古字形" class="headerlink" title="採用了古字形"></a>採用了古字形</h2><p>有些日語漢字至今沿用了中古漢字的字形，而中文漢字方面已經有流變了。</p><table><thead><tr><th>日語漢字</th><th>中文繁體</th><th>中文簡體</th></tr></thead><tbody><tr><td>帯</td><td>帶</td><td>带</td></tr><tr><td>縄</td><td>繩</td><td>绳</td></tr><tr><td>舎</td><td>舍</td><td>舍</td></tr><tr><td>軽</td><td>輕</td><td>轻</td></tr></tbody></table><h2 id="不用的漢字表示同一個意思"><a href="#不用的漢字表示同一個意思" class="headerlink" title="不用的漢字表示同一個意思"></a>不用的漢字表示同一個意思</h2><p>有些日語漢字採用的漢字在中文漢字中很少使用了，已經用新造的漢字表示了，他們是不同的漢字，而不是同一漢字的不同字形，這點要區分開。</p><table><thead><tr><th>日語漢字</th><th>中文繁體</th><th>中文簡體</th></tr></thead><tbody><tr><td>曇</td><td>陰</td><td>阴</td></tr><tr><td>芸</td><td>藝</td><td>艺</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;日語漢字源自中國中古漢字，由於地理、貿易和政治的隔絕，中日獨立發展了漢字，使得日語漢字在音、形及意上與中國漢字有所差異。&lt;/p&gt;
&lt;h2 id=&quot;簡化方式不同&quot;&gt;&lt;a href=&quot;#簡化方式不同&quot; class=&quot;headerlink&quot; title=&quot;簡化方式不同&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
      <category term="language" scheme="https://linlshare.github.io/categories/language/"/>
    
      <category term="日語" scheme="https://linlshare.github.io/categories/language/%E6%97%A5%E8%AA%9E/"/>
    
    
      <category term="日語" scheme="https://linlshare.github.io/tags/%E6%97%A5%E8%AA%9E/"/>
    
  </entry>
  
  <entry>
    <title>Jconsole</title>
    <link href="https://linlshare.github.io/2018/12/13/it/tool/Jconsole/"/>
    <id>https://linlshare.github.io/2018/12/13/it/tool/Jconsole/</id>
    <published>2018-12-13T13:27:50.000Z</published>
    <updated>2018-12-13T13:48:04.361Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Jconsole-是干嘛的？"><a href="#Jconsole-是干嘛的？" class="headerlink" title="Jconsole 是干嘛的？"></a>Jconsole 是干嘛的？</h2><p>Jsonsole 是 <code>JDK_HOME/bin</code> 目录下的一个可执行程序，用于 Java 性能分析，其 GUI 虽简陋，但功能还是可以的。</p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><p>在终端运行以下命令后就可以监控本地的 Java 程序了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> jconsole</span><br></pre></td></tr></table></figure><h2 id="更进一步"><a href="#更进一步" class="headerlink" title="更进一步"></a>更进一步</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 监控远程 Java 程序</span><br><span class="line"><span class="meta">$</span> jconsole hostName:portNum</span><br><span class="line"><span class="meta">#</span> 监控指定进程 ID 的程序</span><br><span class="line"><span class="meta">$</span> jconsole processID</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://docs.oracle.com/javase/7/docs/technotes/guides/management/jconsole.html" target="_blank" rel="noopener">Using JConsole - oracle.com</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Jconsole-是干嘛的？&quot;&gt;&lt;a href=&quot;#Jconsole-是干嘛的？&quot; class=&quot;headerlink&quot; title=&quot;Jconsole 是干嘛的？&quot;&gt;&lt;/a&gt;Jconsole 是干嘛的？&lt;/h2&gt;&lt;p&gt;Jsonsole 是 &lt;code&gt;JDK_H
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="tool" scheme="https://linlshare.github.io/categories/it/tool/"/>
    
    
      <category term="Java" scheme="https://linlshare.github.io/tags/Java/"/>
    
      <category term="Tool" scheme="https://linlshare.github.io/tags/Tool/"/>
    
      <category term="Jconsole" scheme="https://linlshare.github.io/tags/Jconsole/"/>
    
  </entry>
  
  <entry>
    <title>澳門博彩業簡史</title>
    <link href="https://linlshare.github.io/2018/12/12/history/%E6%BE%B3%E9%96%80%E5%8D%9A%E5%BD%A9%E6%A5%AD%E7%B0%A1%E5%8F%B2/"/>
    <id>https://linlshare.github.io/2018/12/12/history/澳門博彩業簡史/</id>
    <published>2018-12-12T14:41:13.000Z</published>
    <updated>2018-12-12T14:52:15.021Z</updated>
    
    <content type="html"><![CDATA[<h2 id="簡史"><a href="#簡史" class="headerlink" title="簡史"></a>簡史</h2><ol><li>16 世紀開埠，內地工人移民澳門工作，并開設賭檔，監管不利，賭風盛行；</li><li>1842年，香港被割，影響了澳門的貿易港地位，為增加多元收入，<strong>1847 年澳葡政府決定博彩業合法化</strong>，博彩業迅猛發展；</li><li>1851年 ~ 1863年，澳葡政府對博彩場所實行發牌制度，賭檔曾一度多達二百餘家，其時盧九的宜安公司集賭場、妓院、酒館、鴉片煙窟於一體；</li><li>1930年，豪興公司獲得所有博彩遊戲的專營權；</li><li><strong>1937年，澳葡政府決定博彩專營</strong>，由泰興公司投得；</li><li>1961年底，泰興公司期滿，由澳門旅遊娛樂有限公司投得；</li><li>2000年7月，澳門特區政府成立博彩委員會；</li><li><strong>2000年8月，立法會通過《娛樂場幸運博彩經營法律制度》，規定只發出最多三個賭牌</strong>，打破博彩業壟斷；</li><li>2002年2月8日，澳門特區政府宣佈將娛樂場幸運博彩經營權批給原「澳門旅遊娛樂有限公司」新組成的「澳門博彩股份有限公司」(簡稱「澳博」)、「銀河娛樂場股份有限公司」(簡稱「銀河」)及「永利渡假村(澳門)股份有限公司」(簡稱「永利」)，其中「澳博」有效期18年，直到2020年3月，「銀河」和「永利」有效期20年，直到2022年6月。</li></ol><h2 id="名詞"><a href="#名詞" class="headerlink" title="名詞"></a>名詞</h2><h3 id="幸運博彩"><a href="#幸運博彩" class="headerlink" title="幸運博彩"></a>幸運博彩</h3><p>1961年2月，經第119任總督馬濟時界定了賭博與博彩的定義：“凡博彩，其結果為偶然性，純粹幸運致勝者”，概稱“幸運博彩”。</p><h3 id="東方蒙地卡羅"><a href="#東方蒙地卡羅" class="headerlink" title="東方蒙地卡羅"></a>東方蒙地卡羅</h3><p>蒙地卡羅（法語：Monte-Carlo）是歐洲地中海沿岸的小國摩納哥的一座城市，有「賭博之國」之稱。「東方蒙地卡羅」自然就是指澳門了。</p><h2 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h2><ol><li><a href="http://www.dicj.gov.mo/web/cn/history/index.html" target="_blank" rel="noopener">澳 門 博 彩 業 歷 史 - 澳門博彩監察局</a></li><li><a href="https://zh.wikipedia.org/zh-mo/%E6%BE%B3%E9%96%80%E5%8D%9A%E5%BD%A9%E6%A5%AD" target="_blank" rel="noopener">澳門博彩業 - 維基百科</a></li><li><a href="http://www.macauresearch.org/my%20webs1/magazine1/magazine1casinohistory.htm" target="_blank" rel="noopener">澳門博彩業大事追尋 - 澳門社會發展研究會</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;簡史&quot;&gt;&lt;a href=&quot;#簡史&quot; class=&quot;headerlink&quot; title=&quot;簡史&quot;&gt;&lt;/a&gt;簡史&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;16 世紀開埠，內地工人移民澳門工作，并開設賭檔，監管不利，賭風盛行；&lt;/li&gt;
&lt;li&gt;1842年，香港被割，影響了澳門的貿易
      
    
    </summary>
    
      <category term="history" scheme="https://linlshare.github.io/categories/history/"/>
    
    
      <category term="History" scheme="https://linlshare.github.io/tags/History/"/>
    
      <category term="澳門" scheme="https://linlshare.github.io/tags/%E6%BE%B3%E9%96%80/"/>
    
      <category term="博彩業" scheme="https://linlshare.github.io/tags/%E5%8D%9A%E5%BD%A9%E6%A5%AD/"/>
    
  </entry>
  
  <entry>
    <title>FunnyTool</title>
    <link href="https://linlshare.github.io/2018/12/12/it/tool/FunnyTool/"/>
    <id>https://linlshare.github.io/2018/12/12/it/tool/FunnyTool/</id>
    <published>2018-12-12T03:57:21.000Z</published>
    <updated>2018-12-12T04:02:46.214Z</updated>
    
    <content type="html"><![CDATA[<p> 这里是各类有趣的在线工具的收集箱。收藏品如下：</p><table><thead><tr><th>Tool</th><th>Features</th></tr></thead><tbody><tr><td><a href="http://asciiflow.com/" target="_blank" rel="noopener">asciiflow.com</a></td><td>绘制 ASCII 格式的代码注释</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; 这里是各类有趣的在线工具的收集箱。收藏品如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tool&lt;/th&gt;
&lt;th&gt;Features&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;http://asciifl
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="tool" scheme="https://linlshare.github.io/categories/it/tool/"/>
    
    
      <category term="Tool" scheme="https://linlshare.github.io/tags/Tool/"/>
    
  </entry>
  
  <entry>
    <title>Bach</title>
    <link href="https://linlshare.github.io/2018/12/09/music/Bach/"/>
    <id>https://linlshare.github.io/2018/12/09/music/Bach/</id>
    <published>2018-12-09T12:41:49.000Z</published>
    <updated>2018-12-09T14:52:49.438Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>KEY</th><th>VALUE</th></tr></thead><tbody><tr><td>原名</td><td>Johann Sebastian Bach（德语）</td></tr><tr><td>译名</td><td>約翰·塞巴斯蒂安·巴哈（台灣）、约翰·塞巴斯蒂安·巴赫（大陆）</td></tr><tr><td>国籍</td><td>神圣罗马帝国（德国）</td></tr><tr><td>生卒</td><td>1685年3月21日（Eisenach，埃森纳赫）－1750年7月28日（St Thomas Church，莱比锡圣多马教堂）</td></tr><tr><td>风格</td><td>巴洛克、复调音乐</td></tr><tr><td>身份</td><td>作曲家，管风琴、小提琴和大键琴演奏家，宫廷乐长</td></tr><tr><td>作品</td><td>按作品目录分类，冠之以 <strong>BWV</strong>（巴赫作品目录），共有 1126 件各类音乐作品。注意：BWV 中少数非巴赫所作。</td></tr><tr><td>影响力</td><td>生前未得到正确的评价，死后数十年亦然，直到1829年，门德尔松改编并指挥了巴赫的《马太受难曲》，震惊音乐界，随后开始了“复兴巴赫”运动，才逐渐恢复应有的地位。如今巴赫与维瓦尔第、亨德尔并称巴洛克三巨匠，在音乐史上和莫扎特、贝多芬齐名。</td></tr></tbody></table><h2 id="十二平均律键盘曲集（BWV-846-893）"><a href="#十二平均律键盘曲集（BWV-846-893）" class="headerlink" title="十二平均律键盘曲集（BWV 846-893）"></a>十二平均律键盘曲集（BWV 846-893）</h2><p>巴赫的十二平均律键盘曲集（BWV 846-893）是其较著名作品之一，古尔德和里赫特都曾演奏过。里赫特演奏的版本收录在其专辑 《The Well-Tempered Clavier》中。古尔德演奏的版本收录在其专辑《Bach: The Well-Tempered Clavier Book I, BWV 846-869》及《The Glenn Gould Edition - Bach: The Well-Tempered Clavier, Book II》中。注意：这里所用的专辑名称来自网易云音乐。</p><h2 id="入选旅行者金唱片（Voyager-Golden-Records）"><a href="#入选旅行者金唱片（Voyager-Golden-Records）" class="headerlink" title="入选旅行者金唱片（Voyager Golden Records）"></a>入选旅行者金唱片（Voyager Golden Records）</h2><p>1977 年 NASA 发射了两艘旅行者号太空探测器，其中放置了一张旅行者金唱片，里面收录了用以表述地球上各种文化及生命的声音及图像。其中就有三首属于巴赫的作品：</p><ol><li>《F大调第二勃兰登堡协奏曲》第一乐章，BWV 1047</li><li>《E大调无伴奏小提琴组曲第三号》之回旋曲式的加沃特（Gavotte en rondeaux），BWV 1006</li><li>《平均律钢琴曲集》第二卷第一号，C大调前奏曲及赋格，BWV 870</li></ol><blockquote><p>小贴士：旅行者金唱片可以通过访问网站 <a href="http://goldenrecord.org/#discus-aureus" target="_blank" rel="noopener">goldenrecord.org</a> ，在线播放其中的声音和图像，很有意思。</p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://zh.wikipedia.org/zh-cn/约翰·塞巴斯蒂安·巴赫" target="_blank" rel="noopener">约翰·塞巴斯蒂安·巴赫 - 维基百科</a></li><li><a href="https://zh.wikipedia.org/zh-cn/%E6%97%85%E8%A1%8C%E8%80%85%E9%87%91%E5%94%B1%E7%89%87" target="_blank" rel="noopener">旅行者金唱片 - 维基百科</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;KEY&lt;/th&gt;
&lt;th&gt;VALUE&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;原名&lt;/td&gt;
&lt;td&gt;Johann Sebastian Bach（德语）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;译
      
    
    </summary>
    
      <category term="music" scheme="https://linlshare.github.io/categories/music/"/>
    
    
      <category term="Music" scheme="https://linlshare.github.io/tags/Music/"/>
    
      <category term="Bach" scheme="https://linlshare.github.io/tags/Bach/"/>
    
  </entry>
  
  <entry>
    <title>海蒂和爷爷</title>
    <link href="https://linlshare.github.io/2018/12/08/movie/%E6%B5%B7%E8%92%82%E5%92%8C%E7%88%B7%E7%88%B7/"/>
    <id>https://linlshare.github.io/2018/12/08/movie/海蒂和爷爷/</id>
    <published>2018-12-08T15:14:31.000Z</published>
    <updated>2018-12-08T16:02:12.958Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2018/12/08/movie/海蒂和爷爷/海蒂和爷爷_截图.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">导演: 阿兰·葛斯彭纳</span><br><span class="line">编剧: 约翰娜·施皮里 / 佩特拉·比翁迪娜·沃尔普</span><br><span class="line">主演: 阿努克·斯特芬 / 布鲁诺·甘茨 / 昆林·艾格匹 / 安娜·申茨 / 伊莎贝尔·奥特曼 / 更多...</span><br><span class="line">类型: 剧情 / 家庭 / 冒险</span><br><span class="line">官方网站: www.heidi.studiocanal.de</span><br><span class="line">制片国家/地区: 德国 / 瑞士 / 南非</span><br><span class="line">语言: 德语 / 瑞士德语 / 南非语</span><br><span class="line">上映日期: 2015-12-10(德国)</span><br><span class="line">片长: 111分钟</span><br><span class="line">又名: 飘零燕(港) / 海蒂 / 阿尔卑斯山少女海蒂</span><br><span class="line">IMDb链接: tt3700392</span><br></pre></td></tr></table></figure><p>海蒂，一个瑞士小女孩，父母双亡，由姨妈带大。后来姨妈想要去法兰克福工作，不能再带海蒂了，于是把她带到她爷爷住的山上。爷爷是一个性情冷淡的老人，邻居都不敢靠近他，甚至流言说他杀过人。爷爷不肯接纳海蒂，但是姨妈已经弃海蒂而去了。尽管爷爷心里抗拒，关闭了房门，可海蒂已经跳进羊圈跟小羊度过了第一天。慢慢地，爷爷接纳了海蒂，让她睡阁楼的草垫上，还给她做了一把小木椅。海蒂也融入了爷爷阿尔卑斯山里自由自在的生活，认识了小牧羊人皮特，并成为了好朋友。</p><p>有一天，海蒂的姨妈又来了，骗走了海蒂，把她卖给了法兰克福一个富裕人家，给他们的小姐克拉拉做玩伴。“粗鲁”的海蒂要遵守各种繁文缛节，常常闹出笑话，给孤独而且双脚不便的克拉拉带来了很多欢乐。克拉拉的奶奶还给海蒂读故事书，海蒂很喜欢，可是奶奶读了不到一半就停了，告诉海蒂想知道后面的故事，要认字。于是，海蒂认真地听私人教师的课。没多久就学会了念读故事书，大家都很高兴。但海蒂心里一直想着阿尔卑斯山、爷爷、皮特还有山羊，还因此梦游去开门，风吹门发出奇怪的声音，大家都以为是闹鬼了。主人家的医生发现后建议主人送她回家以免积郁成疾。尽管克拉拉不肯而发脾气，主人也不情愿，但还是送海蒂回到了阿尔卑斯山。</p><p>海蒂又回到了故乡，那人，那山，那山羊，心里无限欢快。海蒂写信给克拉拉，告诉她这里的生活，要她过来这里看看。克拉拉的奶奶把信读给克拉拉听了。不久，她们就来到了海蒂身边，两人紧紧拥抱，笑容可掬。奶奶留下了克拉拉几天，跟着海蒂一起在大山里玩耍。这时皮特不乐意了，因为他觉得海蒂好像被克拉拉抢走了。于是，在一天早上，把克拉拉的轮椅推向了山谷。这一天，爷爷背着克拉拉，海蒂在后面，一起去放羊。克拉拉坐在石头上，一只蝴蝶落在她的脚上，她伸手去抓，蝴蝶飞起来了，她站起来想要去抓。是的，她站起来了！海蒂和皮特搀扶着她，每天练习走路。在他爸爸来接她的时候，她缓步走向她爸爸，她爸爸和奶奶感动得眼泪夺眶而出，抱起了克拉拉。克拉拉回家了。海蒂和爷爷，也回家了。他们春天放羊，冬天滑雪橇。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2018/12/08/movie/海蒂和爷爷/海蒂和爷爷_截图.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span clas
      
    
    </summary>
    
      <category term="movie" scheme="https://linlshare.github.io/categories/movie/"/>
    
    
      <category term="电影" scheme="https://linlshare.github.io/tags/%E7%94%B5%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>明清時期澳門華人社會研究論文集</title>
    <link href="https://linlshare.github.io/2018/12/07/history/%E6%98%8E%E6%B8%85%E6%99%82%E6%9C%9F%E6%BE%B3%E9%96%80%E8%8F%AF%E4%BA%BA%E7%A4%BE%E6%9C%83%E7%A0%94%E7%A9%B6%E8%AB%96%E6%96%87%E9%9B%86/"/>
    <id>https://linlshare.github.io/2018/12/07/history/明清時期澳門華人社會研究論文集/</id>
    <published>2018-12-07T12:40:52.021Z</published>
    <updated>2018-12-12T15:04:43.795Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>KEY</th><th>VALUE</th></tr></thead><tbody><tr><td>作者/編者</td><td>林廣志 陳文源</td></tr><tr><td>出版社</td><td>澳門基金會</td></tr><tr><td>出版日期</td><td>2018年03月</td></tr><tr><td>ISBN</td><td>978-99937-1-247-3</td></tr><tr><td>頁數</td><td>775</td></tr></tbody></table><p><a href="https://www.macaudata.com/upload_files/pdf/2018/04/27/2018041524791737819.pdf" target="_blank" rel="noopener">在線閱讀</a></p><h2 id="前言──明清時期澳門華人社會研究的回顧與前瞻"><a href="#前言──明清時期澳門華人社會研究的回顧與前瞻" class="headerlink" title="前言──明清時期澳門華人社會研究的回顧與前瞻"></a>前言──明清時期澳門華人社會研究的回顧與前瞻</h2><blockquote><p>金國平、吳志良認為，兩宋時期澳門已是客家先民從中原遷徙、開發華南的歷史足跡之一。</p></blockquote><p>客家人足跡遍佈大半個中國，了不起。</p><blockquote><p>總體而言，目前澳門華商家族的研究，大多關注晚清居澳華商的經濟狀況、社會地位以及參與社會公益、國內政治活動，對於<strong>由葡國管治下傳統華人家族觀念、家族維繫因素、家族企業經營方式以及家族與社會勾聯</strong>等極具特色的內容，仍需進行學理性的梳理，這種梳理對深入理解澳門近代社會的構成和發展無疑具有重要意義。</p></blockquote><p>從家族社會或者說熟人社會，往現代社會發展的過程是重點。</p><blockquote><p>居澳華人在澳門經濟發展過程中的角色，經歷由<strong>葡商附庸型</strong>到<strong>澳門經濟主控型</strong>的轉變。在鴉片戰爭前，華人主要是從事通事、買辦、小商販、手工、僕役等葡商附庸性的工作…… 19 世紀初，清政府兩次修訂對外策，對日漸增強的澳門華商團體予以沉重的打擊:一是實施禁煙政策，懲辦了一批華人鴉片商;二是為抗擊葡國在澳門推行強硬的殖民政策，廣東政府實施了“以商制夷”策略，將居澳華商遷至黃埔港。經歷了這兩次重大事件，剛剛萌生的澳門華商財團勢力嚴重受挫。</p><p>19 世紀 40 年代，葡國政府為了挽回澳門貿易被邊緣化的危機，追隨英國在香港的政策，<strong>擅自宣佈澳門為自由港</strong>，並在澳門推行強硬的殖民政策，強拆中方官署。由於洋船駛往香港，居澳華商遷至黃埔，澳門並沒能因其“自由”而繁榮起來，反而因失去華商而陷入衰落，致使澳葡政府財政陷入危機。為了扭轉日益惡化的財政狀況，澳葡政府開始對<strong>賭博業與一些重要民生物資 (如豬肉等) 實施專營制度</strong>。 50 年代，由於國內民亂，大批華人攜資避難澳門，而澳葡政府的專營制度為這些新移民者提供了新的營商機會。在這樣的環境下，華人以其資本與勇氣，逐漸壟斷了澳門大部分專營行業，大至賭博經營、鴉片貿易、苦力貿易，小至食品經營、手工車服務、街燈管理等等，華人成為澳門經濟發展最重要的力量。</p></blockquote><p>怎麼做到的？時運輪轉。</p><p>清政府嚴禁鴉片，轉移居澳華商 –&gt; 40年代葡國殖民澳門，陷入財政危機 –&gt; 實施賭博業和重要民生物資專營制度  –&gt; 50年代國內民亂，華人攜資避難澳門 –&gt; 華人壟斷大部分專營行業。</p><blockquote><p>1582 年，澳門議事會成立，此後逐漸形成華葡分治的政治格局。葡王於 1589年發佈訓令，明確規定議事會不得干預華人事務，但華人天主教徒例外……</p><p>華葡分治”是明清時期澳門社會管治的特徵，但明清政府主要是管主權、管邊防、管稅收。亞馬留事件後，儘管澳葡政府極力拉攏居澳華人，但對居澳華人的社會生活卻力不從心。因此，實質上華人社會長期處於“管而不理”的狀態，澳門華人社會內部更多地依賴中葡之外的“第三權力”進行調節。湯開建認為，鏡湖醫院是由當時華人精英籌建，在華人社會中具有極高的公信力，鏡湖醫院不僅從事一般性的慈善公益活動，也是華人集議商事的重要機構……林廣志對華人社會組織進行了歷史考察，認為澳門華人組織從漁農社會到近代商業社會的發展歷經了五個階段:第一是以<strong>媽閣廟、蓮峰廟</strong>為代表的神緣性組織;第二是以<strong>三街會館</strong>為代表的業緣性組織;第三是以<strong>鏡湖醫院、同善堂</strong>為代表的慈善性組織;第四是以<strong>宜安公司</strong>等為代表的聯誼性組織;第五是以<strong>澳門商會</strong>為代表的政商性組織，這些組織大多承擔起華人社會解決糾紛、集議商事的功能，逐漸形成華人社會管的“第三權力”。</p></blockquote><p>華人的事務明清政府不管，葡人又管不了，只能靠民間團體自治了。聯繫澳門華人的紐帶由神、職業、慈善組織、聯誼組織變化到政商組織。原來設立澳門行政區是有其自治背景的。</p><blockquote><p><strong>孫中山在澳門行醫</strong>得到了一眾華商的熱心支持，但在其尋覓革命的“熱心同志”時卻遭受“冷遇”，原因是澳門華商普遍不贊成孫之“激烈之主張”。</p></blockquote><p>據<a href="http://www.takungpao.com.hk/paper/2017/0328/69970.html" target="_blank" rel="noopener">孫中山澳門行醫足跡 - 大公網</a>，孫先生1892年畢業于香港西醫書院，后到澳門鏡湖醫院為華人義診，成為該院首位西醫。</p><blockquote><p>澳門社會的複雜性是眾所周知的，所謂“小澳門，多內涵;表象單純，深層複雜”。</p></blockquote><h2 id="一、人口家族"><a href="#一、人口家族" class="headerlink" title="一、人口家族"></a>一、人口家族</h2><h3 id="晚清澳門華人巨商盧九家族事跡考述-林廣志"><a href="#晚清澳門華人巨商盧九家族事跡考述-林廣志" class="headerlink" title="晚清澳門華人巨商盧九家族事跡考述 - 林廣志"></a>晚清澳門華人巨商盧九家族事跡考述 - 林廣志</h3><blockquote><p>盧九(1848 - 1907)，原名華紹，字育諾，號焯之，小名 ，廣東新會潮連鄉人。盧九是 19 世紀下半葉澳門的“一代賭王”，也是當時澳門政治、經濟及社會生活中最有影響的華商代表之一。幾十年間，盧九及其家族縱橫省澳，際會風雲，專擅煙賭，旁及其餘，熱心社群，樂善好施，在華葡社會享有極高的聲譽。</p></blockquote><p>盧家大屋</p><p>盧廉若公園</p><h2 id="文字比較"><a href="#文字比較" class="headerlink" title="文字比較"></a>文字比較</h2><table><thead><tr><th>大陆简体</th><th>台灣繁體</th><th>澳門繁體</th></tr></thead><tbody><tr><td>研究</td><td>研究</td><td>硏究</td></tr><tr><td>打拼</td><td>打拼</td><td>打<img src="/2018/12/07/history/明清時期澳門華人社會研究論文集/pin.png" alt=""></td></tr><tr><td>节假</td><td>節假</td><td>節假</td></tr><tr><td>判断</td><td>判斷</td><td><img src="/2018/12/07/history/明清時期澳門華人社會研究論文集/pan.png" alt="pan">斷</td></tr><tr><td>学者</td><td>學者</td><td>學者</td></tr><tr><td>价值</td><td>價值</td><td>價値</td></tr><tr><td>读书</td><td>讀書</td><td><img src="/2018/12/07/history/明清時期澳門華人社會研究論文集/du.png" alt="">書</td></tr><tr><td>契约</td><td>契約</td><td><img src="/2018/12/07/history/明清時期澳門華人社會研究論文集/qi.png" alt=""><img src="/2018/12/07/history/明清時期澳門華人社會研究論文集/yue.png" alt=""></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;KEY&lt;/th&gt;
&lt;th&gt;VALUE&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;作者/編者&lt;/td&gt;
&lt;td&gt;林廣志 陳文源&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;出版社&lt;/td&gt;
&lt;td&gt;澳門基
      
    
    </summary>
    
      <category term="history" scheme="https://linlshare.github.io/categories/history/"/>
    
    
      <category term="History" scheme="https://linlshare.github.io/tags/History/"/>
    
      <category term="澳門" scheme="https://linlshare.github.io/tags/%E6%BE%B3%E9%96%80/"/>
    
  </entry>
  
  <entry>
    <title>WebMagic</title>
    <link href="https://linlshare.github.io/2018/12/07/it/robot/WebMagic/"/>
    <id>https://linlshare.github.io/2018/12/07/it/robot/WebMagic/</id>
    <published>2018-12-07T02:06:53.000Z</published>
    <updated>2018-12-07T06:53:04.078Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WebMagic-是干嘛的？"><a href="#WebMagic-是干嘛的？" class="headerlink" title="WebMagic 是干嘛的？"></a>WebMagic 是干嘛的？</h2><p>WebMagic 是一个 Java 平台上的开源爬虫框架，其设计参考了 Scrapy，实现则参考了 HttpClient 和 Jsoup。其由四大组件组成：</p><ol><li>Downloader，负责下载网页，使用 HttpClient。</li><li>PageProcessor，负责解析网页和链接发现，使用 Jsoup 和 Xsoup。</li><li>Scheduler，负责管理待抓取的 URL 和去重。</li><li>Pipeline，负责结果数据的持久化。</li></ol><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="（1）依赖引入"><a href="#（1）依赖引入" class="headerlink" title="（1）依赖引入"></a>（1）依赖引入</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ext &#123;</span><br><span class="line">  versions = [</span><br><span class="line">    <span class="string">"web_magic"</span>: <span class="string">'0.7.3'</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">  <span class="comment">// 这里有自己项目的日志实现</span></span><br><span class="line">  compile project(<span class="string">':base'</span>)</span><br><span class="line"></span><br><span class="line">  compile(<span class="string">"us.codecraft:webmagic-core:$&#123;versions.web_magic&#125;"</span>) &#123;</span><br><span class="line">    exclude <span class="string">group:</span> <span class="string">'org.slf4j'</span>, <span class="string">module:</span> <span class="string">'slf4j-log4j12'</span> <span class="comment">// 移除默认的日志实现</span></span><br><span class="line">  &#125;</span><br><span class="line">  compile(<span class="string">"us.codecraft:webmagic-extension:$&#123;versions.web_magic&#125;"</span>) &#123;</span><br><span class="line">    exclude <span class="string">group:</span> <span class="string">'org.slf4j'</span>, <span class="string">module:</span> <span class="string">'slf4j-log4j12'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（2）快速开始"><a href="#（2）快速开始" class="headerlink" title="（2）快速开始"></a>（2）快速开始</h3><p>爬取 <a href="https://github.com/code4craft/" target="_blank" rel="noopener">https://github.com/code4craft/</a> 页面上可以发现的所有 Github 仓库信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GithubRepoPageProcessor</span> <span class="keyword">implements</span> <span class="title">PageProcessor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> Site site = Site.me().setRetryTimes(<span class="number">3</span>).setSleepTime(<span class="number">200</span>).setTimeOut(<span class="number">10000</span>);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">process</span><span class="params">(Page page)</span> </span>&#123;</span><br><span class="line">    String regex = <span class="string">"(https://github\\.com/code4craft/([\\w-_]+)/)"</span>;</span><br><span class="line">    page.addTargetRequests(page.getHtml()</span><br><span class="line">                               .links()</span><br><span class="line">                               .regex(regex)</span><br><span class="line">                               .all());</span><br><span class="line">    <span class="keyword">if</span>(!Pattern.matches(regex,page.getUrl().get()))&#123;</span><br><span class="line">      <span class="comment">//skip this page</span></span><br><span class="line">      page.setSkip(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    page.putField(<span class="string">"author"</span>, page.getUrl().regex(<span class="string">"https://github\\.com/(\\w+)/.*"</span>).toString());</span><br><span class="line">    page.putField(<span class="string">"name"</span>,</span><br><span class="line">                  page.getHtml()</span><br><span class="line">                      .xpath(<span class="string">"//meta[@property='og:title']/@content"</span>)</span><br><span class="line">                      .toString());</span><br><span class="line">    <span class="keyword">if</span> (page.getResultItems().get(<span class="string">"name"</span>) == <span class="keyword">null</span>) &#123;</span><br><span class="line">      page.setSkip(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    page.putField("readme", page.getHtml().xpath("//div[@id='readme']/tidyText()"));</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Site <span class="title">getSite</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> site;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Spider.create(<span class="keyword">new</span> GithubRepoPageProcessor())</span><br><span class="line">          .addUrl(<span class="string">"https://github.com/code4craft/"</span>)</span><br><span class="line">          .thread(<span class="number">5</span>)</span><br><span class="line">          .run();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="更进一步"><a href="#更进一步" class="headerlink" title="更进一步"></a>更进一步</h2><h3 id="Pipeline-接口参数分析"><a href="#Pipeline-接口参数分析" class="headerlink" title="Pipeline 接口参数分析"></a>Pipeline 接口参数分析</h3><p>Pipeline 接口会在每个 Page 解析完成之后回调一次。其中的参数如下：</p><p><strong>（1）Task</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"exitWhenComplete"</span>: <span class="literal">true</span>,</span><br><span class="line">    "pageCount": 0, // 抓取的第几页</span><br><span class="line">    "scheduler": &#123;</span><br><span class="line">        "duplicateRemover": &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    "site": &#123;</span><br><span class="line">        "acceptStatCode": [</span><br><span class="line">            <span class="number">200</span></span><br><span class="line">        ],</span><br><span class="line">        "allCookies": &#123;&#125;,</span><br><span class="line">        "cookies": &#123;&#125;,</span><br><span class="line">        "cycleRetryTimes": 0,</span><br><span class="line">        "disableCookieManagement": false,</span><br><span class="line">        "domain": "github.com",</span><br><span class="line">        "headers": &#123;</span><br><span class="line">            ":method": "GET",</span><br><span class="line">            "origin": "https://github.com"</span><br><span class="line">        &#125;,</span><br><span class="line">        "retrySleepTime": 1000,</span><br><span class="line">        "retryTimes": 3,</span><br><span class="line">        "sleepTime": 100,</span><br><span class="line">        "timeOut": 10000,</span><br><span class="line">        "useGzip": true</span><br><span class="line">    &#125;,</span><br><span class="line">    "spawnUrl": true,</span><br><span class="line">    "startTime": 1544165065094,</span><br><span class="line">    "status": "Running",</span><br><span class="line">    "threadAlive": 1,</span><br><span class="line">    "uUID": "github.com"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（2）ResultItems</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"all"</span>: &#123;</span><br><span class="line">        // 自定义的字段在这里</span><br><span class="line">        "a_key":"a_value"</span><br><span class="line">    &#125;,</span><br><span class="line">    "request": &#123;</span><br><span class="line">        "binaryContent": false,</span><br><span class="line">        "cookies": &#123;&#125;,</span><br><span class="line">        "headers": &#123;&#125;,</span><br><span class="line">        "priority": 0,</span><br><span class="line">        "url": "https://github.com/code4craft?tab=repositories"</span><br><span class="line">    &#125;,</span><br><span class="line">    "skip": false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="排错"><a href="#排错" class="headerlink" title="排错"></a>排错</h2><h3 id="Https下无法抓取只支持TLS1-2的站点"><a href="#Https下无法抓取只支持TLS1-2的站点" class="headerlink" title="Https下无法抓取只支持TLS1.2的站点"></a>Https下无法抓取只支持TLS1.2的站点</h3><p>作者 code4craft 针对 <a href="https://github.com/code4craft/webmagic/issues/701" target="_blank" rel="noopener">ISSUE 701</a> 提供了如下的解决方案：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">更新会在0.7.4版本发布。</span><br><span class="line"></span><br><span class="line">临时适配方式，修改HttpClientGenerator中的buildSSLConnectionSocketFactory方法，</span><br><span class="line"></span><br><span class="line">return new SSLConnectionSocketFactory(createIgnoreVerifySSL(), new String[]&#123;&quot;SSLv3&quot;, &quot;TLSv1&quot;, &quot;TLSv1.1&quot;, &quot;TLSv1.2&quot;&#125;,</span><br><span class="line">                    null,</span><br><span class="line">                    new DefaultHostnameVerifier())</span><br><span class="line">重写自己实现的HttpClientDownloader，并设置到Spider中。</span><br></pre></td></tr></table></figure><h3 id="java-net-UnknownHostException"><a href="#java-net-UnknownHostException" class="headerlink" title="java.net.UnknownHostException"></a>java.net.UnknownHostException</h3><p>请检查网络连接。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="http://webmagic.io/docs/zh/" target="_blank" rel="noopener">WebMagic in Action - webmagic.io</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;WebMagic-是干嘛的？&quot;&gt;&lt;a href=&quot;#WebMagic-是干嘛的？&quot; class=&quot;headerlink&quot; title=&quot;WebMagic 是干嘛的？&quot;&gt;&lt;/a&gt;WebMagic 是干嘛的？&lt;/h2&gt;&lt;p&gt;WebMagic 是一个 Java 平台上的
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="robot" scheme="https://linlshare.github.io/categories/it/robot/"/>
    
    
      <category term="Java" scheme="https://linlshare.github.io/tags/Java/"/>
    
      <category term="Robot" scheme="https://linlshare.github.io/tags/Robot/"/>
    
      <category term="WebMagic" scheme="https://linlshare.github.io/tags/WebMagic/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cache</title>
    <link href="https://linlshare.github.io/2018/12/05/it/java/cache/Spring%20Cache/"/>
    <id>https://linlshare.github.io/2018/12/05/it/java/cache/Spring Cache/</id>
    <published>2018-12-05T14:46:21.000Z</published>
    <updated>2018-12-06T07:22:57.767Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么要使用-Spring-Cache-管理缓存？"><a href="#为什么要使用-Spring-Cache-管理缓存？" class="headerlink" title="为什么要使用 Spring Cache 管理缓存？"></a>为什么要使用 Spring Cache 管理缓存？</h2><p>让 Spring 来管理 Bean 的缓存具有以下优势：</p><ol><li>Spring 支持 HashMap 缓存，Redis 缓存以及自定义的缓存方式；</li><li>Spring 缓存几乎不需要写代码，只需要配置好并声明好注解。</li></ol><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="（1）依赖引入"><a href="#（1）依赖引入" class="headerlink" title="（1）依赖引入"></a>（1）依赖引入</h3><p>这里使用 Spring 的依赖管理器来管理 Spring Cache 的版本，会自动处理内部的模块间依赖，这也是推荐的方式。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath(<span class="string">"org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'java'</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'org.springframework.boot'</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'io.spring.dependency-management'</span></span><br><span class="line"></span><br><span class="line">repositories &#123;</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compile(<span class="string">"org.springframework.boot:spring-boot-starter-cache"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（2）启用缓存"><a href="#（2）启用缓存" class="headerlink" title="（2）启用缓存"></a>（2）启用缓存</h3><p>在 SpringApplication 配置类的地方添加以下注解以启用缓存功能。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableCaching</span></span><br></pre></td></tr></table></figure><h3 id="（3）ConcurrentHashMap-缓存"><a href="#（3）ConcurrentHashMap-缓存" class="headerlink" title="（3）ConcurrentHashMap 缓存"></a>（3）ConcurrentHashMap 缓存</h3><p>当没有配置其他缓存库时，默认使用 <code>ConcurrentHashMap</code> 作为缓存仓库。</p><h4 id="（3-1）一个简单的实体类"><a href="#（3-1）一个简单的实体类" class="headerlink" title="（3.1）一个简单的实体类"></a>（3.1）一个简单的实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Customer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String id;</span><br><span class="line">    <span class="keyword">public</span> String firstName;</span><br><span class="line">    <span class="keyword">public</span> String lastName;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Customer</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Customer</span><span class="params">(String firstName, String lastName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.firstName = firstName;</span><br><span class="line">        <span class="keyword">this</span>.lastName = lastName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="（3-2）一个-Repository"><a href="#（3-2）一个-Repository" class="headerlink" title="（3.2）一个 Repository"></a>（3.2）一个 Repository</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomerRepository</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Cachable</span></span><br><span class="line">    <span class="function">Customer <span class="title">getByFirstName</span><span class="params">(String firstName)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 这里应该是从数据库查询数据，DEMO 简省成直接新建了。</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Customer(firstName, <span class="string">"Jobs"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="（3-3）测试一下"><a href="#（3-3）测试一下" class="headerlink" title="（3.3）测试一下"></a>（3.3）测试一下</h4><p>如果缓存成功了，那么以下代码执行结果的 HashCode 是一致的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppRunner</span> <span class="keyword">implements</span> <span class="title">CommandLineRunner</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(AppRunner.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> CustomerRepository customerRepository;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AppRunner</span><span class="params">(CustomerRepository customerRepository)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.customerRepository = customerRepository;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"John --&gt;"</span> + customerRepository.getByFirstName(<span class="string">"John"</span>).hashCode());</span><br><span class="line">        logger.info(<span class="string">"John --&gt;"</span> + customerRepository.getByFirstName(<span class="string">"John"</span>).hashCode());</span><br><span class="line">        logger.info(<span class="string">"John --&gt;"</span> + customerRepository.getByFirstName(<span class="string">"John"</span>).hashCode());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（4）配合-Redis-缓存"><a href="#（4）配合-Redis-缓存" class="headerlink" title="（4）配合 Redis 缓存"></a>（4）配合 Redis 缓存</h3><h4 id="（4-1）添加-Redis-依赖"><a href="#（4-1）添加-Redis-依赖" class="headerlink" title="（4.1）添加 Redis 依赖"></a>（4.1）添加 Redis 依赖</h4><p>在前面的依赖之下再额外新增 Redis 相关的依赖，如下：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 本环境中的 spring-data-redis 为 1.8.7.RELEASE 版本</span></span><br><span class="line"><span class="comment">// 高版本的配置略有不同，请留意</span></span><br><span class="line">compile (<span class="string">"org.springframework.data:spring-data-redis"</span>) </span><br><span class="line">compile <span class="string">"redis.clients:jedis:2.9.0"</span></span><br></pre></td></tr></table></figure><h4 id="（4-2）配置-Redis"><a href="#（4-2）配置-Redis" class="headerlink" title="（4.2）配置 Redis"></a>（4.2）配置 Redis</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisConfig</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Logger LOGGER = LoggerFactory.getLogger(RedisConfig.class);</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Map&lt;String, Long&gt; CACHE_EXPIRE_MAP = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    CACHE_EXPIRE_MAP.put(<span class="string">"cache1"</span>, <span class="number">5</span> * <span class="number">60L</span>); <span class="comment">//second</span></span><br><span class="line">  &#125;</span><br><span class="line">    </span><br><span class="line">  <span class="meta">@Bean</span></span><br><span class="line">  <span class="function">RedisConnectionFactory <span class="title">redisConnectionFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    JedisConnectionFactory jedisConFactory = <span class="keyword">new</span> JedisConnectionFactory();</span><br><span class="line">    jedisConFactory.setHostName(<span class="string">"localhost"</span>);</span><br><span class="line">    jedisConFactory.setPort(<span class="number">6379</span>);</span><br><span class="line">    <span class="keyword">return</span> jedisConFactory;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Bean</span></span><br><span class="line">  <span class="function">StringRedisTemplate <span class="title">stringRedisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> StringRedisTemplate(redisConnectionFactory);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Bean</span></span><br><span class="line">  <span class="function">RedisTemplate <span class="title">redisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span> </span>&#123;</span><br><span class="line">    RedisTemplate template = <span class="keyword">new</span> RedisTemplate();</span><br><span class="line">    template.setConnectionFactory(redisConnectionFactory);</span><br><span class="line">    template.afterPropertiesSet();</span><br><span class="line">    <span class="comment">// 默认为 JdkSerializationRedisSerializer, 配合 @Cacheable 时 KEY 会有序列化值在中间</span></span><br><span class="line">    <span class="comment">// 使用 StringRedisSerializer 则不会如此</span></span><br><span class="line">    template.setKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">    <span class="keyword">return</span> template;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Bean</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> RedisCacheManager <span class="title">cacheManager</span><span class="params">(RedisTemplate redisTemplate)</span> </span>&#123;</span><br><span class="line">    RedisCacheManager cm = <span class="keyword">new</span> RedisCacheManager(redisTemplate);</span><br><span class="line">    cm.setCacheNames(CACHE_EXPIRE_MAP.keySet());</span><br><span class="line">    cm.setExpires(CACHE_EXPIRE_MAP);</span><br><span class="line">    cm.setUsePrefix(<span class="keyword">true</span>);</span><br><span class="line">    cm.setCachePrefix(cacheName -&gt; (cacheName + <span class="string">":"</span>).getBytes());</span><br><span class="line">    <span class="keyword">return</span> cm;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="（4-2）序列化实体类"><a href="#（4-2）序列化实体类" class="headerlink" title="（4.2）序列化实体类"></a>（4.2）序列化实体类</h4><p>Spring 在将实体类缓存到 Redis 中时进行了序列化操作，如果不对实体类进行序列化将会报错。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Customer</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String id;</span><br><span class="line">    <span class="keyword">public</span> String firstName;</span><br><span class="line">    <span class="keyword">public</span> String lastName;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Customer</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Customer</span><span class="params">(String firstName, String lastName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.firstName = firstName;</span><br><span class="line">        <span class="keyword">this</span>.lastName = lastName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="（4-3）在需要缓存的位置使用注解，并指定缓存名"><a href="#（4-3）在需要缓存的位置使用注解，并指定缓存名" class="headerlink" title="（4.3）在需要缓存的位置使用注解，并指定缓存名"></a>（4.3）在需要缓存的位置使用注解，并指定缓存名</h4><p>如果在使用 Redis 缓存时，没有指定缓存名，将会报错：<code>no cache could be resolved for at least one cache should be provided per cache operation</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomerRepository</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Cachable</span>(<span class="string">"cache1"</span>)</span><br><span class="line">    <span class="function">Customer <span class="title">getByFirstName</span><span class="params">(String firstName)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 这里应该是从数据库查询数据，DEMO 简省成直接新建了。</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Customer(firstName, <span class="string">"Jobs"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="（4-4）测试一下"><a href="#（4-4）测试一下" class="headerlink" title="（4.4）测试一下"></a>（4.4）测试一下</h4><p>测试代码同（3.3）。除此之外还可以通过 Redis CLI 检验缓存结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span> KEYS *</span><br><span class="line">1) "cache1:cb5775e6-1b39-4f63-85c8-13f134a54f32"</span><br><span class="line"><span class="meta">&gt;</span> GET "cache1:cb5775e6-1b39-4f63-85c8-13f134a54f32"</span><br><span class="line"><span class="meta">&gt;</span> TTL "cache1:cb5775e6-1b39-4f63-85c8-13f134a54f32"</span><br></pre></td></tr></table></figure><h2 id="更进一步"><a href="#更进一步" class="headerlink" title="更进一步"></a>更进一步</h2><h3 id="创建自定义的-KeyGenerator"><a href="#创建自定义的-KeyGenerator" class="headerlink" title="创建自定义的 KeyGenerator"></a>创建自定义的 KeyGenerator</h3><ol><li>使上述的 <code>RedisConfig</code> 继承 <code>CachingConfigurerSupport</code>，这一步很重要，否则创建自定义的 <code>KeyGenerator</code> 失败；</li><li>使用 <code>@Bean</code> 声明自定义的 <code>KeyGenerator</code>。代码如下：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisConfig</span> <span class="keyword">extends</span> <span class="title">CachingConfigurerSupport</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Bean</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> KeyGenerator <span class="title">keyGenerator</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> SimpleKeyGenerator() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> Object <span class="title">generate</span><span class="params">(Object target, Method method, Object... params)</span> </span>&#123;</span><br><span class="line">          <span class="comment">// 这里使用 [`] 分割参数，更进一步的还可以加入 method 名，或者直接重写一个 KeyGenerator。</span></span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">super</span>.generate(target, method, StringUtils.arrayToDelimitedString(params, <span class="string">"`"</span>));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，就可以覆盖 Spring Cache 默认的 <code>SimpleKeyGenerator</code> 了。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://spring.io/guides/gs/caching/" target="_blank" rel="noopener">Caching Data with Spring - spring.io</a></li><li><a href="https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-caching.html#boot-features-caching-provider-redis" target="_blank" rel="noopener">Caching - spring.io</a></li><li><a href="https://www.baeldung.com/spring-cache-tutorial" target="_blank" rel="noopener">A Guide To Caching in Spring - baeldung.com</a></li><li><a href="https://docs.spring.io/spring-data/redis/docs/2.1.3.RELEASE/reference/html/#redis.repositories.expirations" target="_blank" rel="noopener">Spring Data Redis</a></li><li><a href="https://www.cnblogs.com/morethink/p/7798602.html" target="_blank" rel="noopener">spring使用redis做缓存 - cnblogs.com</a></li><li><a href="https://www.baeldung.com/spring-cache-custom-keygenerator" target="_blank" rel="noopener">Spring Cache – Creating a Custom KeyGenerator</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;为什么要使用-Spring-Cache-管理缓存？&quot;&gt;&lt;a href=&quot;#为什么要使用-Spring-Cache-管理缓存？&quot; class=&quot;headerlink&quot; title=&quot;为什么要使用 Spring Cache 管理缓存？&quot;&gt;&lt;/a&gt;为什么要使用 Spri
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="java" scheme="https://linlshare.github.io/categories/it/java/"/>
    
      <category term="cache" scheme="https://linlshare.github.io/categories/it/java/cache/"/>
    
    
      <category term="Java" scheme="https://linlshare.github.io/tags/Java/"/>
    
      <category term="Spring" scheme="https://linlshare.github.io/tags/Spring/"/>
    
      <category term="Cache" scheme="https://linlshare.github.io/tags/Cache/"/>
    
  </entry>
  
  <entry>
    <title>Spring Data MongoDB</title>
    <link href="https://linlshare.github.io/2018/12/05/it/java/persistence/Spring%20Data%20MongoDB/"/>
    <id>https://linlshare.github.io/2018/12/05/it/java/persistence/Spring Data MongoDB/</id>
    <published>2018-12-05T06:25:40.000Z</published>
    <updated>2018-12-26T03:20:48.539Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h2><p>快速集成 MongoDB，不用写一行 MongoDB 的 CRUD 语句。而是使用 Spring Data 独有的方法命名方式定义数据库操作，并且可以方便地替换各种数据库，比如 MySQL。</p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="（0）开始之前"><a href="#（0）开始之前" class="headerlink" title="（0）开始之前"></a>（0）开始之前</h3><p>确保已有可连接的 MongoDB</p><h3 id="（1）依赖引入"><a href="#（1）依赖引入" class="headerlink" title="（1）依赖引入"></a>（1）依赖引入</h3><p>在 <code>build.gradle</code> 中添加如下依赖。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath(<span class="string">"org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'java'</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'org.springframework.boot'</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'io.spring.dependency-management'</span></span><br><span class="line"></span><br><span class="line">repositories &#123;</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sourceCompatibility = <span class="number">1.8</span></span><br><span class="line">targetCompatibility = <span class="number">1.8</span></span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compile(<span class="string">"org.springframework.boot:spring-boot-starter-data-mongodb"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（2）配置-MongoDB-连接"><a href="#（2）配置-MongoDB-连接" class="headerlink" title="（2）配置 MongoDB 连接"></a>（2）配置 MongoDB 连接</h3><p>这里配置了 MongoDB 的连接地址和使用的数据库，还配置了扫描 Repositories 的位置。Repositories 我们后面会讲到是什么。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableMongoRepositories</span>(basePackages = <span class="string">"com.example.dao"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MongoConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Bean</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> MongoOperations <span class="title">mongoTemplate</span><span class="params">()</span> <span class="keyword">throws</span> UnknownHostException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> MongoTemplate(mongoDbFactory());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Bean</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> MongoDbFactory <span class="title">mongoDbFactory</span><span class="params">()</span> <span class="keyword">throws</span> UnknownHostException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> SimpleMongoDbFactory(<span class="keyword">new</span> MongoClientURI(<span class="string">"mongodb://localhost:27017/test"</span>));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（3）定义一个简单的实体类"><a href="#（3）定义一个简单的实体类" class="headerlink" title="（3）定义一个简单的实体类"></a>（3）定义一个简单的实体类</h3><p>实体类是一个 POJO，不过会多一些注解。简单介绍下这些注解吧：</p><ol><li><code>@Document</code> ，用于自定义 MongoDB 中 Collection 的名称，<strong>默认情况下 collection 值为空，使用类名的小写形式作为 Collection 的名称</strong>；</li><li><code>@Id</code> ，用于指定 MongoDB 内部使用字段 <code>_id</code> 的值，如果不指定，则使用自动生成的值。</li><li><code>@Field</code> ，用于指定字段存储时的名称，如果不指定，则直接使用字段名。<strong>如果字段名为<code>id</code>，那么一定要使用该注解，否则会读取时使用系统的<code>_id</code>作为 <code>id</code> 的值</strong>。</li><li><code>@Indexed</code>，用于为指定字段添加索引，会调用 MongoDB 的 <code>createIndex</code> 方法。值得注意的是：<strong>必须 <code>@Document</code> 注解，否则不会自动生成索引</strong>。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Document</span>(collection = <span class="string">"Customer"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Customer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="keyword">public</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Indexed</span></span><br><span class="line">    <span class="meta">@Field</span>(<span class="string">"first_name"</span>)</span><br><span class="line">    <span class="keyword">public</span> String firstName;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Field</span>(<span class="string">"last_name"</span>)</span><br><span class="line">    <span class="keyword">public</span> String lastName;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Customer</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Customer</span><span class="params">(String firstName, String lastName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.firstName = firstName;</span><br><span class="line">        <span class="keyword">this</span>.lastName = lastName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（4）定义一个-Repository"><a href="#（4）定义一个-Repository" class="headerlink" title="（4）定义一个 Repository"></a>（4）定义一个 Repository</h3><p><code>MongoRepository</code> 中定义的基本的 CRUD 操作，你可以自定义查询方法，不过要遵守一定的规范，Spring Data MongoDB 会根据方法名和参数去执行数据库操作。这个规范参见下文 <u>支持的查询方法关键字列表</u>。此处只需要了解有 <code>findByXx</code> 的方法名即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CustomerRepository</span> <span class="keyword">extends</span> <span class="title">MongoRepository</span>&lt;<span class="title">Customer</span>, <span class="title">String</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Customer <span class="title">findByFirstName</span><span class="params">(String firstName)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Customer&gt; <span class="title">findByLastName</span><span class="params">(String lastName)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（5）让-Spring-Boot-自动装配-CustomerRepository"><a href="#（5）让-Spring-Boot-自动装配-CustomerRepository" class="headerlink" title="（5）让 Spring Boot 自动装配 CustomerRepository"></a>（5）让 Spring Boot 自动装配 CustomerRepository</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> <span class="keyword">implements</span> <span class="title">CommandLineRunner</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> CustomerRepository repository;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(Application.class, args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">repository.deleteAll();</span><br><span class="line"></span><br><span class="line"><span class="comment">// save a couple of customers</span></span><br><span class="line">repository.save(<span class="keyword">new</span> Customer(<span class="string">"Alice"</span>, <span class="string">"Smith"</span>));</span><br><span class="line">repository.save(<span class="keyword">new</span> Customer(<span class="string">"Bob"</span>, <span class="string">"Smith"</span>));</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"-------------------------------"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// fetch an individual customer</span></span><br><span class="line">System.out.println(repository.findByFirstName(<span class="string">"Alice"</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（6）使用-MongoDB-命令行查询"><a href="#（6）使用-MongoDB-命令行查询" class="headerlink" title="（6）使用 MongoDB 命令行查询"></a>（6）使用 MongoDB 命令行查询</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> mongo</span><br><span class="line"><span class="meta">&gt;</span> use test</span><br><span class="line"><span class="meta">&gt;</span> db.Customer.find(&#123;&#125;)</span><br></pre></td></tr></table></figure><h2 id="深入探讨"><a href="#深入探讨" class="headerlink" title="深入探讨"></a>深入探讨</h2><h3 id="常用的匹配注解列表"><a href="#常用的匹配注解列表" class="headerlink" title="常用的匹配注解列表"></a>常用的匹配注解列表</h3><table><thead><tr><th>Annotation</th><th>Desc</th></tr></thead><tbody><tr><td><code>@Id</code></td><td>用于指定 MongoDB 内部使用字段 <code>_id</code> 的值，如果不指定，则使用自动生成的值。</td></tr><tr><td><code>@Field</code></td><td>用于指定数据库中存储的字段名。</td></tr><tr><td><code>@Document</code></td><td>用于指定该类的实例对应 MongoDB 的某个指定 Collection 下的 Document。</td></tr><tr><td><code>@Indexed</code></td><td>用于为指定字段添加索引。<code>@Indexed(unique = true)</code> 可注解唯一键</td></tr><tr><td><code>@CompoundIndex</code></td><td>用于指定复合索引。</td></tr><tr><td><code>@Transient</code></td><td>用于将某些字段排除，不与数据库匹配。</td></tr><tr><td><code>@Version</code></td><td>用于指定字段的版本，默认值为 0，在每次更新字段后自增。</td></tr></tbody></table><p>复合索引用例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Document</span></span><br><span class="line"><span class="meta">@CompoundIndexes</span>(&#123;</span><br><span class="line">    <span class="comment">// lastName 升序，age 降序的复合索引，名称为 age_idx。</span></span><br><span class="line">    <span class="meta">@CompoundIndex</span>(name = <span class="string">"age_idx"</span>, def = <span class="string">"&#123;'lastName': 1, 'age': -1&#125;"</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span>&lt;<span class="title">T</span> <span class="keyword">extends</span> <span class="title">Address</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="支持的查询方法关键字列表"><a href="#支持的查询方法关键字列表" class="headerlink" title="支持的查询方法关键字列表"></a>支持的查询方法关键字列表</h3><table><thead><tr><th>Keyword</th><th>Sample</th><th>Logical result</th></tr></thead><tbody><tr><td><code>After</code></td><td><code>findByBirthdateAfter(Date date)</code></td><td><code>{&quot;birthdate&quot; : {&quot;$gt&quot; : date}}</code></td></tr><tr><td><code>GreaterThan</code></td><td><code>findByAgeGreaterThan(int age)</code></td><td><code>{&quot;age&quot; : {&quot;$gt&quot; : age}}</code></td></tr><tr><td><code>GreaterThanEqual</code></td><td><code>findByAgeGreaterThanEqual(int age)</code></td><td><code>{&quot;age&quot; : {&quot;$gte&quot; : age}}</code></td></tr><tr><td><code>Before</code></td><td><code>findByBirthdateBefore(Date date)</code></td><td><code>{&quot;birthdate&quot; : {&quot;$lt&quot; : date}}</code></td></tr><tr><td><code>LessThan</code></td><td><code>findByAgeLessThan(int age)</code></td><td><code>{&quot;age&quot; : {&quot;$lt&quot; : age}}</code></td></tr><tr><td><code>LessThanEqual</code></td><td><code>findByAgeLessThanEqual(int age)</code></td><td><code>{&quot;age&quot; : {&quot;$lte&quot; : age}}</code></td></tr><tr><td><code>Between</code></td><td><code>findByAgeBetween(int from, int to)</code></td><td><code>{&quot;age&quot; : {&quot;$gt&quot; : from, &quot;$lt&quot; : to}}</code></td></tr><tr><td><code>In</code></td><td><code>findByAgeIn(Collection ages)</code></td><td><code>{&quot;age&quot; : {&quot;$in&quot; : [ages…]}}</code></td></tr><tr><td><code>NotIn</code></td><td><code>findByAgeNotIn(Collection ages)</code></td><td><code>{&quot;age&quot; : {&quot;$nin&quot; : [ages…]}}</code></td></tr><tr><td><code>IsNotNull</code>, <code>NotNull</code></td><td><code>findByFirstnameNotNull()</code></td><td><code>{&quot;firstname&quot; : {&quot;$ne&quot; : null}}</code></td></tr><tr><td><code>IsNull</code>, <code>Null</code></td><td><code>findByFirstnameNull()</code></td><td><code>{&quot;firstname&quot; : null}</code></td></tr><tr><td><code>Like</code>, <code>StartingWith</code>, <code>EndingWith</code></td><td><code>findByFirstnameLike(String name)</code></td><td><code>{&quot;firstname&quot; : name} (name as regex)</code></td></tr><tr><td><code>NotLike</code>, <code>IsNotLike</code></td><td><code>findByFirstnameNotLike(String name)</code></td><td><code>{&quot;firstname&quot; : { &quot;$not&quot; : name }} (name as regex)</code></td></tr><tr><td><code>Containing</code> on String</td><td><code>findByFirstnameContaining(String name)</code></td><td><code>{&quot;firstname&quot; : name} (name as regex)</code></td></tr><tr><td><code>NotContaining</code> on String</td><td><code>findByFirstnameNotContaining(String name)</code></td><td><code>{&quot;firstname&quot; : { &quot;$not&quot; : name}} (name as regex)</code></td></tr><tr><td><code>Containing</code> on Collection</td><td><code>findByAddressesContaining(Address address)</code></td><td><code>{&quot;addresses&quot; : { &quot;$in&quot; : address}}</code></td></tr><tr><td><code>NotContaining</code> on Collection</td><td><code>findByAddressesNotContaining(Address address)</code></td><td><code>{&quot;addresses&quot; : { &quot;$not&quot; : { &quot;$in&quot; : address}}}</code></td></tr><tr><td><code>Regex</code></td><td><code>findByFirstnameRegex(String firstname)</code></td><td><code>{&quot;firstname&quot; : {&quot;$regex&quot; : firstname }}</code></td></tr><tr><td><code>(No keyword)</code></td><td><code>findByFirstname(String name)</code></td><td><code>{&quot;firstname&quot; : name}</code></td></tr><tr><td><code>Not</code></td><td><code>findByFirstnameNot(String name)</code></td><td><code>{&quot;firstname&quot; : {&quot;$ne&quot; : name}}</code></td></tr><tr><td><code>Near</code></td><td><code>findByLocationNear(Point point)</code></td><td><code>{&quot;location&quot; : {&quot;$near&quot; : [x,y]}}</code></td></tr><tr><td><code>Near</code></td><td><code>findByLocationNear(Point point, Distance max)</code></td><td><code>{&quot;location&quot; : {&quot;$near&quot; : [x,y], &quot;$maxDistance&quot; : max}}</code></td></tr><tr><td><code>Near</code></td><td><code>findByLocationNear(Point point, Distance min, Distance max)</code></td><td><code>{&quot;location&quot; : {&quot;$near&quot; : [x,y], &quot;$minDistance&quot; : min, &quot;$maxDistance&quot; : max}}</code></td></tr><tr><td><code>Within</code></td><td><code>findByLocationWithin(Circle circle)</code></td><td><code>{&quot;location&quot; : {&quot;$geoWithin&quot; : {&quot;$center&quot; : [ [x, y], distance]}}}</code></td></tr><tr><td><code>Within</code></td><td><code>findByLocationWithin(Box box)</code></td><td><code>{&quot;location&quot; : {&quot;$geoWithin&quot; : {&quot;$box&quot; : [ [x1, y1], x2, y2]}}}</code></td></tr><tr><td><code>IsTrue</code>, <code>True</code></td><td><code>findByActiveIsTrue()</code></td><td><code>{&quot;active&quot; : true}</code></td></tr><tr><td><code>IsFalse</code>, <code>False</code></td><td><code>findByActiveIsFalse()</code></td><td><code>{&quot;active&quot; : false}</code></td></tr><tr><td><code>Exists</code></td><td><code>findByLocationExists(boolean exists)</code></td><td><code>{&quot;location&quot; : {&quot;$exists&quot; : exists }}</code></td></tr></tbody></table><blockquote><p>Tip：将以上的 <code>findBy</code> 替换成 <code>deleteBy</code> 含义就变成了：查找后进行删除操作。</p></blockquote><p>下面是一个使用示例：查询指定状态集合的 JobFlow。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方式一：使用 SqEL(Spring 表达式)</span></span><br><span class="line"><span class="meta">@Query</span>(<span class="string">"&#123; 'status': &#123; $in: ?0 &#125; &#125;"</span>)</span><br><span class="line"><span class="function">List&lt;JobFlow&gt; <span class="title">findByStatus</span><span class="params">(String... status)</span></span>;</span><br><span class="line"><span class="comment">// 方式二：使用 In</span></span><br><span class="line"><span class="function">List&lt;JobFlow&gt; <span class="title">findByStatusIn</span><span class="params">(List&lt;String&gt; statusList)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="save-的原理"><a href="#save-的原理" class="headerlink" title="save 的原理"></a>save 的原理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SimpleMongoRepository.java</span></span><br><span class="line"><span class="keyword">public</span> &lt;S extends T&gt; <span class="function">S <span class="title">save</span><span class="params">(S entity)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Assert.notNull(entity, <span class="string">"Entity must not be null!"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (entityInformation.isNew(entity)) &#123;</span><br><span class="line">        mongoOperations.insert(entity, entityInformation.getCollectionName());</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        mongoOperations.save(entity, entityInformation.getCollectionName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> entity;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> &lt;S extends T&gt; <span class="function">List&lt;S&gt; <span class="title">save</span><span class="params">(Iterable&lt;S&gt; entities)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Assert.notNull(entities, <span class="string">"The given Iterable of entities not be null!"</span>);</span><br><span class="line"></span><br><span class="line">    List&lt;S&gt; result = convertIterableToList(entities);</span><br><span class="line">    <span class="keyword">boolean</span> allNew = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (S entity : entities) &#123;</span><br><span class="line">        <span class="keyword">if</span> (allNew &amp;&amp; !entityInformation.isNew(entity)) &#123;</span><br><span class="line">            allNew = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (allNew) &#123;</span><br><span class="line">        mongoOperations.insertAll(result);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (S entity : result) &#123;</span><br><span class="line">            save(entity);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// AbstractEntityInformation.java</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isNew</span><span class="params">(T entity)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    ID id = getId(entity);</span><br><span class="line">    Class&lt;ID&gt; idType = getIdType();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!idType.isPrimitive()) &#123;</span><br><span class="line">        <span class="keyword">return</span> id == <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (id <span class="keyword">instanceof</span> Number) &#123;</span><br><span class="line">        <span class="keyword">return</span> ((Number) id).longValue() == <span class="number">0L</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(String.format(<span class="string">"Unsupported primitive id type %s!"</span>, idType));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://docs.spring.io/spring-data/mongodb/docs/current/reference/html/#repositories.create-instances.spring" target="_blank" rel="noopener">Spring Data MongoDB - Reference Documentation - spring.io</a></li><li><a href="https://spring.io/guides/gs/accessing-data-mongodb/" target="_blank" rel="noopener">Accessing Data with MongoDB - spring.io</a></li><li><a href="https://docs.spring.io/spring-data/data-commons/docs/1.6.1.RELEASE/reference/html/repositories.html" target="_blank" rel="noopener">Working with Spring Data Repositories - spring.io</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;用途&quot;&gt;&lt;a href=&quot;#用途&quot; class=&quot;headerlink&quot; title=&quot;用途&quot;&gt;&lt;/a&gt;用途&lt;/h2&gt;&lt;p&gt;快速集成 MongoDB，不用写一行 MongoDB 的 CRUD 语句。而是使用 Spring Data 独有的方法命名方式定义数据库操作
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="java" scheme="https://linlshare.github.io/categories/it/java/"/>
    
      <category term="persistence" scheme="https://linlshare.github.io/categories/it/java/persistence/"/>
    
    
      <category term="Java" scheme="https://linlshare.github.io/tags/Java/"/>
    
      <category term="Spring" scheme="https://linlshare.github.io/tags/Spring/"/>
    
      <category term="MongoDB" scheme="https://linlshare.github.io/tags/MongoDB/"/>
    
  </entry>
  
</feed>
