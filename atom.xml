<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Share 杂志</title>
  <icon>https://www.gravatar.com/avatar/67398ac80b713195e4e6faee10834ea3</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://linlshare.github.io/"/>
  <updated>2018-11-20T12:43:46.663Z</updated>
  <id>https://linlshare.github.io/</id>
  
  <author>
    <name>Lshare</name>
    <email>Lshare@outlook.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Markdown 使用笔记</title>
    <link href="https://linlshare.github.io/2018/11/20/it/tool/Markdown%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>https://linlshare.github.io/2018/11/20/it/tool/Markdown 使用笔记/</id>
    <published>2018-11-20T12:41:20.000Z</published>
    <updated>2018-11-20T12:43:46.663Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在表格中输入管道符（-）"><a href="#在表格中输入管道符（-）" class="headerlink" title="在表格中输入管道符（|）"></a>在表格中输入管道符（|）</h2><p>管道符与表格分隔字段用的相冲突，会导致表格显示不正常，解决方案是：使用 <code>&amp;#124;</code>  代替 <code>|</code> 。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;在表格中输入管道符（-）&quot;&gt;&lt;a href=&quot;#在表格中输入管道符（-）&quot; class=&quot;headerlink&quot; title=&quot;在表格中输入管道符（|）&quot;&gt;&lt;/a&gt;在表格中输入管道符（|）&lt;/h2&gt;&lt;p&gt;管道符与表格分隔字段用的相冲突，会导致表格显示不正常，解决方
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="tool" scheme="https://linlshare.github.io/categories/it/tool/"/>
    
    
      <category term="Markdown" scheme="https://linlshare.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Xpath 使用笔记</title>
    <link href="https://linlshare.github.io/2018/11/20/it/robot/Xpath%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>https://linlshare.github.io/2018/11/20/it/robot/Xpath 使用笔记/</id>
    <published>2018-11-20T11:38:55.000Z</published>
    <updated>2018-11-20T12:41:00.671Z</updated>
    
    <content type="html"><![CDATA[<h2 id="何为-Xpath（Introduction）"><a href="#何为-Xpath（Introduction）" class="headerlink" title="何为 Xpath（Introduction）"></a>何为 Xpath（Introduction）</h2><p><a href="https://zh.wikipedia.org/zh-hans/XPath" target="_blank" rel="noopener">维基百科</a>：XPath 即为 XML 路径语言（XML Path Language），它是一种用来确定XML文档中某部分位置的语言。 XPath基于XML的树状结构，提供在数据结构树中找寻节点的能力。</p><p>所谓节点有七种，分别是：</p><ul><li>元素（element）</li><li>属性（attribute）</li><li>文本（text）</li><li>命名空间（namespace）</li><li>处理指令（processing-instruction）</li><li>注释（comment）</li><li>文档节点（document node, also called root element）</li></ul><p>示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bookstore</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">book</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span>Harry Potter<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">author</span>&gt;</span>J K. Rowling<span class="tag">&lt;/<span class="name">author</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">year</span>&gt;</span>2005<span class="tag">&lt;/<span class="name">year</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">price</span>&gt;</span>29.99<span class="tag">&lt;/<span class="name">price</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bookstore</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中，</p><ul><li><code>&lt;bookstore&gt;</code> 为根节点，或者称为文档节点；</li><li><code>&lt;title lang=&quot;en&quot;&gt;Harry Potter&lt;/title&gt;</code> 为元素节点；</li><li><code>lang=&quot;en&quot;</code> 为属性节点；</li><li><code>Harry Potter</code> 为文本节点。</li></ul><h2 id="基础语法（Syntax）"><a href="#基础语法（Syntax）" class="headerlink" title="基础语法（Syntax）"></a>基础语法（Syntax）</h2><h3 id="路径表达式（Path-Expressions）"><a href="#路径表达式（Path-Expressions）" class="headerlink" title="路径表达式（Path Expressions）"></a>路径表达式（Path Expressions）</h3><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td>nodename</td><td>选取此节点的所有子节点。</td></tr><tr><td>/</td><td>从根节点选取。</td></tr><tr><td>//</td><td>从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。</td></tr><tr><td>.</td><td>选取当前节点。</td></tr><tr><td>..</td><td>选取当前节点的父节点。</td></tr><tr><td>@</td><td>选取属性。</td></tr><tr><td>text()</td><td>选取文本。</td></tr></tbody></table><h3 id="断言（Predicates）"><a href="#断言（Predicates）" class="headerlink" title="断言（Predicates）"></a>断言（Predicates）</h3><p>断言被用来在查找指定的节点或者包含指定值的节点，通常放在方括号 <code>[]</code> 中。</p><p>示例：</p><table><thead><tr><th>路径表达式</th><th>结果</th></tr></thead><tbody><tr><td>/bookstore/book[1]</td><td>选取属于 bookstore 子元素的第一个 book 元素。</td></tr><tr><td>/bookstore/book[last()]</td><td>选取属于 bookstore 子元素的最后一个 book 元素。</td></tr><tr><td>/bookstore/book[last()-1]</td><td>选取属于 bookstore 子元素的倒数第二个 book 元素。</td></tr><tr><td>/bookstore/book[position()&lt;3]</td><td>选取最前面的两个属于 bookstore 元素的子元素的 book 元素。</td></tr><tr><td>//title[@lang]</td><td>选取所有拥有名为 lang 的属性的 title 元素。</td></tr><tr><td>//title[@lang=’eng’]</td><td>选取所有 title 元素，且这些元素拥有值为 eng 的 lang 属性。</td></tr><tr><td>//book[author[text()=’J K. Rowling’]]</td><td>选取 author 为 J K. Rowling 的 book 元素。</td></tr><tr><td>/bookstore/book[price&gt;35.00]</td><td>选取 bookstore 元素的所有 book 元素，且其中的 price 元素的值须大于 35.00。</td></tr><tr><td>/bookstore/book[price&gt;35.00]/title</td><td>选取 bookstore 元素中的 book 元素的所有 title 元素，且其中的 price 元素的值须大于 35.00。</td></tr></tbody></table><h3 id="模糊选取（Selecting-Unknown-Nodes）"><a href="#模糊选取（Selecting-Unknown-Nodes）" class="headerlink" title="模糊选取（Selecting Unknown Nodes）"></a>模糊选取（Selecting Unknown Nodes）</h3><table><thead><tr><th>通配符</th><th>描述</th></tr></thead><tbody><tr><td>*</td><td>匹配任何元素节点。</td></tr><tr><td>@*</td><td>匹配任何属性节点。</td></tr><tr><td>node()</td><td>匹配任何类型的节点。</td></tr></tbody></table><h3 id="合并选取（Selecting-Several-Paths）"><a href="#合并选取（Selecting-Several-Paths）" class="headerlink" title="合并选取（Selecting Several Paths）"></a>合并选取（Selecting Several Paths）</h3><p>使用管道符 <code>|</code>  合并两个选取结果。</p><p>示例：</p><table><thead><tr><th>路径表达式</th><th>结果</th></tr></thead><tbody><tr><td>//book/title&#124; //book/price</td><td>选取 book 元素的所有 title 和 price 元素。</td></tr><tr><td>//title &#124;  //price</td><td>选取文档中的所有 title 和 price 元素。</td></tr><tr><td>/bookstore/book/title &#124; //price</td><td>选取属于 bookstore 元素的 book 元素的所有 title 元素，以及文档中所有的 price 元素。</td></tr></tbody></table><h2 id="正则匹配（Regular-Match）"><a href="#正则匹配（Regular-Match）" class="headerlink" title="正则匹配（Regular Match）"></a>正则匹配（Regular Match）</h2><p>可以使用 <code>starts-with</code> 和 <code>ends-with</code> 进行简单的正则匹配。</p><p>比如获取 Github 上某仓库的星星数的 Xpath 为，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//div/a[ends-with(@href, &apos;stargazers&apos;)]/text()</span><br></pre></td></tr></table></figure><p> 表示获取 <code>div</code> 节点下的具备有属性为 <code>href</code>且值为 <code>stargazers</code> 结尾的 <code>a</code> 节点的文本内容。</p><h2 id="测试我的-Xpath（Test-Xpath）"><a href="#测试我的-Xpath（Test-Xpath）" class="headerlink" title="测试我的 Xpath（Test Xpath）"></a>测试我的 Xpath（Test Xpath）</h2><p> 可以使用 freeformatter.com 上提供的 <a href="https://www.freeformatter.com/xpath-tester.html" target="_blank" rel="noopener">Xpath Tester</a> 进行在线测试。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;何为-Xpath（Introduction）&quot;&gt;&lt;a href=&quot;#何为-Xpath（Introduction）&quot; class=&quot;headerlink&quot; title=&quot;何为 Xpath（Introduction）&quot;&gt;&lt;/a&gt;何为 Xpath（Introductio
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="robot" scheme="https://linlshare.github.io/categories/it/robot/"/>
    
    
      <category term="Java" scheme="https://linlshare.github.io/tags/Java/"/>
    
      <category term="Robot" scheme="https://linlshare.github.io/tags/Robot/"/>
    
      <category term="Xpath" scheme="https://linlshare.github.io/tags/Xpath/"/>
    
  </entry>
  
  <entry>
    <title>Selenium 使用笔记</title>
    <link href="https://linlshare.github.io/2018/11/20/it/robot/Selenium%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>https://linlshare.github.io/2018/11/20/it/robot/Selenium 使用笔记/</id>
    <published>2018-11-20T09:18:59.000Z</published>
    <updated>2018-11-20T09:53:49.796Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装-Selenium"><a href="#安装-Selenium" class="headerlink" title="安装 Selenium"></a>安装 Selenium</h2><p><strong>（1）Java 编程环境下</strong></p><p>针对 Gradle</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'org.seleniumhq.selenium:selenium-java:RELEASE'</span></span><br></pre></td></tr></table></figure><p> 针对 Maven</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.seleniumhq.selenium<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>selenium-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>（2）Python 编程环境下</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install selenium</span><br></pre></td></tr></table></figure><h2 id="安装和配置-Driver"><a href="#安装和配置-Driver" class="headerlink" title="安装和配置 Driver"></a>安装和配置 Driver</h2><h3 id="下载-Driver"><a href="#下载-Driver" class="headerlink" title="下载 Driver"></a>下载 Driver</h3><p>不同的操作系统和浏览器有不同的 Driver 需根据需求选取：</p><ul><li>Chrome <a href="https://sites.google.com/a/chromium.org/chromedriver/downloads" target="_blank" rel="noopener">driver</a></li><li>Edge <a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/" target="_blank" rel="noopener">driver</a></li><li>Firefox <a href="https://github.com/mozilla/geckodriver/releases" target="_blank" rel="noopener">driver</a></li><li>Safari <a href="https://webkit.org/blog/6900/webdriver-support-in-safari-10/" target="_blank" rel="noopener">driver</a></li></ul><h3 id="配置-Driver（以-Mac-Linux-为例）"><a href="#配置-Driver（以-Mac-Linux-为例）" class="headerlink" title="配置 Driver（以 Mac/Linux 为例）"></a>配置 Driver（以 Mac/Linux 为例）</h3><p>（1）将下载的 driver zip 压缩包解压</p><p>（2）将文件复制到系统的 bin 目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp path/to/driver /usr/local/bin</span><br></pre></td></tr></table></figure><p>（3）赋予 driver 可执行权限（以chromdriver为例）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod a+x /usr/local/bin/chromdriver</span><br></pre></td></tr></table></figure><blockquote><p>注意：Driver 的版本是跟 Selenium 相匹配的，如果发现有 NoSuchMethodError，请更新两者版本到最新稳定版。</p></blockquote><h2 id="自动生成-Selenium-代码"><a href="#自动生成-Selenium-代码" class="headerlink" title="自动生成 Selenium 代码"></a>自动生成 Selenium 代码</h2><p>在 Firefox 中安装插件 <a href="https://addons.mozilla.org/en-US/firefox/addon/katalon-automation-record/" target="_blank" rel="noopener">Katalon Recorder</a> 可以方便地进行录制用户行为，然后导出各个语言环境下的 Selenium 代码。使用路径：Record –&gt; [Some interactions] –&gt; Stop –&gt; Export。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装-Selenium&quot;&gt;&lt;a href=&quot;#安装-Selenium&quot; class=&quot;headerlink&quot; title=&quot;安装 Selenium&quot;&gt;&lt;/a&gt;安装 Selenium&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;（1）Java 编程环境下&lt;/strong&gt;&lt;/p&gt;
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="robot" scheme="https://linlshare.github.io/categories/it/robot/"/>
    
    
      <category term="Java" scheme="https://linlshare.github.io/tags/Java/"/>
    
      <category term="Robot" scheme="https://linlshare.github.io/tags/Robot/"/>
    
      <category term="Selenium" scheme="https://linlshare.github.io/tags/Selenium/"/>
    
  </entry>
  
  <entry>
    <title>周记 20181118</title>
    <link href="https://linlshare.github.io/2018/11/18/thinking/weekly/%E5%91%A8%E8%AE%B0%2020181118/"/>
    <id>https://linlshare.github.io/2018/11/18/thinking/weekly/周记 20181118/</id>
    <published>2018-11-18T15:19:05.000Z</published>
    <updated>2018-11-18T16:21:52.876Z</updated>
    
    <content type="html"><![CDATA[<p>又翻起了《瓦尔登湖》，一本自高中就伴随着我的书，王义国的译本。记得当时是在家附近的一所书店里买的，店里有卖各种盗版教辅书。书的纸质很粗糙，也不知是因为用了再生纸还是本身就是盗版的。不过，如今纸张愈加泛黄了，与书里节俭和自然的精神倒是挺配的。</p><p>每次拾起这本书都觉内心似泛着粼粼微波的湖面般平静，不管对现实有多大的不满足，对世界有什么欲求，都在此刻停止了，只觉得此刻的宁静是一种享受，很少有人能享受这份宁静，而我在这里找到了。</p><p>梭罗绝对是一个生活的冒险家，他认为当生活的必需品（食物、栖息处、衣服和燃料）满足之后，就应该开始生活的冒险，就像植物一样，根扎好了就要向上开花结果；而不是继续去追求奢侈品，或者说非必需品，那是一种被物役的表现，智者不为。</p><p>对待劳作，梭罗说：<code>劳作的人日复一日，都没有闲情逸致获得一种真正的人格</code>。劳作不息人就如机器，失去了人格。故而要好好对待自己的时间，合理平衡工作和生活，健全自己的人格才是。</p><p>对于生活，梭罗说：<code>芸芸众生过的生活是既安静又绝望</code>，又说：<code>老的行为是让老年人来做的，而新的行为则是让年轻人来做</code>。这是说不要只听老人言而不动脑，不要老是在旧的生活方式中打转，要敢于尝试新的东西，不要害怕失败，不要听天由命。</p><p>论及衣服，梭罗认为舒适保暖的衣服才是恰当的，像国王和王后一套衣服只穿一次的不过是挂新衣服的衣架罢了，并不知道一套合身衣服的舒适之处。同时，他也指出<code>文明国家是以衣取人的</code>。</p><p>说到房屋，梭罗比喻成是人类最外层的衣服，其最初的目的还是保暖。文明所创造出的现代房屋对大多数人来说是不必要的，因为<code>文明创造出了宫殿，但要创造出贵族和国王来却并不这么容易</code>。他认为我们的家具应该像印第安人和阿拉伯人一样简单，应该把家里乱七八糟的家具扔掉，以减少清晨清扫的工作，从而不被家具或者说现代房屋所奴役。</p><p>以上是我重温第一章节俭部分记录或划线的。《瓦尔登湖》是一本值得终身阅读的书，当时读不懂，只觉得读起来心情很平静，现在又多了一些体悟，说不定以后还会有更多的感受。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;又翻起了《瓦尔登湖》，一本自高中就伴随着我的书，王义国的译本。记得当时是在家附近的一所书店里买的，店里有卖各种盗版教辅书。书的纸质很粗糙，也不知是因为用了再生纸还是本身就是盗版的。不过，如今纸张愈加泛黄了，与书里节俭和自然的精神倒是挺配的。&lt;/p&gt;
&lt;p&gt;每次拾起这本书都觉
      
    
    </summary>
    
      <category term="thinking" scheme="https://linlshare.github.io/categories/thinking/"/>
    
      <category term="weekly" scheme="https://linlshare.github.io/categories/thinking/weekly/"/>
    
    
      <category term="自省" scheme="https://linlshare.github.io/tags/%E8%87%AA%E7%9C%81/"/>
    
      <category term="周记" scheme="https://linlshare.github.io/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>aws 使用笔记</title>
    <link href="https://linlshare.github.io/2018/11/09/it/java/aws/aws%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>https://linlshare.github.io/2018/11/09/it/java/aws/aws 使用笔记/</id>
    <published>2018-11-09T09:54:48.000Z</published>
    <updated>2018-11-09T10:11:58.913Z</updated>
    
    <content type="html"><![CDATA[<h3 id="清除配置的-access-key（clear-the-credentials-in-aws-configure）"><a href="#清除配置的-access-key（clear-the-credentials-in-aws-configure）" class="headerlink" title="清除配置的 access key（clear the credentials in aws configure）"></a>清除配置的 access key（clear the credentials in aws configure）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> rm -rf ~/.aws/credentials</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;清除配置的-access-key（clear-the-credentials-in-aws-configure）&quot;&gt;&lt;a href=&quot;#清除配置的-access-key（clear-the-credentials-in-aws-configure）&quot; class=
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="java" scheme="https://linlshare.github.io/categories/it/java/"/>
    
      <category term="aws" scheme="https://linlshare.github.io/categories/it/java/aws/"/>
    
    
      <category term="Java" scheme="https://linlshare.github.io/tags/Java/"/>
    
      <category term="aws" scheme="https://linlshare.github.io/tags/aws/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB 使用笔记</title>
    <link href="https://linlshare.github.io/2018/11/09/it/java/base/MongoDB%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>https://linlshare.github.io/2018/11/09/it/java/base/MongoDB 使用笔记/</id>
    <published>2018-11-09T03:45:03.000Z</published>
    <updated>2018-11-12T02:14:43.326Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Mac 用户可以直接使用 Homebrew 安装，命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo brew install mongodb</span><br></pre></td></tr></table></figure><p>也可以自己到 <a href="https://www.mongodb.com/download-center/community" target="_blank" rel="noopener">MongoDB 的下载中心</a> 下载并配置环境变量，如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> export PATH=&#123;MONGODB_DIR&#125;/bin:$PATH</span><br></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> &#123;mongo_db_file_path&#125; 为指定的数据库文件存放位置，不支持~符号。如果使用默认位置 /data/db ，也需要先手动创建。</span><br><span class="line"><span class="meta">$</span> mongod --dbpath=&#123;mongo_db_file_path&#125;</span><br></pre></td></tr></table></figure><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><p>（1）本地连接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> mongo</span><br></pre></td></tr></table></figure><p>（2）远程连接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> mongo</span><br><span class="line"><span class="meta">&gt;</span> mongodb://admin:123456@localhost/</span><br></pre></td></tr></table></figure><h2 id="操作数据库"><a href="#操作数据库" class="headerlink" title="操作数据库"></a>操作数据库</h2><h3 id="database-级别"><a href="#database-级别" class="headerlink" title="database 级别"></a>database 级别</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 列出所有的数据库</span><br><span class="line"><span class="meta">&gt;</span> show dbs</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看当前使用的数据库</span><br><span class="line"><span class="meta">&gt;</span> db</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 切换当前使用的数据库</span><br><span class="line"><span class="meta">&gt;</span> use a_db</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 创建数据库</span><br><span class="line"><span class="meta">&gt;</span> use new_db</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 删除数据库</span><br><span class="line"><span class="meta">&gt;</span> db.dropDatabase()</span><br></pre></td></tr></table></figure><h3 id="collection-级别"><a href="#collection-级别" class="headerlink" title="collection 级别"></a>collection 级别</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 显示数据库中的所有 collection</span><br><span class="line"><span class="meta">&gt;</span> show collections</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 列出 collection 中的所有列</span><br><span class="line"><span class="meta">&gt;</span> db.a_collection.find()</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 删除 collection</span><br><span class="line"><span class="meta">&gt;</span> db.a_collection.drop()</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 新建 collection</span><br><span class="line"><span class="meta">&gt;</span> db.createCollection("new_collection")</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 重命名 collection</span><br><span class="line"><span class="meta">&gt;</span> db.a_collection.renameCollection("new_name")</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 清空 collection 中数据</span><br><span class="line"><span class="meta">&gt;</span> db.a_collection.drop(&#123;&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;Mac 用户可以直接使用 Homebrew 安装，命令如下：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;ta
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="java" scheme="https://linlshare.github.io/categories/it/java/"/>
    
      <category term="base" scheme="https://linlshare.github.io/categories/it/java/base/"/>
    
    
      <category term="Java" scheme="https://linlshare.github.io/tags/Java/"/>
    
      <category term="MongoDB" scheme="https://linlshare.github.io/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>Gradle 使用笔记</title>
    <link href="https://linlshare.github.io/2018/11/07/it/tool/Gradle%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>https://linlshare.github.io/2018/11/07/it/tool/Gradle 使用笔记/</id>
    <published>2018-11-07T11:44:00.000Z</published>
    <updated>2018-11-07T13:13:55.141Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用初始化配置"><a href="#使用初始化配置" class="headerlink" title="使用初始化配置"></a>使用初始化配置</h3><p>（1）场景</p><p>当需要所有的 gradle 项目都进行同样的配置时。</p><p>（2）过程</p><ol><li>在 <code>USER_HOME/.gradle</code> 目录创建名为 <code>init.gradle</code>的文本文件；</li><li>在 <code>init.gradle</code> 编写初始化脚本。</li></ol><p>（3）案例：配置自建的 Maven 私有服务器</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// init.gradle</span></span><br><span class="line">allprojects &#123;</span><br><span class="line"> </span><br><span class="line">  ext.RepoConfigurator = &#123;</span><br><span class="line">    maven &#123;</span><br><span class="line">      url <span class="string">'http://maven-xx-inc.com/repository/maven-public/'</span></span><br><span class="line">    &#125;</span><br><span class="line">    maven &#123;</span><br><span class="line">      url <span class="string">'http://nexus.mobisummer-inc.com/nexus/content/groups/public'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  buildscript.repositories RepoConfigurator</span><br><span class="line">  repositories RepoConfigurator</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;使用初始化配置&quot;&gt;&lt;a href=&quot;#使用初始化配置&quot; class=&quot;headerlink&quot; title=&quot;使用初始化配置&quot;&gt;&lt;/a&gt;使用初始化配置&lt;/h3&gt;&lt;p&gt;（1）场景&lt;/p&gt;
&lt;p&gt;当需要所有的 gradle 项目都进行同样的配置时。&lt;/p&gt;
&lt;p&gt;（2）
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="tool" scheme="https://linlshare.github.io/categories/it/tool/"/>
    
    
      <category term="Gradle" scheme="https://linlshare.github.io/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>周记 20181140</title>
    <link href="https://linlshare.github.io/2018/11/04/thinking/weekly/%E5%91%A8%E8%AE%B0%2020181104/"/>
    <id>https://linlshare.github.io/2018/11/04/thinking/weekly/周记 20181104/</id>
    <published>2018-11-04T13:51:00.000Z</published>
    <updated>2018-11-04T14:43:52.948Z</updated>
    
    <content type="html"><![CDATA[<p>已经决定挑战，往后台方向发展了。接手了一个爬虫框架的设计和开发任务，但心里其实没底的，因为不曾独立设计和开发过一个框架，对 Java EE 世界中的各种框架其实也不甚了解。但还是硬着头皮上了，花了两三天阅读已有案例的设计文档、代码，并亲手画出一个既有框架的类图，画了又睡，睡了又画。成了之后找框架的设计者聊了一下，消解了设计上的一些疑惑。然，接下来才是重头戏，要基于此抽取并加入新的模块设计，编码还没到时候呢。加油吧，到时候多总结下。</p><p><img src="/2018/11/04/thinking/weekly/周记 20181104/code_design.png" alt="亲手画的类图，不努力的时候看一下"></p><p>另外，这几天不知为何睡眠质量很差，几乎没有深度睡眠，晚上早睡睡不着，早上四五点就自然醒了，搞得预定的任务缩水了。不过今晚研究《甲骨文简易词典》时倒是气定神闲，脑壳没有沉重的感觉，可能我比较适合从事文字学特别是汉字学的工作也不一定。</p><p>阅读《枕草子》时读到一首和歌很感动，原文是这样的：</p><blockquote><p>心是地下逝水在翻滚了</p><p>不言语，但相思</p><p>还胜似语话</p></blockquote><p>中宫久不见清少纳言，托人送信，信中引用该和歌，只写着  <code>不言语，但相思</code> ，令少纳言读后顿时落泪，过几天后就进宫去了。她们见面的情形大概可以用《鹊桥仙·纤云弄巧》里的 <code>金风玉露一相逢，便胜却，人间无数</code> （最近想起这句词，不自觉地背起来了）来表达了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;已经决定挑战，往后台方向发展了。接手了一个爬虫框架的设计和开发任务，但心里其实没底的，因为不曾独立设计和开发过一个框架，对 Java EE 世界中的各种框架其实也不甚了解。但还是硬着头皮上了，花了两三天阅读已有案例的设计文档、代码，并亲手画出一个既有框架的类图，画了又睡，睡
      
    
    </summary>
    
      <category term="thinking" scheme="https://linlshare.github.io/categories/thinking/"/>
    
      <category term="weekly" scheme="https://linlshare.github.io/categories/thinking/weekly/"/>
    
    
      <category term="自省" scheme="https://linlshare.github.io/tags/%E8%87%AA%E7%9C%81/"/>
    
      <category term="周记" scheme="https://linlshare.github.io/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Pipeline 模型</title>
    <link href="https://linlshare.github.io/2018/11/04/it/java/arch/Pipeline%20%E6%A8%A1%E5%9E%8B/"/>
    <id>https://linlshare.github.io/2018/11/04/it/java/arch/Pipeline 模型/</id>
    <published>2018-11-04T13:49:00.000Z</published>
    <updated>2018-11-04T13:49:45.863Z</updated>
    
    <content type="html"><![CDATA[<h3 id="解决的问题"><a href="#解决的问题" class="headerlink" title="解决的问题"></a>解决的问题</h3><p>解决并发效率问题，将任务拆分成流水线，然后多线程并发执行，比之单线程执行快。</p><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><ul><li>CPU 流水线</li><li>Tomcat 容器</li><li>Structs</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;解决的问题&quot;&gt;&lt;a href=&quot;#解决的问题&quot; class=&quot;headerlink&quot; title=&quot;解决的问题&quot;&gt;&lt;/a&gt;解决的问题&lt;/h3&gt;&lt;p&gt;解决并发效率问题，将任务拆分成流水线，然后多线程并发执行，比之单线程执行快。&lt;/p&gt;
&lt;h3 id=&quot;案例&quot;&gt;&lt;a 
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="java" scheme="https://linlshare.github.io/categories/it/java/"/>
    
      <category term="arch" scheme="https://linlshare.github.io/categories/it/java/arch/"/>
    
    
      <category term="Java" scheme="https://linlshare.github.io/tags/Java/"/>
    
      <category term="pipeline" scheme="https://linlshare.github.io/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>Java EE 世界的一些概念</title>
    <link href="https://linlshare.github.io/2018/10/29/it/java/base/Java%20EE%20%E4%B8%96%E7%95%8C%E7%9A%84%E4%B8%80%E4%BA%9B%E6%A6%82%E5%BF%B5/"/>
    <id>https://linlshare.github.io/2018/10/29/it/java/base/Java EE 世界的一些概念/</id>
    <published>2018-10-29T12:14:00.000Z</published>
    <updated>2018-10-30T11:07:12.099Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java-EE"><a href="#Java-EE" class="headerlink" title="Java EE"></a>Java EE</h2><p>Java平台企业版，2018年3月更名为 <strong>Jakarta EE</strong>。Jave EE 是一系列技术标准所组成的平台，包括：</p><ul><li>Servlet</li><li>EJB</li><li>JDBC</li><li>JSP</li><li>JSTL</li><li>…</li></ul><h2 id="服务器与容器（Server-and-Container）"><a href="#服务器与容器（Server-and-Container）" class="headerlink" title="服务器与容器（Server and Container）"></a>服务器与容器（Server and Container）</h2><h3 id="服务器的定义"><a href="#服务器的定义" class="headerlink" title="服务器的定义"></a>服务器的定义</h3><p>依<a href="https://zh.wikipedia.org/zh-cn/%E6%9C%8D%E5%8A%A1%E5%99%A8" target="_blank" rel="noopener"><em>维基</em></a>，服务器（软件）是指一个管理资源并为用户提供服务的计算机软件。可分为：</p><ul><li>文件服务器（File Server），提供文件存取服务。</li><li>数据库服务器（Database Server），提供数据库存取服务。</li><li>邮件服务器（Mail Server），提供邮件存取服务。</li><li><strong>网页服务器</strong>（Web Server），提供网页浏览服务，通常所说的 Web 服务器，含义更广，包括了应用程序服务器。</li><li>FTP 服务器（FTP Server），提供文件传输服务。</li><li><strong>应用程序服务器</strong>（Application Server），提供应用程序接口服务。</li><li><strong>代理服务器</strong>（Proxy Server），提供代理服务，分正向和反向代理。</li><li>…</li></ul><h3 id="正向代理（Forward-Proxy）与反向代理（Reverse-Proxy）"><a href="#正向代理（Forward-Proxy）与反向代理（Reverse-Proxy）" class="headerlink" title="正向代理（Forward Proxy）与反向代理（Reverse Proxy）"></a>正向代理（Forward Proxy）与反向代理（Reverse Proxy）</h3><p>正向代理和反向代理以代理对象为区分，正向代理代理的是客户端，而目标服务器对真实的客户端的请求是无感的；反向代理代理的是服务器群（或簇），而客户端对真实处理请求的服务器是无感的。更多信息参见：<a href="https://www.zhihu.com/question/24723688/answer/128105528" target="_blank" rel="noopener"><em>反向代理为何叫反向代理？ - 刘志军的回答 - 知乎</em></a>。</p><h3 id="容器的定义"><a href="#容器的定义" class="headerlink" title="容器的定义"></a>容器的定义</h3><p>该语境下的容器，既不是上街买菜用的容器，也不是存取其他类的集合（比如 List），而是一个运行在 JVM 的 Java 程序，本身作为一个组件的运行时 ，起组件与服务器之间的接口作用，实际上也可以称之为服务器软件，只是当处在大的服务器软件包裹下时，选择另一种称呼罢了。</p><p>随着网络服务的要求越来越复杂，开发人员使用规范和组件的概念将服务划分，组件实现了规范，容器运行着组件，最新的 <em>规范-组件-功能-容器</em> 对应关系如下：</p><table><thead><tr><th>规范</th><th>组件</th><th>功能</th><th>容器</th></tr></thead><tbody><tr><td>JSR 369</td><td>Servlet 4.0</td><td>Server Applet，服务端小程序，处理基于 HTTP 的 Web 请求，响应动态 Web 内容。</td><td>Servlet 容器</td></tr><tr><td>JSR 245</td><td>JSP 2.1</td><td>JavaServer Pages，实现动态网页，其基于 Servlet 技术，故 JSP 容器是 Servlet 容器的子集。</td><td>JSP 容器</td></tr><tr><td>JSR 220</td><td>EJB 3.0</td><td><a href="https://zh.wikipedia.org/zh-cn/EJB#EJB_3.0" target="_blank" rel="noopener">Enterprise JavaBean</a>，封装业务逻辑，包括 Session Bean，Entity Bean 和 Message Driven Bean。</td><td>EJB 容器</td></tr></tbody></table><h3 id="常见的-Web-服务器"><a href="#常见的-Web-服务器" class="headerlink" title="常见的 Web 服务器"></a>常见的 Web 服务器</h3><ul><li>Apache HTTP Server</li><li>Nginx</li><li>IIS</li><li>Tomcat</li><li>Jetty</li><li>WildFly（原名JBoss AS或者JBoss）</li><li>Netty</li></ul><h2 id="架构（Architecture）"><a href="#架构（Architecture）" class="headerlink" title="架构（Architecture）"></a>架构（Architecture）</h2><p>软件架构是指软件的基本结构，阮一峰在 <a href="http://www.ruanyifeng.com/blog/2016/09/software-architecture.html" target="_blank" rel="noopener"><em>软件架构入门</em></a> 中谈及架构的分类，可分为：分层架构（Layered Architecture）、事件驱动架构（Event-driven Architecture）、微核架构（Microkernel Architecture）、微服务架构（Microservices Architecture）、云架构（Cloud Architecture）。</p><ul><li>分层架构的核心是 “数据”，围绕数据的呈现、逻辑处理、持久化和存储进行分层；</li><li>事件驱动架构的核心是 “事件”，围绕事件的整个发出、队列、分发、通道、处理进行分层；</li><li>微核架构的核心是 “插件”，将每个小功能做成可插拔的插件形式嵌入内核；</li><li>微服务架构的核心是 “微服务”，将每个服务单独运行，并通过远程通信协议联系在一起；</li><li>云架构的核心是 “虚拟化”，没有中央数据库，由一个虚拟中间件（Virtualized Middleware）和若干处理单元（Processing Unit）组成，数据通过虚拟中间件中的数据中间件进行同步。</li></ul><h2 id="框架（Framework）"><a href="#框架（Framework）" class="headerlink" title="框架（Framework）"></a>框架（Framework）</h2><p>参考<a href="https://en.wikipedia.org/wiki/Software_framework" target="_blank" rel="noopener"><em>维基</em></a>，软件框架是指一种通用的，实现基本功能的软件，用户可以在上面添加业务特定的代码。软件框架可能包括支持程序，编译器，代码库，工具集和应用程序编程接口（API），它汇集了所有不同的组件，以支持项目或系统的开发。框架相较于普通的代码库有如下特征：</p><ol><li>控制反转，由框架决定程序的控制流程。</li><li>可扩展性。</li><li>封闭性，框架代码不可修改。</li></ol><p>常见的 Java EE 开发框架：</p><ul><li>Spring</li><li>Spring MVC</li><li>Spring Cloud</li><li>Hibernate</li><li>MyBatis</li><li>Dubbo</li><li>Kafka</li></ul><p>常见的 Java EE 开发框架集：</p><ul><li>Spring Boot</li><li>SSH（Spring + Spring MVC + Hibernate）</li><li>SSM（Spring + Spring MVC + MyBatis）</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Java-EE&quot;&gt;&lt;a href=&quot;#Java-EE&quot; class=&quot;headerlink&quot; title=&quot;Java EE&quot;&gt;&lt;/a&gt;Java EE&lt;/h2&gt;&lt;p&gt;Java平台企业版，2018年3月更名为 &lt;strong&gt;Jakarta EE&lt;/strong&gt;。J
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="java" scheme="https://linlshare.github.io/categories/it/java/"/>
    
      <category term="base" scheme="https://linlshare.github.io/categories/it/java/base/"/>
    
    
      <category term="Java" scheme="https://linlshare.github.io/tags/Java/"/>
    
      <category term="JavaEE" scheme="https://linlshare.github.io/tags/JavaEE/"/>
    
      <category term="服务器" scheme="https://linlshare.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>周记 20181028</title>
    <link href="https://linlshare.github.io/2018/10/28/thinking/weekly/%E5%91%A8%E8%AE%B0%2020181028/"/>
    <id>https://linlshare.github.io/2018/10/28/thinking/weekly/周记 20181028/</id>
    <published>2018-10-28T15:50:00.000Z</published>
    <updated>2018-11-04T13:50:25.924Z</updated>
    
    <content type="html"><![CDATA[<p>怎么说呢？先说坏的地方吧，Spring 的学习任务全部没完成，真遗憾，到底没能坚持，练吉他的安排也暂时搁置了，对音调的高低把握不准，再想想看有无方法解决。日语和古代汉语的学习任务完成 70% 左右，阅读《枕草子》的计划算是完成较好的，完成了 80% 。</p><p>值得开心的是，发现了原来可以使用 github page + hexo + wikitten 搭建一个个人的 wiki，知识管理又迈上了一个新台阶。</p><p>还有許進雄的《甲骨文簡易詞典》已经看完 1/3 了，等看完了一定要整理一份文档，从最简单的构件开始讲述文字隐藏的朴素的创意。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;怎么说呢？先说坏的地方吧，Spring 的学习任务全部没完成，真遗憾，到底没能坚持，练吉他的安排也暂时搁置了，对音调的高低把握不准，再想想看有无方法解决。日语和古代汉语的学习任务完成 70% 左右，阅读《枕草子》的计划算是完成较好的，完成了 80% 。&lt;/p&gt;
&lt;p&gt;值得开
      
    
    </summary>
    
      <category term="thinking" scheme="https://linlshare.github.io/categories/thinking/"/>
    
      <category term="weekly" scheme="https://linlshare.github.io/categories/thinking/weekly/"/>
    
    
      <category term="自省" scheme="https://linlshare.github.io/tags/%E8%87%AA%E7%9C%81/"/>
    
      <category term="周记" scheme="https://linlshare.github.io/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Redis 使用笔记</title>
    <link href="https://linlshare.github.io/2018/10/28/it/java/base/Redis%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>https://linlshare.github.io/2018/10/28/it/java/base/Redis 使用笔记/</id>
    <published>2018-10-28T15:02:00.000Z</published>
    <updated>2018-11-09T09:58:16.775Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/redis-4.0.6.high_sierra.bottle.tar.gz</span><br><span class="line">######################################################################## 100.0%</span><br><span class="line">==&gt; Pouring redis-4.0.6.high_sierra.bottle.tar.gz</span><br><span class="line">==&gt; Caveats</span><br><span class="line">To have launchd start redis now and restart at login:</span><br><span class="line">  brew services start redis</span><br><span class="line">Or, if you don&apos;t want/need a background service you can just run:</span><br><span class="line">  redis-server /usr/local/etc/redis.conf</span><br><span class="line">==&gt; Summary</span><br><span class="line">🍺  /usr/local/Cellar/redis/4.0.6: 13 files, 2.8MB</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="启动-Redis-Server"><a href="#启动-Redis-Server" class="headerlink" title="启动 Redis Server"></a>启动 Redis Server</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span>./redis-server</span><br></pre></td></tr></table></figure><h3 id="进入-Redis-命令行"><a href="#进入-Redis-命令行" class="headerlink" title="进入 Redis 命令行"></a>进入 Redis 命令行</h3><p>（1）本地连接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span>redis-cli</span><br><span class="line">redis 127.0.0.1:6379&gt;</span><br><span class="line">redis 127.0.0.1:6379&gt; PING</span><br><span class="line"></span><br><span class="line">PONG</span><br></pre></td></tr></table></figure><p>（2）远程连接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> redis-cli -h host -p port -a password</span><br></pre></td></tr></table></figure><h3 id="取键相关命令"><a href="#取键相关命令" class="headerlink" title="取键相关命令"></a>取键相关命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 查找所有 key</span><br><span class="line"><span class="meta">&gt;</span> KEYS *</span><br><span class="line"><span class="meta">#</span> 查找符合给定正则的 key</span><br><span class="line"><span class="meta">&gt;</span> KEYS pattern</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 删除某个 key</span><br><span class="line"><span class="meta">&gt;</span> DEL a_key</span><br><span class="line"><span class="meta">#</span> 检查某个 key 是否存在</span><br><span class="line"><span class="meta">&gt;</span> EXISTS a_key</span><br><span class="line"><span class="meta">#</span> 以秒为单位，返回给定 key 的剩余生存时间(TTL, time to live)。</span><br><span class="line"><span class="meta">&gt;</span> TTL a_key</span><br><span class="line"><span class="meta">#</span> 获知某个 key 存储值的类型</span><br><span class="line"><span class="meta">&gt;</span> TYPE a_key</span><br></pre></td></tr></table></figure><h3 id="取值相关命令"><a href="#取值相关命令" class="headerlink" title="取值相关命令"></a>取值相关命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 设置指定 key 的值</span><br><span class="line"><span class="meta">&gt;</span> SET a_key a_value</span><br><span class="line"><span class="meta">#</span> 获取指定 key 的字符串值</span><br><span class="line"><span class="meta">&gt;</span> GET a_key</span><br></pre></td></tr></table></figure><h3 id="List-相关命令"><a href="#List-相关命令" class="headerlink" title="List 相关命令"></a>List 相关命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 获知列表长度</span><br><span class="line"><span class="meta">&gt;</span> Llen a_key</span><br><span class="line"><span class="meta">#</span> 获取列表指定范围内的元素。其中 0 表示列表的第一个元素， 1 表示列表的第二个元素，以此类推。 你也可以使用负数下标，以 -1 表示列表的最后一个元素， -2 表示列表的倒数第二个元素，以此类推。</span><br><span class="line"><span class="meta">&gt;</span> Lrange a_key start end</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 对一个列表进行修剪(trim)，就是说，让列表只保留指定区间内的元素，不在指定区间之内的元素都将被删除。</span><br><span class="line"><span class="meta">&gt;</span> Ltrim a_key start end</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 移除并返回列表的最后一个元素。</span><br><span class="line"><span class="meta">&gt;</span> Lpop a_key</span><br></pre></td></tr></table></figure><h3 id="删库跑路相关命令"><a href="#删库跑路相关命令" class="headerlink" title="删库跑路相关命令"></a>删库跑路相关命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 删除所有数据库的所有key</span><br><span class="line"><span class="meta">&gt;</span> FLUSHALL</span><br><span class="line"><span class="meta">#</span> 删除当前数据库的所有key</span><br><span class="line"><span class="meta">&gt;</span> FLUSHDB</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="http://www.redis.net.cn/order/" target="_blank" rel="noopener">Redis 命令参考</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="java" scheme="https://linlshare.github.io/categories/it/java/"/>
    
      <category term="base" scheme="https://linlshare.github.io/categories/it/java/base/"/>
    
    
      <category term="Java" scheme="https://linlshare.github.io/tags/Java/"/>
    
      <category term="Redis" scheme="https://linlshare.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>使用 Hexo 和 Github Page 搭建个人 wiki</title>
    <link href="https://linlshare.github.io/2018/10/28/it/tool/%E4%BD%BF%E7%94%A8%20Hexo%20%E5%92%8C%20Github%20Page%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%20wiki/"/>
    <id>https://linlshare.github.io/2018/10/28/it/tool/使用 Hexo 和 Github Page 搭建个人 wiki/</id>
    <published>2018-10-27T16:00:00.000Z</published>
    <updated>2018-10-29T13:46:50.928Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h2><h3 id="环境依赖"><a href="#环境依赖" class="headerlink" title="环境依赖"></a>环境依赖</h3><ul><li>Node.js</li><li>Git</li></ul><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install hexo --save</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>如果命令无法运行，可以尝试更换taobao的npm源</span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h3 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>Hexo 将会在指定文件夹中新建所需要的文件。</span><br><span class="line">hexo init &lt;folder&gt;</span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>安装Hexo插件</span><br><span class="line">npm install hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-category --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-deployer-heroku --save</span><br><span class="line">npm install hexo-deployer-rsync --save</span><br><span class="line">npm install hexo-deployer-openshift --save</span><br><span class="line">npm install hexo-renderer-marked@0.2 --save</span><br><span class="line">npm install hexo-renderer-stylus@0.2 --save</span><br><span class="line">npm install hexo-generator-feed@1 --save</span><br><span class="line">npm install hexo-generator-sitemap@1 --save</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 在本地查看效果</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><h3 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h3><p>修改根目录的 <code>_config.yml</code>，具体如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: http://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/tommy351/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site #整站的基本信息</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">IT协会</span> <span class="comment">#网站标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">学习</span> <span class="string">总结</span> <span class="string">分享</span> <span class="comment">#网站副标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">学习</span> <span class="string">总结</span> <span class="string">分享</span> <span class="comment">#网站描述</span></span><br><span class="line"><span class="attr">author:</span>  <span class="string">itxiehui#网站作者</span></span><br><span class="line"><span class="attr">email:</span> <span class="string">gdinit@163.com</span> <span class="comment">#联系邮箱</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">http://itxiehui.github.io</span> <span class="comment">#你的域名</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"></span><br><span class="line"><span class="string">......</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span> <span class="comment">#每页10篇文章</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disqus #社会化评论disqus</span></span><br><span class="line"><span class="attr">disqus_shortname:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://github.com/tommy351/hexo/wiki/Plugins</span></span><br><span class="line"><span class="comment">## Themes: https://github.com/tommy351/hexo/wiki/Themes</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">jacman</span> <span class="comment">#修改主题</span></span><br><span class="line"><span class="attr">exclude_generator:</span></span><br><span class="line"><span class="attr">Plugins:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-sitemap</span></span><br><span class="line"></span><br><span class="line"><span class="string">......</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: http://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span> <span class="comment"># 部署位置</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">github</span></span><br><span class="line"><span class="attr">  repository:</span> <span class="attr">https://github.com/test/test.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h3 id="开始写作"><a href="#开始写作" class="headerlink" title="开始写作"></a>开始写作</h3><p>使用 <code>hexo new &quot;article&quot;</code>创建一个新文件，该文件为<code>*.md</code> 格式，可以使用 <strong>Typora</strong>（<em>一款优秀的 Markdown 写作工具，支持侧边栏显示目录和文件夹，最令人惊叹的是编辑和渲染合一的写作方式</em>）进行写作。然后使用 <code>hexo d -g</code> 生成相关 web 页面并部署到 Github 上。注意在 <code>_config.yml</code>中配置的 deploy 的 repository 要看是否电脑有多个 Github 账号。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>常用命令</span><br><span class="line">hexo new "postName" #新建文章</span><br><span class="line">hexo new page "pageName" #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span><br><span class="line">hexo deploy #将.deploy目录部署到GitHub</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#简写</span><br><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure><h2 id="使用-Wikitten-主题"><a href="#使用-Wikitten-主题" class="headerlink" title="使用 Wikitten 主题"></a>使用 Wikitten 主题</h2><p>访问 <a href="https://github.com/zthxxx/hexo-theme-Wikitten" target="_blank" rel="noopener">hexo-theme-Wikitten</a> 了解如何安装该款主题。</p><h2 id="默认显示文章目录（toc-as-default）"><a href="#默认显示文章目录（toc-as-default）" class="headerlink" title="默认显示文章目录（toc as default）"></a>默认显示文章目录（toc as default）</h2><p>在 <code>hemes/Wikitten/layout/common</code> 找到 <code>article.ejs</code> ，并修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (post.toc) &#123; %&gt;</span><br><span class="line">&lt;div id=&quot;toc&quot; class=&quot;toc-article&quot;&gt;</span><br><span class="line">&lt;strong class=&quot;toc-title&quot;&gt;&lt;%= __(&apos;article.catalogue&apos;) %&gt;&lt;/strong&gt;</span><br><span class="line">&lt;%- toc(post.content) %&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (post.toc!=false) &#123; %&gt;</span><br><span class="line">&lt;div id=&quot;toc&quot; class=&quot;toc-article&quot;&gt;</span><br><span class="line">&lt;strong class=&quot;toc-title&quot;&gt;&lt;%= __(&apos;article.catalogue&apos;) %&gt;&lt;/strong&gt;</span><br><span class="line">&lt;%- toc(post.content) %&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>然后重新生成部署（<code>hexo g -d</code>）即可。</p><h2 id="引用本地图片"><a href="#引用本地图片" class="headerlink" title="引用本地图片"></a>引用本地图片</h2><p>按照官方的 <a href="https://hexo.io/zh-cn/docs/asset-folders.html" target="_blank" rel="noopener">asset-folders</a> 的方法处理图片引用，在本地预览时是无法显示的，参考文章 <a href="http://etrd.org/2017/01/23/hexo%E4%B8%AD%E5%AE%8C%E7%BE%8E%E6%8F%92%E5%85%A5%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/" target="_blank" rel="noopener">hexo中完美插入本地图片</a> ，总结出如下的解决方案：</p><p>（1）开启 <code>post_asset_folder</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">config.yml</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>（2）安装 <code>hexo-asset-image</code> 插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>（3）使用方式</p><ol><li>在与 <code>_posts/my_article.md</code>的平级位置上创建文件夹 <code>my_article</code>；</li><li>放置 <code>my_article.md</code> 文件中引用到的图片，例如 <code>my_pic.jpg</code>；</li><li>在 <code>my_article.md</code> 以 <code>![my_pic](my_article/my_pic.jpg)</code> 方式引用。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hexo-安装&quot;&gt;&lt;a href=&quot;#Hexo-安装&quot; class=&quot;headerlink&quot; title=&quot;Hexo 安装&quot;&gt;&lt;/a&gt;Hexo 安装&lt;/h2&gt;&lt;h3 id=&quot;环境依赖&quot;&gt;&lt;a href=&quot;#环境依赖&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="tool" scheme="https://linlshare.github.io/categories/it/tool/"/>
    
    
      <category term="Hexo" scheme="https://linlshare.github.io/tags/Hexo/"/>
    
      <category term="Wiki" scheme="https://linlshare.github.io/tags/Wiki/"/>
    
  </entry>
  
  <entry>
    <title>Draw.io 使用笔记</title>
    <link href="https://linlshare.github.io/2018/10/23/it/tool/Draw.io%20%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>https://linlshare.github.io/2018/10/23/it/tool/Draw.io 使用笔记/</id>
    <published>2018-10-23T02:14:00.000Z</published>
    <updated>2018-10-26T16:11:34.275Z</updated>
    
    <content type="html"><![CDATA[<h2 id="如何给类图增加一个字段？"><a href="#如何给类图增加一个字段？" class="headerlink" title="如何给类图增加一个字段？"></a>如何给类图增加一个字段？</h2><p>选中一个字段，然后按 <code>Ctrl +Enter</code> 即可。</p><p>参考：<a href="https://stackoverflow.com/a/48559108/5671221" target="_blank" rel="noopener">Add row to class diagram - stackoverflow</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;如何给类图增加一个字段？&quot;&gt;&lt;a href=&quot;#如何给类图增加一个字段？&quot; class=&quot;headerlink&quot; title=&quot;如何给类图增加一个字段？&quot;&gt;&lt;/a&gt;如何给类图增加一个字段？&lt;/h2&gt;&lt;p&gt;选中一个字段，然后按 &lt;code&gt;Ctrl +Enter&lt;/
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="tool" scheme="https://linlshare.github.io/categories/it/tool/"/>
    
    
      <category term="Draw.io" scheme="https://linlshare.github.io/tags/Draw-io/"/>
    
      <category term="绘图" scheme="https://linlshare.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>周记 20181021</title>
    <link href="https://linlshare.github.io/2018/10/21/thinking/weekly/%E5%91%A8%E8%AE%B0%2020181021/"/>
    <id>https://linlshare.github.io/2018/10/21/thinking/weekly/周记 20181021/</id>
    <published>2018-10-21T08:51:00.000Z</published>
    <updated>2018-11-04T13:50:41.937Z</updated>
    
    <content type="html"><![CDATA[<p>恍恍惚，又一周过去了。想下，周一以来工作上一直在不断地修补后台好友邀请服务的 bug，还有就是开发聊天和推送服务，顺便补了下 Spring 的知识。学习上似乎晚上会看下《枕草子》，不过速度有点慢了，后面还有好几千页呢。情感上，因为早晚听巴赫作品集的关系，基本稳定，不会有太大波动，就是有时候夜里难以入睡，解决方案是看 Kindle，看着看着不知不觉就睡过去了。最大的收获是发现了一款叫 “方片” 的产品（包含移动端和 Chrome 插件），相见恨晚，它快速简便地收集资料（文字、图片和链接），多端同步，还可以同步到印象笔记中，这样的软件即使付费使用我也愿意。哦，对了，我还重新认识了 Afred 这款 Mac 上的效率佳软，其剪贴板历史功能、查字典和文件查找快捷命令令我折服。</p><p>另一个我：工作上能意识到不足，然后补充相关的知识，这点很不错。但是要 output 啊，没见你输出什么笔记之类的，还有要有计划地学习，不能逮到什么学习什么，看到不足的可以先收集起来，然后下一周努力补上。学习上也是，那么厚的书，你有考虑到后果吗？你有安排什么时候会读完吗？不过说来你有在进行细致的读书补遗，这点很 nice，坚持补遗，才能有接近作者生活体验的读书体验。还有巴赫作品集实在是你这种单身狗的救星了，平和而又有变化的旋律可以稳定人的情绪，特别是那平均律，足以令你陶然其中。最后，效率软件要用起来，不能再依赖慢吞吞的触摸板点来点去了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;恍恍惚，又一周过去了。想下，周一以来工作上一直在不断地修补后台好友邀请服务的 bug，还有就是开发聊天和推送服务，顺便补了下 Spring 的知识。学习上似乎晚上会看下《枕草子》，不过速度有点慢了，后面还有好几千页呢。情感上，因为早晚听巴赫作品集的关系，基本稳定，不会有太大
      
    
    </summary>
    
      <category term="thinking" scheme="https://linlshare.github.io/categories/thinking/"/>
    
      <category term="weekly" scheme="https://linlshare.github.io/categories/thinking/weekly/"/>
    
    
      <category term="自省" scheme="https://linlshare.github.io/tags/%E8%87%AA%E7%9C%81/"/>
    
      <category term="周记" scheme="https://linlshare.github.io/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Git 实战记录</title>
    <link href="https://linlshare.github.io/2018/10/17/it/tool/Git%20%E5%AE%9E%E6%88%98%E8%AE%B0%E5%BD%95/"/>
    <id>https://linlshare.github.io/2018/10/17/it/tool/Git 实战记录/</id>
    <published>2018-10-17T03:44:00.000Z</published>
    <updated>2018-10-30T06:57:45.429Z</updated>
    
    <content type="html"><![CDATA[<h3 id="提交当前分支的更改到远程的同名分支"><a href="#提交当前分支的更改到远程的同名分支" class="headerlink" title="提交当前分支的更改到远程的同名分支"></a>提交当前分支的更改到远程的同名分支</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git push origin HEAD</span><br></pre></td></tr></table></figure><h3 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git push origin :dev-sth</span><br><span class="line"><span class="meta">#</span> 相当于</span><br><span class="line"><span class="meta">$</span> git push origin --delete dev-sth</span><br></pre></td></tr></table></figure><h3 id="撤销-git-commit-但未-git-push-的修改"><a href="#撤销-git-commit-但未-git-push-的修改" class="headerlink" title="撤销 git commit 但未 git push 的修改"></a>撤销 git commit 但未 git push 的修改</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>找到想要撤销的 commit id</span><br><span class="line"><span class="meta">$</span> git log</span><br><span class="line"><span class="meta">#</span>撤销，但不对代码修改进行撤销，还可以再次 commit</span><br><span class="line"><span class="meta">$</span> git reset &lt;commit id&gt; </span><br><span class="line"><span class="meta">#</span>撤销并忽略该次 commit 的代码修改</span><br><span class="line"><span class="meta">$</span> git reset --hard &lt;commit id&gt;</span><br></pre></td></tr></table></figure><h3 id="移除远程分支上的脏文件（clean-remote-files）"><a href="#移除远程分支上的脏文件（clean-remote-files）" class="headerlink" title="移除远程分支上的脏文件（clean remote files）"></a>移除远程分支上的脏文件（clean remote files）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git rm -rf &lt;file1&gt; &lt;file2&gt;</span><br></pre></td></tr></table></figure><h3 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h3><h4 id="Git是什么？"><a href="#Git是什么？" class="headerlink" title="Git是什么？"></a>Git是什么？</h4><p>Git中译为混账，是Linus先生花了一个星期写的分布式版本控制系统（VCS，Version Control System），用于Linux内核的协同开发。所谓版本控制系统，个人理解就是可以保存文本文件的历史版本信息，并且可以回溯到某个历史版本的文本文件管理系统。它的设计就是为了方便软件开发的版本迭代和协同开发。</p><p>比如，你打开电脑的记事本，一个不小心把昨天写的备忘全给删除了，而且还习惯性地按了Ctrl+S，你懵了。一般情况下是找不回来了。除非有版本备份，现在有些云笔记类软件就提供了这样的功能。其实质就是版本控制，它可以让你回溯到某个历史版本，像是吃了后悔药一般美妙。</p><h4 id="Git怎么玩？"><a href="#Git怎么玩？" class="headerlink" title="Git怎么玩？"></a>Git怎么玩？</h4><h5 id="配置Git环境"><a href="#配置Git环境" class="headerlink" title="配置Git环境"></a>配置Git环境</h5><p>玩什么都有第一步，已经司空见惯了呃。没错就是配置环境。Git的环境配置还不算复杂：</p><ol><li><a href="https://git-scm.com/download/win" target="_blank" rel="noopener">下载Git</a>并安装Git（注意：不懂英文的按默认配置就好）;</li><li><p>向全世界宣称你的存在</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//注意：--global表示你电脑里的所以Git仓库都采用相同的配置</span><br><span class="line">//如果有不用用户的Git仓库，就去掉吧。</span><br><span class="line"><span class="meta">$</span> git config --global user.name "Your Name"</span><br><span class="line"><span class="meta">$</span> git config --global user.email "email@example.com"</span><br></pre></td></tr></table></figure></li></ol><h5 id="建个仓库放点东西"><a href="#建个仓库放点东西" class="headerlink" title="建个仓库放点东西"></a>建个仓库放点东西</h5><ol><li>建库简单：在磁盘上新建个文件夹作为工作区，然后右击打开Git Bash，执行<code>git init</code>，你会发现多了个<code>.git</code>文件夹。</li><li>放东西有点复杂<ul><li>第一步：在工作区新建一个文件，命名为yuren.txt。注意：文本文件的编码是UTF-8 without BOM（使用Notepad++可以查看和修改）</li><li>第二步：<code>git add .</code>添加文件到暂存区</li><li>第三步：<code>git commit -m &quot;add yuren.txt&quot;</code>添加文件到本地仓库</li></ul></li></ol><p>历尽千辛万苦终于把文件交给Git来管理了。</p><h5 id="时光机穿梭"><a href="#时光机穿梭" class="headerlink" title="时光机穿梭"></a>时光机穿梭</h5><p>假定你在上个步骤中放入的文件是：yuren.txt。里面的内容是（标记为v1）：</p><blockquote><p>[微信红包]恭喜发财，大吉大利！<br>是不是又冲进来了，这么激动干嘛，发几个文字而已~</p></blockquote><p>后来，你想了想，改成了（标记为v2）：</p><blockquote><p>[微信红包]愚人节Happy！<br>是不是又冲进来了，这么激动干嘛，发几个文字而已~</p></blockquote><p>根据【建个仓库放点东西】里说的步骤更新本地仓库中的信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git add .</span><br><span class="line"><span class="meta">$</span> git commit -m "update yuren.txt"</span><br></pre></td></tr></table></figure><hr><p>不知道哪根筋不对，你又想要v1版本的yuren.txt了，但是又忘了上一次写的内容，怎么办？</p><p>没关系，可以通过<code>git log</code>查看每次的提交信息。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git log</span><br><span class="line">commit 1ba454f3ef3e48b88b4c24f72dc8055407cd9019</span><br><span class="line">Author: Your Name &lt;email@example.com&gt;</span><br><span class="line">Date:   Fri Apr 1 16:19:41 2016 +0800</span><br><span class="line"></span><br><span class="line">    update yuren.txt</span><br><span class="line"></span><br><span class="line">commit ce58ee1a57d21c9d752e80b820b7f2968249ac2e</span><br><span class="line">Author: Your Name &lt;email@example.com&gt;</span><br><span class="line">Date:   Fri Apr 1 16:17:35 2016 +0800</span><br><span class="line"></span><br><span class="line">    add yuren.text</span><br></pre></td></tr></table></figure><p>回退到上一次commit，只需要执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git reset --hard HEAD^</span><br><span class="line">HEAD is now at ce58ee1 add yuren.text</span><br></pre></td></tr></table></figure><p>这里，HEAD^代表上一个版本，HEAD^^代表上上个版本，HEAD~100代表上100个版本。当然可以使用具体的commit id来回退，比如上面的等价于<code>$ git reset --hard ce58ee1</code></p><p>重新打开yuren.txt来看，v1版本的信息果然回来了。</p><hr><p>人的心理真是捉摸不透，刚找回v1版本的信息了，就又怀念v2版本的信息了。然而，现在使用<code>git log</code>都救不了你了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git log</span><br><span class="line">commit ce58ee1a57d21c9d752e80b820b7f2968249ac2e</span><br><span class="line">Author: Lshare &lt;linlshare@gmail.com&gt;</span><br><span class="line">Date:   Fri Apr 1 16:17:35 2016 +0800</span><br><span class="line"></span><br><span class="line">    add yuren.text</span><br></pre></td></tr></table></figure><p>v2版本的信息似乎丢失了。怎么办？</p><ul><li>方法一：如果你还知道v2版本的commit id的话可以<code>$ git reset --hard &lt;commit id&gt;</code>来解决；</li><li><p>方法二：假如你不知道也没关系，使用<code>git reflog</code>查看你的每次命令，接下来就可以用方法一解决了。</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git reflog</span><br><span class="line">ce58ee1 HEAD@&#123;0&#125;: reset: moving to HEAD^</span><br><span class="line">1ba454f HEAD@&#123;1&#125;: commit: update yuren.txt</span><br><span class="line">ce58ee1 HEAD@&#123;2&#125;: commit (initial): add yuren.text</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;提交当前分支的更改到远程的同名分支&quot;&gt;&lt;a href=&quot;#提交当前分支的更改到远程的同名分支&quot; class=&quot;headerlink&quot; title=&quot;提交当前分支的更改到远程的同名分支&quot;&gt;&lt;/a&gt;提交当前分支的更改到远程的同名分支&lt;/h3&gt;&lt;figure class
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="tool" scheme="https://linlshare.github.io/categories/it/tool/"/>
    
    
      <category term="Git" scheme="https://linlshare.github.io/tags/Git/"/>
    
      <category term="版本控制" scheme="https://linlshare.github.io/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>日语一周七天的记忆方法</title>
    <link href="https://linlshare.github.io/2018/09/29/language/%E6%97%A5%E8%AA%9E/%E6%97%A5%E8%AF%AD%E4%B8%80%E5%91%A8%E4%B8%83%E5%A4%A9%E7%9A%84%E8%AE%B0%E5%BF%86%E6%96%B9%E6%B3%95/"/>
    <id>https://linlshare.github.io/2018/09/29/language/日語/日语一周七天的记忆方法/</id>
    <published>2018-09-29T15:46:00.000Z</published>
    <updated>2018-10-26T16:23:11.271Z</updated>
    
    <content type="html"><![CDATA[<h2 id="速记"><a href="#速记" class="headerlink" title="速记"></a>速记</h2><table><thead><tr><th>汉语</th><th>日语</th><th>英语</th><th>来源</th></tr></thead><tbody><tr><td>星期日</td><td>日曜日</td><td>Sunday</td><td>Sun Day（太阳之日）</td></tr><tr><td>星期一</td><td>月曜日</td><td>MonDay</td><td>Moon Day（月亮之日）</td></tr><tr><td>星期二</td><td>火曜日</td><td>Tuesday</td><td>Tiu’s Day（ Tiu 是日耳曼战争之神，代替古罗马中的战神 Mars，中国命名为火星）</td></tr><tr><td>星期三</td><td>水曜日</td><td>Wednesday</td><td>Woden’s Day（ Woden 是日耳曼神话中的至高神，代替古罗马中的 信使 Mercury ，中国命名为水星）</td></tr><tr><td>星期四</td><td>木曜日</td><td>ThursDay</td><td>Thor’s Day（ Thor 是北欧雷神，代替古罗马中的爱神 Jupiter，中国命名为木星）</td></tr><tr><td>星期五</td><td>金曜日</td><td>FriDay</td><td>Freya’s Day… Or Frigg’s Day（ Freya 和 Frigg 都是北欧女神，代替古罗马中的女神 Venus，中国命名为金星）</td></tr><tr><td>星期六</td><td>土曜日</td><td>Saturday</td><td>Saturn’s Day（ Saturn 是古罗马中的农神）</td></tr></tbody></table><h2 id="Week"><a href="#Week" class="headerlink" title="Week"></a>Week</h2><p>古巴比伦人首先使用 7 日为一周的时间单位，后来犹太人把它传到古埃及，又由古埃及传到罗马，公元3世纪以后，就广泛地传播到欧洲各国。唐朝时期在西域和中国的交流中传入了中土获得发展，再传入朝鲜半岛，日本。</p><h3 id="七曜"><a href="#七曜" class="headerlink" title="七曜"></a>七曜</h3><p>杨士勋（唐）疏：“ 谓之七曜者，日月五星皆照天下，故谓之曜。” 一个曜日就是日月五星轮流照耀世界的一天。日本曜日的说法就是从中国传入的。</p><h3 id="星期"><a href="#星期" class="headerlink" title="星期"></a>星期</h3><p>“星期”原是指牛郎星和织女星相会之期，现代意义的“星期”是个旧词新义词。光绪三十一年（1905年）由袁嘉谷所定用“星期”代替“曜日”，到了民国以后星期被广泛使用。</p><h3 id="礼拜"><a href="#礼拜" class="headerlink" title="礼拜"></a>礼拜</h3><p>到了19世纪20年代，有人将汉语中的“礼拜”一词用作英语 week 的对应词了，如1828年马礼逊《广东省土话字汇》：“WEEK ，a ，一个礼拜。”“礼拜”原为动词，指宗教徒向所信奉的神行礼。由于基督教、伊斯兰教是一星期做一次礼拜，故此词慢慢引申用来指 week 了。</p><h3 id="周"><a href="#周" class="headerlink" title="周"></a>周</h3><p>日本还有一个表示 week 的“周”字，而且这个词还传到了中国。如1901年《清议报》七十八册《马塞多尼亚》：“前在欧洲定造水雷艇六只。目下有二只，业已竣工，数周间（即数礼拜）必到。”</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><p><a href="https://www.thefreedictionary.com/How-every-day-of-the-week-got-its-name.htm" target="_blank" rel="noopener">How every day of the week got its name</a></p></li><li><p><a href="http://huayuqiao.org/articles/huangheqing/hhq16.htm" target="_blank" rel="noopener">从七曜说到“礼拜”、“星期”、“周”的语源</a></p></li><li><p><a href="https://zh.wikipedia.org/zh-cn/%E6%98%9F%E6%9C%9F" target="_blank" rel="noopener">星期 - 维基百科</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;速记&quot;&gt;&lt;a href=&quot;#速记&quot; class=&quot;headerlink&quot; title=&quot;速记&quot;&gt;&lt;/a&gt;速记&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;汉语&lt;/th&gt;
&lt;th&gt;日语&lt;/th&gt;
&lt;th&gt;英语&lt;/th&gt;
&lt;th&gt;来源&lt;/th&gt;
&lt;/tr
      
    
    </summary>
    
      <category term="language" scheme="https://linlshare.github.io/categories/language/"/>
    
      <category term="日語" scheme="https://linlshare.github.io/categories/language/%E6%97%A5%E8%AA%9E/"/>
    
    
      <category term="日语" scheme="https://linlshare.github.io/tags/%E6%97%A5%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>汉语音韵中的四声八调及平仄</title>
    <link href="https://linlshare.github.io/2018/09/28/language/%E6%BC%A2%E8%AA%9E%E8%A8%80/%E6%B1%89%E8%AF%AD%E9%9F%B3%E9%9F%B5%E4%B8%AD%E7%9A%84%E5%9B%9B%E5%A3%B0%E5%85%AB%E8%B0%83%E5%8F%8A%E5%B9%B3%E4%BB%84/"/>
    <id>https://linlshare.github.io/2018/09/28/language/漢語言/汉语音韵中的四声八调及平仄/</id>
    <published>2018-09-28T00:32:00.000Z</published>
    <updated>2018-10-26T16:26:41.148Z</updated>
    
    <content type="html"><![CDATA[<h2 id="四声八调"><a href="#四声八调" class="headerlink" title="四声八调"></a>四声八调</h2><p>国语拼音中的四声为：一声、二声、三声、四声，其正式学名分别为：阴平、阳平、上声、去声。其 IPA 调值（根据五度分音法确定的相对调值）如下：</p><table><thead><tr><th>声调</th><th>IPA 调值</th><th>记号</th></tr></thead><tbody><tr><td>阴平</td><td>55</td><td>¯</td></tr><tr><td>阳平</td><td>35</td><td>ˊ</td></tr><tr><td>上声</td><td>214</td><td>ˇ</td></tr><tr><td>去声</td><td>51</td><td>ˋ</td></tr></tbody></table><p>在古代汉语中<strong>四声八调</strong>的说法。“四声” 源自唐宋时期中古汉语的 “平上去入” 四个声调。在发展过程中经历了以下的流变：</p><h3 id="平分阴阳"><a href="#平分阴阳" class="headerlink" title="平分阴阳"></a>平分阴阳</h3><p>在元代受声母发音方法中的清浊从每一声中分出阴阳二调（清者为阴，浊者为阳），构成 “阴平”、“阳平”、“阴上”、“阳上”、“阴去”、“阳去”、“阴去”、“阳去”、“阴入”、“阳入” 共八个调。</p><p>如今，官话北京话只有平声分阴阳，而吴语和闽南语只有上声不分阴阳。</p><h3 id="浊上归去"><a href="#浊上归去" class="headerlink" title="浊上归去"></a>浊上归去</h3><p>指声母为全浊的上声字改读去声（而次浊上字声调和清上字相同）。次浊和全浊的关键在于声带震动的程度，笔者母语福佬话中刚好与中古音相符。</p><table><thead><tr><th>汉字</th><th>中古音</th><th>汉语拼音</th><th>闽南语台罗拼音</th><th>吴语拼音（苏州闲话）</th></tr></thead><tbody><tr><td>岛</td><td>清上</td><td>dǎo</td><td>tó</td><td>tau5</td></tr><tr><td>道</td><td>全浊上</td><td>dào</td><td>tō</td><td>dau6</td></tr><tr><td>老</td><td>次浊上</td><td>lǎo</td><td>láu</td><td>lau6</td></tr></tbody></table><h3 id="入派三声"><a href="#入派三声" class="headerlink" title="入派三声"></a>入派三声</h3><p>官话及大多数方言中入声消失了，并归入了其他三声，而在南方的方言（包括粤语、闽南语、客语和吴语等）中仍然包含着入声。比如 “屋” 在在粤语、闽南语、客语和吴语都是入声，而在国语中是平声。</p><h2 id="平仄"><a href="#平仄" class="headerlink" title="平仄"></a>平仄</h2><p>中古汉语中，“平仄” 是指 平声为 “平”，其他三声为 “仄”。之后随着音韵的流变，原本诗词中的 “仄” 声变得难以判断。但是根据流变规律可以得出一个简易的判别方法：如果国语中为非平声，那么就是 “仄”；如果国语中为平声，而南方方言中为入声，那么就是 “仄”，否则为 “平”。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="http://blog.udn.com/wangtao/17127620" target="_blank" rel="noopener">【語文常識】甚麼是「四聲」、「平仄」- 教研札記</a></li><li><a href="https://zh.wikipedia.org/wiki/%E5%9B%9B%E8%81%B2" target="_blank" rel="noopener">四聲 - 維基百科</a></li><li><a href="https://www.wugniu.com/" target="_blank" rel="noopener">吳語學堂</a></li><li><a href="https://twblg.dict.edu.tw/holodict_new/index.html" target="_blank" rel="noopener">台灣閩南語常用詞辭典</a></li><li><a href="https://www.bilibili.com/video/av11828488/?p=5" target="_blank" rel="noopener">【苏白学堂/教程】吴语苏州话语音基础入门（学堂版拼音）- Bilibili</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;四声八调&quot;&gt;&lt;a href=&quot;#四声八调&quot; class=&quot;headerlink&quot; title=&quot;四声八调&quot;&gt;&lt;/a&gt;四声八调&lt;/h2&gt;&lt;p&gt;国语拼音中的四声为：一声、二声、三声、四声，其正式学名分别为：阴平、阳平、上声、去声。其 IPA 调值（根据五度分音法确定的
      
    
    </summary>
    
      <category term="language" scheme="https://linlshare.github.io/categories/language/"/>
    
      <category term="漢語言" scheme="https://linlshare.github.io/categories/language/%E6%BC%A2%E8%AA%9E%E8%A8%80/"/>
    
    
      <category term="古漢語" scheme="https://linlshare.github.io/tags/%E5%8F%A4%E6%BC%A2%E8%AA%9E/"/>
    
  </entry>
  
  <entry>
    <title>SSH 登录须知</title>
    <link href="https://linlshare.github.io/2018/09/26/it/tool/SSH%20%E7%99%BB%E5%BD%95%E9%A1%BB%E7%9F%A5/"/>
    <id>https://linlshare.github.io/2018/09/26/it/tool/SSH 登录须知/</id>
    <published>2018-09-26T09:22:00.000Z</published>
    <updated>2018-11-09T08:23:04.940Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SSH-背景"><a href="#SSH-背景" class="headerlink" title="SSH 背景"></a>SSH 背景</h2><ul><li><p>解决的问题：明文登录信息暴露问题。</p></li><li><p>历史：</p><ol><li>1995 年，芬兰赫尔辛基理工大学的 <strong>Tatu Ylonen</strong> 发现自己学校存在嗅探密码的网络攻击，于是开发了 SSH （<strong>Secure Shell</strong>）通信安全协议，用于加密登录，并随后以免费软件形式发布，并创办 SSH 通信安全公司来继续开发和销售SSH。</li><li>截至2005年，<strong>OpenSSH</strong> 是唯一一种最流行的SSH实现，而且成为了大量操作系统的默认组件。</li></ol></li></ul><h2 id="SSH-原理"><a href="#SSH-原理" class="headerlink" title="SSH 原理"></a>SSH 原理</h2><p>核心：<strong>非对称加密</strong>。</p><p>整个过程是这样的：</p><ol><li>远程主机收到用户的登录请求，把自己的公钥发给用户。</li><li>用户使用这个公钥，将登录密码加密后，发送回来。</li><li>远程主机用自己的私钥，解密登录密码，如果密码正确，就同意用户登录。</li></ol><h2 id="口令登录"><a href="#口令登录" class="headerlink" title="口令登录"></a>口令登录</h2><p>用户使用 <code>ssh user@host</code> 登录远程主机时，系统会提示远程主机的公钥指纹，当用户确认接收该公钥指纹时，会保存到 <code>$HOME/.ssh/known_hosts</code> 中，下次登录时会跳过。</p><blockquote><p>公钥指纹：公钥长度较长（这里采用RSA算法，长达1024位），很难比对，所以对其进行MD5计算，将它变成一个128位的指纹。上例中是 <code>98:2e:d7:e0:de:9f:ac:67:28:c2:42:2d:37:16:58:4d</code>，再进行比较。</p></blockquote><h2 id="公钥登录"><a href="#公钥登录" class="headerlink" title="公钥登录"></a>公钥登录</h2><p>所谓”公钥登录”，原理很简单，就是用户将自己的公钥储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。</p><p>用户将自己的公钥储存在远程主机的具体过程如下：</p><ol><li><p>使用 <code>ssh-keygen</code> 在本地目录 <code>$HOME/.ssh/</code> 生成公钥 <code>id_rsa.pub</code> 和密钥 <code>id_rsa</code> ；</p></li><li><p>使用 <code>ssh-copy-id user@host</code> 将公钥上传至远程主机 host 中，实现细节是：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> ssh user@host 'mkdir -p .ssh &amp;&amp; cat &gt;&gt; .ssh/authorized_keys' &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></li></ol><h2 id="SSH-CONFIG-FILE"><a href="#SSH-CONFIG-FILE" class="headerlink" title="SSH CONFIG FILE"></a>SSH CONFIG FILE</h2><p>可以通过配置文件快速进行 ssh 登录，配置文件有两种：</p><ol><li>用户配置文件 <code>~/.ssh/config</code>；</li><li>系统配置文件 <code>/etc/ssh/ssh_config)</code>。</li></ol><p>可配置项有：</p><ul><li><strong>Host</strong>，配置标识，使用 <code>ssh [Host]</code> 进行快速登录；</li><li><strong>HostName</strong>，服务器所在地址，可以是域名或 IP；</li><li><strong>User</strong>，进行 ssh 登录的用户名；</li><li><strong>Port</strong>，指定服务器端口；</li><li><strong>IdentityFile</strong>，指定私钥文件的位置。</li></ul><p>如在 <code>~/.ssh/config</code>文件中按如下配置，则可以通过 <code>ssh xx-server</code> 进行快速 ssh 登录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Host xx-server</span><br><span class="line">    HostName ssh.xx-server.com</span><br><span class="line">    User xx_user</span><br><span class="line">    Port 2200</span><br><span class="line">    IdentityFile ~/.ssh/local_id_rsa</span><br></pre></td></tr></table></figure><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><table><thead><tr><th>名词</th><th>含义</th></tr></thead><tbody><tr><td>X.509</td><td>一种通用的<strong>证书格式</strong>，包含证书持有人的公钥，加密算法等信息</td></tr><tr><td>pkcs1 ~ pkcs12</td><td>公钥加密（非对称加密）的一种标准，一般存储为 <code>*.pN</code>，<code>*.p12</code> 是包含证书和密钥的封装格式</td></tr><tr><td>*.der</td><td>证书的<strong>二进制存储格式</strong>（不常用）</td></tr><tr><td>*.pem</td><td>证书或密钥的 <strong>Base64 文本存储格式</strong>，可以单独存放证书或密钥，也可以同时存放</td></tr><tr><td>*.key</td><td><strong>单独存放的 pem 格式的密钥</strong>，一般保存为 <code>*.key</code></td></tr><tr><td><em>.cer </em>.crt</td><td>两个指的都是证书，Linux 下叫 crt，Windows 下叫 cer；存储格式可以是 <code>pem</code> 也可以是 <code>der</code></td></tr><tr><td>*.pfx</td><td>微软 IIS 的实现</td></tr><tr><td>*.jks</td><td>Java Keytool 实现的证书格式</td></tr></tbody></table><h2 id="排错"><a href="#排错" class="headerlink" title="排错"></a>排错</h2><h3 id="SSH-一直登陆不上，又没显示错误信息"><a href="#SSH-一直登陆不上，又没显示错误信息" class="headerlink" title="SSH 一直登陆不上，又没显示错误信息"></a>SSH 一直登陆不上，又没显示错误信息</h3><p>在 ssh 命名最后添加 -v/-vv 输出连接信息。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://zh.wikipedia.org/zh-cn/Secure_Shell" target="_blank" rel="noopener">Secure Shell - 维基百科</a></li><li><a href="http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html" target="_blank" rel="noopener">SSH原理与运用（一）：远程登录</a></li><li><a href="https://www.ssh.com/ssh/config/" target="_blank" rel="noopener">SSH CONFIG FILE - ssh.com</a></li><li><a href="https://www.zhihu.com/question/29620953/answer/242467271" target="_blank" rel="noopener">SSL中，公钥、私钥、证书的后缀名都是些啥？ - 海棠依旧的回答 - 知乎</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;SSH-背景&quot;&gt;&lt;a href=&quot;#SSH-背景&quot; class=&quot;headerlink&quot; title=&quot;SSH 背景&quot;&gt;&lt;/a&gt;SSH 背景&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;解决的问题：明文登录信息暴露问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;历史：&lt;/p&gt;
&lt;o
      
    
    </summary>
    
      <category term="it" scheme="https://linlshare.github.io/categories/it/"/>
    
      <category term="tool" scheme="https://linlshare.github.io/categories/it/tool/"/>
    
    
      <category term="SSH" scheme="https://linlshare.github.io/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>关于字体的一些小知识</title>
    <link href="https://linlshare.github.io/2018/09/25/design/typeface/%E5%85%B3%E4%BA%8E%E5%AD%97%E4%BD%93%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    <id>https://linlshare.github.io/2018/09/25/design/typeface/关于字体的一些小知识/</id>
    <published>2018-09-25T03:04:00.000Z</published>
    <updated>2018-10-26T16:08:11.192Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Atypl"><a href="#Atypl" class="headerlink" title="Atypl"></a>Atypl</h3><p>ATypI 或 Association Typographique Internationale （国际排印协会）是一家致力于排版和类型设计的国际非营利组织。该协会的主要活动是每年秋季会议，每年在不同的全球城市举行。第62届年会于2018年9月11至15日在比利时安特卫普举办，主题为 “Type Legacies”（字体遗产）。</p><h3 id="字体类型（数字化字体，Digital-Font）"><a href="#字体类型（数字化字体，Digital-Font）" class="headerlink" title="字体类型（数字化字体，Digital Font）"></a>字体类型（数字化字体，Digital Font）</h3><ul><li><strong>点阵字体</strong>（Bitmap Font）通过点阵表现字形，其本质上只是一组图片。每一种字体变体都包括一组完整的字符，一个字符占一张图片。假设总字符数量为3，即包括三个字符，提供粗体和斜体的组合（即无、粗体、斜体、粗斜体四种变体），该字体总共有12张图片。</li><li><strong>轮廓字体</strong>（outline font），又称描边字体。这类字体使用贝兹曲线描述轮廓，可以通过简单的数学变形放大或缩小。但是很小的字体经常需要额外的信息（hints）指导笔画取舍进行润算，不然容易漆黑一团。<ul><li>PostScript，由Adobe公司为专业数字排版开发。它使用PostScript，字形以3次贝兹曲线描述。</li><li>OpentType，是一种最初由苹果计算机公司开发的字体技术。</li><li>TrueType，为了实现Windows和Macintosh系统兼容，而产生的一种新字体格式。</li></ul></li><li><strong>笔画字体</strong>（Stroke-based font），字形的轮廓由分离的笔画顶点和笔画外形（profile）定义。它优于轮廓字体之处在于：减少了定义字形的顶点数，允许同一组顶点生成不同的字体（不同的粗细，不同大小或不同衬线规则）所以节省大小。<ul><li>METAFONT，美国计算机科学家高德纳（Donald Knuth）于1977年着手字体制作软件，并于1979年发布的第一个版本METAFONT。与TrueType类似，它是一种数学上的字体描述系统，只是描述字符使用圆点（circular pen）。这意味着由METAFONT产生的字形，没有锐利的点（sharp points），即笔尖大小是有限的。</li></ul></li></ul><h3 id="带喇叭口的黑体"><a href="#带喇叭口的黑体" class="headerlink" title="带喇叭口的黑体"></a>带喇叭口的黑体</h3><blockquote><p>在设计横画起笔、收笔处向上下微微扩张，形成喇叭口的黑体。 </p><p>–摘自 <a href="http://blog.sina.com.cn/s/blog_6ac18e3a0102wge5.html" target="_blank" rel="noopener">有喇叭口的黑一体<em>蓬间雀</em>新浪博客</a></p></blockquote><blockquote><p>这种装饰源于早些时候的铅字印刷的铅字，由于当时技术的限制，笔画的端口会收缩，为了解决这个问题，当时设计铅字的工作人员就把黑体设计成喇叭口的。</p><p>– 摘自 <a href="https://baike.baidu.com/item/%E9%BB%91%E4%BD%93/10402" target="_blank" rel="noopener">黑体 -百度百科</a></p></blockquote><h3 id="Variable-Font"><a href="#Variable-Font" class="headerlink" title="Variable Font"></a>Variable Font</h3><p>2016 年 9 月在华沙召开的第 60 届 ATypI 年会上，Adobe, Apple, Google, Microsoft 4大巨头联合宣布了Variable Font 的字体规格- OpenType v1.8 。</p><h3 id="字体分类（按-末端是否有修饰）"><a href="#字体分类（按-末端是否有修饰）" class="headerlink" title="字体分类（按 末端是否有修饰）"></a>字体分类（按 末端是否有修饰）</h3><ul><li>衬线字体（Serif），衬线指的是字形笔画末端的装饰细节部分。</li><li>无衬线字体（Sans-Serif），与衬线字体相反，完全抛弃装饰衬线，只剩下主干，造型简明有力，更具现代感，起源也很晚。适用于标题、广告，瞬间的识别性高。</li></ul><h3 id="字体分类（按字符宽度）"><a href="#字体分类（按字符宽度）" class="headerlink" title="字体分类（按字符宽度）"></a>字体分类（按字符宽度）</h3><ul><li>等宽字体（Monospaced Font），指字符宽度相同的计算机字体。</li><li>比例字体（Proportional Font），与等宽字体相反，字符宽度不尽相同的计算机字体。</li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://zh.wikipedia.org/zh-cn/" target="_blank" rel="noopener">维基百科</a></li><li><a href="https://thetype.com/2016/09/10968/" target="_blank" rel="noopener">参数化设计与字体战争：从 OpenType 1.8 说起 -Type is Beautiful</a></li><li><a href="https://thetype.com/2018/09/15774/" target="_blank" rel="noopener">字谈字畅 082：安特卫普阿蒂皮</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Atypl&quot;&gt;&lt;a href=&quot;#Atypl&quot; class=&quot;headerlink&quot; title=&quot;Atypl&quot;&gt;&lt;/a&gt;Atypl&lt;/h3&gt;&lt;p&gt;ATypI 或 Association Typographique Internationale （国际排印协会）是
      
    
    </summary>
    
      <category term="design" scheme="https://linlshare.github.io/categories/design/"/>
    
      <category term="typeface" scheme="https://linlshare.github.io/categories/design/typeface/"/>
    
    
      <category term="字体设计" scheme="https://linlshare.github.io/tags/%E5%AD%97%E4%BD%93%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
</feed>
